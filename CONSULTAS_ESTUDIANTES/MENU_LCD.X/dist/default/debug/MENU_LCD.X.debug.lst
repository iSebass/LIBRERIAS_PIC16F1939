

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Oct 15 00:37:49 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1939
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext19,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext20,global,class=STRCODE,delta=2,noexec
    25                           	psect	stringtext21,global,class=STRCODE,delta=2,noexec
    26                           	psect	stringtext22,global,class=STRCODE,delta=2,noexec
    27                           	psect	stringtext23,global,class=STRCODE,delta=2,noexec
    28                           	psect	stringtext24,global,class=STRCODE,delta=2,noexec
    29                           	psect	cinit,global,class=CODE,merge=1,delta=2
    30                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    31                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    32                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    33                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    34                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    35                           	psect	text1,local,class=CODE,merge=1,delta=2
    36                           	psect	text2,local,class=CODE,merge=1,delta=2
    37                           	psect	text3,local,class=CODE,merge=1,delta=2
    38                           	psect	text4,local,class=CODE,merge=1,delta=2
    39                           	psect	text5,local,class=CODE,merge=1,delta=2
    40                           	psect	text6,local,class=CODE,merge=1,delta=2
    41                           	psect	text7,local,class=CODE,merge=1,delta=2
    42                           	psect	text8,local,class=CODE,merge=1,delta=2
    43                           	psect	text9,local,class=CODE,merge=1,delta=2
    44                           	psect	text10,local,class=CODE,merge=1,delta=2
    45                           	psect	text11,local,class=CODE,merge=1,delta=2
    46                           	psect	text12,local,class=CODE,merge=1,delta=2
    47                           	psect	text13,local,class=CODE,merge=1,delta=2
    48                           	psect	text14,local,class=CODE,merge=1,delta=2
    49                           	psect	text15,local,class=CODE,merge=1,delta=2
    50                           	psect	text16,local,class=CODE,merge=1,delta=2
    51                           	psect	text17,local,class=CODE,merge=1,delta=2
    52                           	psect	text18,local,class=CODE,merge=1,delta=2
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	dabs	1,0x7E,2
    55     0000                     
    56                           ; Generated 06/07/2023 GMT
    57                           ; 
    58                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F1939 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90     0000                     	;# 
    91     0001                     	;# 
    92     0002                     	;# 
    93     0003                     	;# 
    94     0004                     	;# 
    95     0005                     	;# 
    96     0006                     	;# 
    97     0007                     	;# 
    98     0008                     	;# 
    99     0009                     	;# 
   100     000A                     	;# 
   101     000B                     	;# 
   102     000C                     	;# 
   103     000D                     	;# 
   104     000E                     	;# 
   105     000F                     	;# 
   106     0010                     	;# 
   107     0011                     	;# 
   108     0012                     	;# 
   109     0013                     	;# 
   110     0015                     	;# 
   111     0016                     	;# 
   112     0016                     	;# 
   113     0017                     	;# 
   114     0018                     	;# 
   115     0019                     	;# 
   116     001A                     	;# 
   117     001B                     	;# 
   118     001C                     	;# 
   119     001E                     	;# 
   120     001F                     	;# 
   121     008C                     	;# 
   122     008D                     	;# 
   123     008E                     	;# 
   124     008F                     	;# 
   125     0090                     	;# 
   126     0091                     	;# 
   127     0092                     	;# 
   128     0093                     	;# 
   129     0095                     	;# 
   130     0096                     	;# 
   131     0097                     	;# 
   132     0098                     	;# 
   133     0099                     	;# 
   134     009A                     	;# 
   135     009B                     	;# 
   136     009B                     	;# 
   137     009C                     	;# 
   138     009D                     	;# 
   139     009E                     	;# 
   140     010C                     	;# 
   141     010D                     	;# 
   142     010E                     	;# 
   143     010F                     	;# 
   144     0110                     	;# 
   145     0111                     	;# 
   146     0112                     	;# 
   147     0113                     	;# 
   148     0114                     	;# 
   149     0115                     	;# 
   150     0116                     	;# 
   151     0117                     	;# 
   152     0118                     	;# 
   153     0119                     	;# 
   154     011A                     	;# 
   155     011B                     	;# 
   156     011D                     	;# 
   157     018C                     	;# 
   158     018D                     	;# 
   159     018F                     	;# 
   160     0190                     	;# 
   161     0191                     	;# 
   162     0191                     	;# 
   163     0192                     	;# 
   164     0193                     	;# 
   165     0193                     	;# 
   166     0193                     	;# 
   167     0194                     	;# 
   168     0195                     	;# 
   169     0196                     	;# 
   170     0199                     	;# 
   171     019A                     	;# 
   172     019B                     	;# 
   173     019B                     	;# 
   174     019B                     	;# 
   175     019B                     	;# 
   176     019C                     	;# 
   177     019C                     	;# 
   178     019D                     	;# 
   179     019E                     	;# 
   180     019F                     	;# 
   181     020D                     	;# 
   182     0210                     	;# 
   183     0211                     	;# 
   184     0212                     	;# 
   185     0213                     	;# 
   186     0214                     	;# 
   187     0215                     	;# 
   188     0215                     	;# 
   189     0216                     	;# 
   190     0217                     	;# 
   191     0291                     	;# 
   192     0291                     	;# 
   193     0292                     	;# 
   194     0293                     	;# 
   195     0294                     	;# 
   196     0295                     	;# 
   197     0295                     	;# 
   198     0296                     	;# 
   199     0298                     	;# 
   200     0298                     	;# 
   201     0299                     	;# 
   202     029A                     	;# 
   203     029B                     	;# 
   204     029C                     	;# 
   205     029C                     	;# 
   206     029D                     	;# 
   207     029E                     	;# 
   208     029F                     	;# 
   209     0311                     	;# 
   210     0311                     	;# 
   211     0312                     	;# 
   212     0313                     	;# 
   213     0314                     	;# 
   214     0315                     	;# 
   215     0315                     	;# 
   216     0316                     	;# 
   217     0318                     	;# 
   218     0318                     	;# 
   219     0319                     	;# 
   220     031A                     	;# 
   221     031C                     	;# 
   222     031C                     	;# 
   223     031D                     	;# 
   224     031E                     	;# 
   225     0394                     	;# 
   226     0395                     	;# 
   227     0396                     	;# 
   228     0415                     	;# 
   229     0416                     	;# 
   230     0417                     	;# 
   231     041C                     	;# 
   232     041D                     	;# 
   233     041E                     	;# 
   234     0791                     	;# 
   235     0792                     	;# 
   236     0793                     	;# 
   237     0794                     	;# 
   238     0795                     	;# 
   239     0798                     	;# 
   240     0799                     	;# 
   241     079A                     	;# 
   242     07A0                     	;# 
   243     07A1                     	;# 
   244     07A2                     	;# 
   245     07A3                     	;# 
   246     07A4                     	;# 
   247     07A5                     	;# 
   248     07A6                     	;# 
   249     07A7                     	;# 
   250     07A8                     	;# 
   251     07A9                     	;# 
   252     07AA                     	;# 
   253     07AB                     	;# 
   254     0FE4                     	;# 
   255     0FE5                     	;# 
   256     0FE6                     	;# 
   257     0FE7                     	;# 
   258     0FE8                     	;# 
   259     0FE9                     	;# 
   260     0FEA                     	;# 
   261     0FEB                     	;# 
   262     0FED                     	;# 
   263     0FEE                     	;# 
   264     0FEF                     	;# 
   265     0000                     	;# 
   266     0001                     	;# 
   267     0002                     	;# 
   268     0003                     	;# 
   269     0004                     	;# 
   270     0005                     	;# 
   271     0006                     	;# 
   272     0007                     	;# 
   273     0008                     	;# 
   274     0009                     	;# 
   275     000A                     	;# 
   276     000B                     	;# 
   277     000C                     	;# 
   278     000D                     	;# 
   279     000E                     	;# 
   280     000F                     	;# 
   281     0010                     	;# 
   282     0011                     	;# 
   283     0012                     	;# 
   284     0013                     	;# 
   285     0015                     	;# 
   286     0016                     	;# 
   287     0016                     	;# 
   288     0017                     	;# 
   289     0018                     	;# 
   290     0019                     	;# 
   291     001A                     	;# 
   292     001B                     	;# 
   293     001C                     	;# 
   294     001E                     	;# 
   295     001F                     	;# 
   296     008C                     	;# 
   297     008D                     	;# 
   298     008E                     	;# 
   299     008F                     	;# 
   300     0090                     	;# 
   301     0091                     	;# 
   302     0092                     	;# 
   303     0093                     	;# 
   304     0095                     	;# 
   305     0096                     	;# 
   306     0097                     	;# 
   307     0098                     	;# 
   308     0099                     	;# 
   309     009A                     	;# 
   310     009B                     	;# 
   311     009B                     	;# 
   312     009C                     	;# 
   313     009D                     	;# 
   314     009E                     	;# 
   315     010C                     	;# 
   316     010D                     	;# 
   317     010E                     	;# 
   318     010F                     	;# 
   319     0110                     	;# 
   320     0111                     	;# 
   321     0112                     	;# 
   322     0113                     	;# 
   323     0114                     	;# 
   324     0115                     	;# 
   325     0116                     	;# 
   326     0117                     	;# 
   327     0118                     	;# 
   328     0119                     	;# 
   329     011A                     	;# 
   330     011B                     	;# 
   331     011D                     	;# 
   332     018C                     	;# 
   333     018D                     	;# 
   334     018F                     	;# 
   335     0190                     	;# 
   336     0191                     	;# 
   337     0191                     	;# 
   338     0192                     	;# 
   339     0193                     	;# 
   340     0193                     	;# 
   341     0193                     	;# 
   342     0194                     	;# 
   343     0195                     	;# 
   344     0196                     	;# 
   345     0199                     	;# 
   346     019A                     	;# 
   347     019B                     	;# 
   348     019B                     	;# 
   349     019B                     	;# 
   350     019B                     	;# 
   351     019C                     	;# 
   352     019C                     	;# 
   353     019D                     	;# 
   354     019E                     	;# 
   355     019F                     	;# 
   356     020D                     	;# 
   357     0210                     	;# 
   358     0211                     	;# 
   359     0212                     	;# 
   360     0213                     	;# 
   361     0214                     	;# 
   362     0215                     	;# 
   363     0215                     	;# 
   364     0216                     	;# 
   365     0217                     	;# 
   366     0291                     	;# 
   367     0291                     	;# 
   368     0292                     	;# 
   369     0293                     	;# 
   370     0294                     	;# 
   371     0295                     	;# 
   372     0295                     	;# 
   373     0296                     	;# 
   374     0298                     	;# 
   375     0298                     	;# 
   376     0299                     	;# 
   377     029A                     	;# 
   378     029B                     	;# 
   379     029C                     	;# 
   380     029C                     	;# 
   381     029D                     	;# 
   382     029E                     	;# 
   383     029F                     	;# 
   384     0311                     	;# 
   385     0311                     	;# 
   386     0312                     	;# 
   387     0313                     	;# 
   388     0314                     	;# 
   389     0315                     	;# 
   390     0315                     	;# 
   391     0316                     	;# 
   392     0318                     	;# 
   393     0318                     	;# 
   394     0319                     	;# 
   395     031A                     	;# 
   396     031C                     	;# 
   397     031C                     	;# 
   398     031D                     	;# 
   399     031E                     	;# 
   400     0394                     	;# 
   401     0395                     	;# 
   402     0396                     	;# 
   403     0415                     	;# 
   404     0416                     	;# 
   405     0417                     	;# 
   406     041C                     	;# 
   407     041D                     	;# 
   408     041E                     	;# 
   409     0791                     	;# 
   410     0792                     	;# 
   411     0793                     	;# 
   412     0794                     	;# 
   413     0795                     	;# 
   414     0798                     	;# 
   415     0799                     	;# 
   416     079A                     	;# 
   417     07A0                     	;# 
   418     07A1                     	;# 
   419     07A2                     	;# 
   420     07A3                     	;# 
   421     07A4                     	;# 
   422     07A5                     	;# 
   423     07A6                     	;# 
   424     07A7                     	;# 
   425     07A8                     	;# 
   426     07A9                     	;# 
   427     07AA                     	;# 
   428     07AB                     	;# 
   429     0FE4                     	;# 
   430     0FE5                     	;# 
   431     0FE6                     	;# 
   432     0FE7                     	;# 
   433     0FE8                     	;# 
   434     0FE9                     	;# 
   435     0FEA                     	;# 
   436     0FEB                     	;# 
   437     0FED                     	;# 
   438     0FEE                     	;# 
   439     0FEF                     	;# 
   440     0000                     	;# 
   441     0001                     	;# 
   442     0002                     	;# 
   443     0003                     	;# 
   444     0004                     	;# 
   445     0005                     	;# 
   446     0006                     	;# 
   447     0007                     	;# 
   448     0008                     	;# 
   449     0009                     	;# 
   450     000A                     	;# 
   451     000B                     	;# 
   452     000C                     	;# 
   453     000D                     	;# 
   454     000E                     	;# 
   455     000F                     	;# 
   456     0010                     	;# 
   457     0011                     	;# 
   458     0012                     	;# 
   459     0013                     	;# 
   460     0015                     	;# 
   461     0016                     	;# 
   462     0016                     	;# 
   463     0017                     	;# 
   464     0018                     	;# 
   465     0019                     	;# 
   466     001A                     	;# 
   467     001B                     	;# 
   468     001C                     	;# 
   469     001E                     	;# 
   470     001F                     	;# 
   471     008C                     	;# 
   472     008D                     	;# 
   473     008E                     	;# 
   474     008F                     	;# 
   475     0090                     	;# 
   476     0091                     	;# 
   477     0092                     	;# 
   478     0093                     	;# 
   479     0095                     	;# 
   480     0096                     	;# 
   481     0097                     	;# 
   482     0098                     	;# 
   483     0099                     	;# 
   484     009A                     	;# 
   485     009B                     	;# 
   486     009B                     	;# 
   487     009C                     	;# 
   488     009D                     	;# 
   489     009E                     	;# 
   490     010C                     	;# 
   491     010D                     	;# 
   492     010E                     	;# 
   493     010F                     	;# 
   494     0110                     	;# 
   495     0111                     	;# 
   496     0112                     	;# 
   497     0113                     	;# 
   498     0114                     	;# 
   499     0115                     	;# 
   500     0116                     	;# 
   501     0117                     	;# 
   502     0118                     	;# 
   503     0119                     	;# 
   504     011A                     	;# 
   505     011B                     	;# 
   506     011D                     	;# 
   507     018C                     	;# 
   508     018D                     	;# 
   509     018F                     	;# 
   510     0190                     	;# 
   511     0191                     	;# 
   512     0191                     	;# 
   513     0192                     	;# 
   514     0193                     	;# 
   515     0193                     	;# 
   516     0193                     	;# 
   517     0194                     	;# 
   518     0195                     	;# 
   519     0196                     	;# 
   520     0199                     	;# 
   521     019A                     	;# 
   522     019B                     	;# 
   523     019B                     	;# 
   524     019B                     	;# 
   525     019B                     	;# 
   526     019C                     	;# 
   527     019C                     	;# 
   528     019D                     	;# 
   529     019E                     	;# 
   530     019F                     	;# 
   531     020D                     	;# 
   532     0210                     	;# 
   533     0211                     	;# 
   534     0212                     	;# 
   535     0213                     	;# 
   536     0214                     	;# 
   537     0215                     	;# 
   538     0215                     	;# 
   539     0216                     	;# 
   540     0217                     	;# 
   541     0291                     	;# 
   542     0291                     	;# 
   543     0292                     	;# 
   544     0293                     	;# 
   545     0294                     	;# 
   546     0295                     	;# 
   547     0295                     	;# 
   548     0296                     	;# 
   549     0298                     	;# 
   550     0298                     	;# 
   551     0299                     	;# 
   552     029A                     	;# 
   553     029B                     	;# 
   554     029C                     	;# 
   555     029C                     	;# 
   556     029D                     	;# 
   557     029E                     	;# 
   558     029F                     	;# 
   559     0311                     	;# 
   560     0311                     	;# 
   561     0312                     	;# 
   562     0313                     	;# 
   563     0314                     	;# 
   564     0315                     	;# 
   565     0315                     	;# 
   566     0316                     	;# 
   567     0318                     	;# 
   568     0318                     	;# 
   569     0319                     	;# 
   570     031A                     	;# 
   571     031C                     	;# 
   572     031C                     	;# 
   573     031D                     	;# 
   574     031E                     	;# 
   575     0394                     	;# 
   576     0395                     	;# 
   577     0396                     	;# 
   578     0415                     	;# 
   579     0416                     	;# 
   580     0417                     	;# 
   581     041C                     	;# 
   582     041D                     	;# 
   583     041E                     	;# 
   584     0791                     	;# 
   585     0792                     	;# 
   586     0793                     	;# 
   587     0794                     	;# 
   588     0795                     	;# 
   589     0798                     	;# 
   590     0799                     	;# 
   591     079A                     	;# 
   592     07A0                     	;# 
   593     07A1                     	;# 
   594     07A2                     	;# 
   595     07A3                     	;# 
   596     07A4                     	;# 
   597     07A5                     	;# 
   598     07A6                     	;# 
   599     07A7                     	;# 
   600     07A8                     	;# 
   601     07A9                     	;# 
   602     07AA                     	;# 
   603     07AB                     	;# 
   604     0FE4                     	;# 
   605     0FE5                     	;# 
   606     0FE6                     	;# 
   607     0FE7                     	;# 
   608     0FE8                     	;# 
   609     0FE9                     	;# 
   610     0FEA                     	;# 
   611     0FEB                     	;# 
   612     0FED                     	;# 
   613     0FEE                     	;# 
   614     0FEF                     	;# 
   615     0000                     	;# 
   616     0001                     	;# 
   617     0002                     	;# 
   618     0003                     	;# 
   619     0004                     	;# 
   620     0005                     	;# 
   621     0006                     	;# 
   622     0007                     	;# 
   623     0008                     	;# 
   624     0009                     	;# 
   625     000A                     	;# 
   626     000B                     	;# 
   627     000C                     	;# 
   628     000D                     	;# 
   629     000E                     	;# 
   630     000F                     	;# 
   631     0010                     	;# 
   632     0011                     	;# 
   633     0012                     	;# 
   634     0013                     	;# 
   635     0015                     	;# 
   636     0016                     	;# 
   637     0016                     	;# 
   638     0017                     	;# 
   639     0018                     	;# 
   640     0019                     	;# 
   641     001A                     	;# 
   642     001B                     	;# 
   643     001C                     	;# 
   644     001E                     	;# 
   645     001F                     	;# 
   646     008C                     	;# 
   647     008D                     	;# 
   648     008E                     	;# 
   649     008F                     	;# 
   650     0090                     	;# 
   651     0091                     	;# 
   652     0092                     	;# 
   653     0093                     	;# 
   654     0095                     	;# 
   655     0096                     	;# 
   656     0097                     	;# 
   657     0098                     	;# 
   658     0099                     	;# 
   659     009A                     	;# 
   660     009B                     	;# 
   661     009B                     	;# 
   662     009C                     	;# 
   663     009D                     	;# 
   664     009E                     	;# 
   665     010C                     	;# 
   666     010D                     	;# 
   667     010E                     	;# 
   668     010F                     	;# 
   669     0110                     	;# 
   670     0111                     	;# 
   671     0112                     	;# 
   672     0113                     	;# 
   673     0114                     	;# 
   674     0115                     	;# 
   675     0116                     	;# 
   676     0117                     	;# 
   677     0118                     	;# 
   678     0119                     	;# 
   679     011A                     	;# 
   680     011B                     	;# 
   681     011D                     	;# 
   682     018C                     	;# 
   683     018D                     	;# 
   684     018F                     	;# 
   685     0190                     	;# 
   686     0191                     	;# 
   687     0191                     	;# 
   688     0192                     	;# 
   689     0193                     	;# 
   690     0193                     	;# 
   691     0193                     	;# 
   692     0194                     	;# 
   693     0195                     	;# 
   694     0196                     	;# 
   695     0199                     	;# 
   696     019A                     	;# 
   697     019B                     	;# 
   698     019B                     	;# 
   699     019B                     	;# 
   700     019B                     	;# 
   701     019C                     	;# 
   702     019C                     	;# 
   703     019D                     	;# 
   704     019E                     	;# 
   705     019F                     	;# 
   706     020D                     	;# 
   707     0210                     	;# 
   708     0211                     	;# 
   709     0212                     	;# 
   710     0213                     	;# 
   711     0214                     	;# 
   712     0215                     	;# 
   713     0215                     	;# 
   714     0216                     	;# 
   715     0217                     	;# 
   716     0291                     	;# 
   717     0291                     	;# 
   718     0292                     	;# 
   719     0293                     	;# 
   720     0294                     	;# 
   721     0295                     	;# 
   722     0295                     	;# 
   723     0296                     	;# 
   724     0298                     	;# 
   725     0298                     	;# 
   726     0299                     	;# 
   727     029A                     	;# 
   728     029B                     	;# 
   729     029C                     	;# 
   730     029C                     	;# 
   731     029D                     	;# 
   732     029E                     	;# 
   733     029F                     	;# 
   734     0311                     	;# 
   735     0311                     	;# 
   736     0312                     	;# 
   737     0313                     	;# 
   738     0314                     	;# 
   739     0315                     	;# 
   740     0315                     	;# 
   741     0316                     	;# 
   742     0318                     	;# 
   743     0318                     	;# 
   744     0319                     	;# 
   745     031A                     	;# 
   746     031C                     	;# 
   747     031C                     	;# 
   748     031D                     	;# 
   749     031E                     	;# 
   750     0394                     	;# 
   751     0395                     	;# 
   752     0396                     	;# 
   753     0415                     	;# 
   754     0416                     	;# 
   755     0417                     	;# 
   756     041C                     	;# 
   757     041D                     	;# 
   758     041E                     	;# 
   759     0791                     	;# 
   760     0792                     	;# 
   761     0793                     	;# 
   762     0794                     	;# 
   763     0795                     	;# 
   764     0798                     	;# 
   765     0799                     	;# 
   766     079A                     	;# 
   767     07A0                     	;# 
   768     07A1                     	;# 
   769     07A2                     	;# 
   770     07A3                     	;# 
   771     07A4                     	;# 
   772     07A5                     	;# 
   773     07A6                     	;# 
   774     07A7                     	;# 
   775     07A8                     	;# 
   776     07A9                     	;# 
   777     07AA                     	;# 
   778     07AB                     	;# 
   779     0FE4                     	;# 
   780     0FE5                     	;# 
   781     0FE6                     	;# 
   782     0FE7                     	;# 
   783     0FE8                     	;# 
   784     0FE9                     	;# 
   785     0FEA                     	;# 
   786     0FEB                     	;# 
   787     0FED                     	;# 
   788     0FEE                     	;# 
   789     0FEF                     	;# 
   790     0000                     	;# 
   791     0001                     	;# 
   792     0002                     	;# 
   793     0003                     	;# 
   794     0004                     	;# 
   795     0005                     	;# 
   796     0006                     	;# 
   797     0007                     	;# 
   798     0008                     	;# 
   799     0009                     	;# 
   800     000A                     	;# 
   801     000B                     	;# 
   802     000C                     	;# 
   803     000D                     	;# 
   804     000E                     	;# 
   805     000F                     	;# 
   806     0010                     	;# 
   807     0011                     	;# 
   808     0012                     	;# 
   809     0013                     	;# 
   810     0015                     	;# 
   811     0016                     	;# 
   812     0016                     	;# 
   813     0017                     	;# 
   814     0018                     	;# 
   815     0019                     	;# 
   816     001A                     	;# 
   817     001B                     	;# 
   818     001C                     	;# 
   819     001E                     	;# 
   820     001F                     	;# 
   821     008C                     	;# 
   822     008D                     	;# 
   823     008E                     	;# 
   824     008F                     	;# 
   825     0090                     	;# 
   826     0091                     	;# 
   827     0092                     	;# 
   828     0093                     	;# 
   829     0095                     	;# 
   830     0096                     	;# 
   831     0097                     	;# 
   832     0098                     	;# 
   833     0099                     	;# 
   834     009A                     	;# 
   835     009B                     	;# 
   836     009B                     	;# 
   837     009C                     	;# 
   838     009D                     	;# 
   839     009E                     	;# 
   840     010C                     	;# 
   841     010D                     	;# 
   842     010E                     	;# 
   843     010F                     	;# 
   844     0110                     	;# 
   845     0111                     	;# 
   846     0112                     	;# 
   847     0113                     	;# 
   848     0114                     	;# 
   849     0115                     	;# 
   850     0116                     	;# 
   851     0117                     	;# 
   852     0118                     	;# 
   853     0119                     	;# 
   854     011A                     	;# 
   855     011B                     	;# 
   856     011D                     	;# 
   857     018C                     	;# 
   858     018D                     	;# 
   859     018F                     	;# 
   860     0190                     	;# 
   861     0191                     	;# 
   862     0191                     	;# 
   863     0192                     	;# 
   864     0193                     	;# 
   865     0193                     	;# 
   866     0193                     	;# 
   867     0194                     	;# 
   868     0195                     	;# 
   869     0196                     	;# 
   870     0199                     	;# 
   871     019A                     	;# 
   872     019B                     	;# 
   873     019B                     	;# 
   874     019B                     	;# 
   875     019B                     	;# 
   876     019C                     	;# 
   877     019C                     	;# 
   878     019D                     	;# 
   879     019E                     	;# 
   880     019F                     	;# 
   881     020D                     	;# 
   882     0210                     	;# 
   883     0211                     	;# 
   884     0212                     	;# 
   885     0213                     	;# 
   886     0214                     	;# 
   887     0215                     	;# 
   888     0215                     	;# 
   889     0216                     	;# 
   890     0217                     	;# 
   891     0291                     	;# 
   892     0291                     	;# 
   893     0292                     	;# 
   894     0293                     	;# 
   895     0294                     	;# 
   896     0295                     	;# 
   897     0295                     	;# 
   898     0296                     	;# 
   899     0298                     	;# 
   900     0298                     	;# 
   901     0299                     	;# 
   902     029A                     	;# 
   903     029B                     	;# 
   904     029C                     	;# 
   905     029C                     	;# 
   906     029D                     	;# 
   907     029E                     	;# 
   908     029F                     	;# 
   909     0311                     	;# 
   910     0311                     	;# 
   911     0312                     	;# 
   912     0313                     	;# 
   913     0314                     	;# 
   914     0315                     	;# 
   915     0315                     	;# 
   916     0316                     	;# 
   917     0318                     	;# 
   918     0318                     	;# 
   919     0319                     	;# 
   920     031A                     	;# 
   921     031C                     	;# 
   922     031C                     	;# 
   923     031D                     	;# 
   924     031E                     	;# 
   925     0394                     	;# 
   926     0395                     	;# 
   927     0396                     	;# 
   928     0415                     	;# 
   929     0416                     	;# 
   930     0417                     	;# 
   931     041C                     	;# 
   932     041D                     	;# 
   933     041E                     	;# 
   934     0791                     	;# 
   935     0792                     	;# 
   936     0793                     	;# 
   937     0794                     	;# 
   938     0795                     	;# 
   939     0798                     	;# 
   940     0799                     	;# 
   941     079A                     	;# 
   942     07A0                     	;# 
   943     07A1                     	;# 
   944     07A2                     	;# 
   945     07A3                     	;# 
   946     07A4                     	;# 
   947     07A5                     	;# 
   948     07A6                     	;# 
   949     07A7                     	;# 
   950     07A8                     	;# 
   951     07A9                     	;# 
   952     07AA                     	;# 
   953     07AB                     	;# 
   954     0FE4                     	;# 
   955     0FE5                     	;# 
   956     0FE6                     	;# 
   957     0FE7                     	;# 
   958     0FE8                     	;# 
   959     0FE9                     	;# 
   960     0FEA                     	;# 
   961     0FEB                     	;# 
   962     0FED                     	;# 
   963     0FEE                     	;# 
   964     0FEF                     	;# 
   965     0000                     	;# 
   966     0001                     	;# 
   967     0002                     	;# 
   968     0003                     	;# 
   969     0004                     	;# 
   970     0005                     	;# 
   971     0006                     	;# 
   972     0007                     	;# 
   973     0008                     	;# 
   974     0009                     	;# 
   975     000A                     	;# 
   976     000B                     	;# 
   977     000C                     	;# 
   978     000D                     	;# 
   979     000E                     	;# 
   980     000F                     	;# 
   981     0010                     	;# 
   982     0011                     	;# 
   983     0012                     	;# 
   984     0013                     	;# 
   985     0015                     	;# 
   986     0016                     	;# 
   987     0016                     	;# 
   988     0017                     	;# 
   989     0018                     	;# 
   990     0019                     	;# 
   991     001A                     	;# 
   992     001B                     	;# 
   993     001C                     	;# 
   994     001E                     	;# 
   995     001F                     	;# 
   996     008C                     	;# 
   997     008D                     	;# 
   998     008E                     	;# 
   999     008F                     	;# 
  1000     0090                     	;# 
  1001     0091                     	;# 
  1002     0092                     	;# 
  1003     0093                     	;# 
  1004     0095                     	;# 
  1005     0096                     	;# 
  1006     0097                     	;# 
  1007     0098                     	;# 
  1008     0099                     	;# 
  1009     009A                     	;# 
  1010     009B                     	;# 
  1011     009B                     	;# 
  1012     009C                     	;# 
  1013     009D                     	;# 
  1014     009E                     	;# 
  1015     010C                     	;# 
  1016     010D                     	;# 
  1017     010E                     	;# 
  1018     010F                     	;# 
  1019     0110                     	;# 
  1020     0111                     	;# 
  1021     0112                     	;# 
  1022     0113                     	;# 
  1023     0114                     	;# 
  1024     0115                     	;# 
  1025     0116                     	;# 
  1026     0117                     	;# 
  1027     0118                     	;# 
  1028     0119                     	;# 
  1029     011A                     	;# 
  1030     011B                     	;# 
  1031     011D                     	;# 
  1032     018C                     	;# 
  1033     018D                     	;# 
  1034     018F                     	;# 
  1035     0190                     	;# 
  1036     0191                     	;# 
  1037     0191                     	;# 
  1038     0192                     	;# 
  1039     0193                     	;# 
  1040     0193                     	;# 
  1041     0193                     	;# 
  1042     0194                     	;# 
  1043     0195                     	;# 
  1044     0196                     	;# 
  1045     0199                     	;# 
  1046     019A                     	;# 
  1047     019B                     	;# 
  1048     019B                     	;# 
  1049     019B                     	;# 
  1050     019B                     	;# 
  1051     019C                     	;# 
  1052     019C                     	;# 
  1053     019D                     	;# 
  1054     019E                     	;# 
  1055     019F                     	;# 
  1056     020D                     	;# 
  1057     0210                     	;# 
  1058     0211                     	;# 
  1059     0212                     	;# 
  1060     0213                     	;# 
  1061     0214                     	;# 
  1062     0215                     	;# 
  1063     0215                     	;# 
  1064     0216                     	;# 
  1065     0217                     	;# 
  1066     0291                     	;# 
  1067     0291                     	;# 
  1068     0292                     	;# 
  1069     0293                     	;# 
  1070     0294                     	;# 
  1071     0295                     	;# 
  1072     0295                     	;# 
  1073     0296                     	;# 
  1074     0298                     	;# 
  1075     0298                     	;# 
  1076     0299                     	;# 
  1077     029A                     	;# 
  1078     029B                     	;# 
  1079     029C                     	;# 
  1080     029C                     	;# 
  1081     029D                     	;# 
  1082     029E                     	;# 
  1083     029F                     	;# 
  1084     0311                     	;# 
  1085     0311                     	;# 
  1086     0312                     	;# 
  1087     0313                     	;# 
  1088     0314                     	;# 
  1089     0315                     	;# 
  1090     0315                     	;# 
  1091     0316                     	;# 
  1092     0318                     	;# 
  1093     0318                     	;# 
  1094     0319                     	;# 
  1095     031A                     	;# 
  1096     031C                     	;# 
  1097     031C                     	;# 
  1098     031D                     	;# 
  1099     031E                     	;# 
  1100     0394                     	;# 
  1101     0395                     	;# 
  1102     0396                     	;# 
  1103     0415                     	;# 
  1104     0416                     	;# 
  1105     0417                     	;# 
  1106     041C                     	;# 
  1107     041D                     	;# 
  1108     041E                     	;# 
  1109     0791                     	;# 
  1110     0792                     	;# 
  1111     0793                     	;# 
  1112     0794                     	;# 
  1113     0795                     	;# 
  1114     0798                     	;# 
  1115     0799                     	;# 
  1116     079A                     	;# 
  1117     07A0                     	;# 
  1118     07A1                     	;# 
  1119     07A2                     	;# 
  1120     07A3                     	;# 
  1121     07A4                     	;# 
  1122     07A5                     	;# 
  1123     07A6                     	;# 
  1124     07A7                     	;# 
  1125     07A8                     	;# 
  1126     07A9                     	;# 
  1127     07AA                     	;# 
  1128     07AB                     	;# 
  1129     0FE4                     	;# 
  1130     0FE5                     	;# 
  1131     0FE6                     	;# 
  1132     0FE7                     	;# 
  1133     0FE8                     	;# 
  1134     0FE9                     	;# 
  1135     0FEA                     	;# 
  1136     0FEB                     	;# 
  1137     0FED                     	;# 
  1138     0FEE                     	;# 
  1139     0FEF                     	;# 
  1140                           
  1141                           	psect	idataBANK0
  1142     04C4                     __pidataBANK0:
  1143                           
  1144                           ;initializer for _op
  1145     04C4  3401               	retlw	1
  1146     008D                     _TRISBbits	set	141
  1147     008C                     _TRISAbits	set	140
  1148     0098                     _OSCTUNE	set	152
  1149     0099                     _OSCCON	set	153
  1150     008F                     _TRISDbits	set	143
  1151     009B                     _ADRESL	set	155
  1152     009C                     _ADRESH	set	156
  1153     009D                     _ADCON0bits	set	157
  1154     009E                     _ADCON1bits	set	158
  1155     010D                     _LATBbits	set	269
  1156     010C                     _LATAbits	set	268
  1157     0116                     _BORCON	set	278
  1158     010F                     _LATDbits	set	271
  1159     018D                     _ANSELBbits	set	397
  1160     018C                     _ANSELAbits	set	396
  1161                           
  1162                           	psect	stringtext1
  1163     0800                     __pstringtext1:
  1164     0800                     STR_4:
  1165     0800  344F               	retlw	79	;'O'
  1166     0801  3450               	retlw	80	;'P'
  1167     0802  343A               	retlw	58	;':'
  1168     0803  3420               	retlw	32	;' '
  1169     0804  3420               	retlw	32	;' '
  1170     0805  3420               	retlw	32	;' '
  1171     0806  3420               	retlw	32	;' '
  1172     0807  3420               	retlw	32	;' '
  1173     0808  3420               	retlw	32	;' '
  1174     0809  3420               	retlw	32	;' '
  1175     080A  3420               	retlw	32	;' '
  1176     080B  3420               	retlw	32	;' '
  1177     080C  3420               	retlw	32	;' '
  1178     080D  3420               	retlw	32	;' '
  1179     080E  3420               	retlw	32	;' '
  1180     080F  3420               	retlw	32	;' '
  1181     0810  3420               	retlw	32	;' '
  1182     0811  3420               	retlw	32	;' '
  1183     0812  3420               	retlw	32	;' '
  1184     0813  3420               	retlw	32	;' '
  1185     0814  3400               	retlw	0
  1186                           
  1187                           	psect	stringtext2
  1188     0815                     __pstringtext2:
  1189     0815                     STR_7:
  1190     0815  344C               	retlw	76	;'L'
  1191     0816  3444               	retlw	68	;'D'
  1192     0817  3452               	retlw	82	;'R'
  1193     0818  343A               	retlw	58	;':'
  1194     0819  3420               	retlw	32	;' '
  1195     081A  3420               	retlw	32	;' '
  1196     081B  3420               	retlw	32	;' '
  1197     081C  3420               	retlw	32	;' '
  1198     081D  3420               	retlw	32	;' '
  1199     081E  3420               	retlw	32	;' '
  1200     081F  3420               	retlw	32	;' '
  1201     0820  3420               	retlw	32	;' '
  1202     0821  3420               	retlw	32	;' '
  1203     0822  3420               	retlw	32	;' '
  1204     0823  3420               	retlw	32	;' '
  1205     0824  3420               	retlw	32	;' '
  1206     0825  3420               	retlw	32	;' '
  1207     0826  3420               	retlw	32	;' '
  1208     0827  3420               	retlw	32	;' '
  1209     0828  3420               	retlw	32	;' '
  1210     0829  3400               	retlw	0
  1211                           
  1212                           	psect	stringtext3
  1213     082A                     __pstringtext3:
  1214     082A                     STR_6:
  1215     082A  344C               	retlw	76	;'L'
  1216     082B  344D               	retlw	77	;'M'
  1217     082C  3433               	retlw	51	;'3'
  1218     082D  3435               	retlw	53	;'5'
  1219     082E  343A               	retlw	58	;':'
  1220     082F  3420               	retlw	32	;' '
  1221     0830  3420               	retlw	32	;' '
  1222     0831  3420               	retlw	32	;' '
  1223     0832  3420               	retlw	32	;' '
  1224     0833  3420               	retlw	32	;' '
  1225     0834  3420               	retlw	32	;' '
  1226     0835  3420               	retlw	32	;' '
  1227     0836  3420               	retlw	32	;' '
  1228     0837  3420               	retlw	32	;' '
  1229     0838  3420               	retlw	32	;' '
  1230     0839  3420               	retlw	32	;' '
  1231     083A  3420               	retlw	32	;' '
  1232     083B  3420               	retlw	32	;' '
  1233     083C  3420               	retlw	32	;' '
  1234     083D  3420               	retlw	32	;' '
  1235     083E  3400               	retlw	0
  1236                           
  1237                           	psect	stringtext4
  1238     083F                     __pstringtext4:
  1239     083F                     STR_19:
  1240     083F  3432               	retlw	50	;'2'
  1241     0840  342E               	retlw	46	;'.'
  1242     0841  344F               	retlw	79	;'O'
  1243     0842  3446               	retlw	70	;'F'
  1244     0843  3446               	retlw	70	;'F'
  1245     0844  3420               	retlw	32	;' '
  1246     0845  3420               	retlw	32	;' '
  1247     0846  3420               	retlw	32	;' '
  1248     0847  3420               	retlw	32	;' '
  1249     0848  3420               	retlw	32	;' '
  1250     0849  3420               	retlw	32	;' '
  1251     084A  3420               	retlw	32	;' '
  1252     084B  3420               	retlw	32	;' '
  1253     084C  3420               	retlw	32	;' '
  1254     084D  3420               	retlw	32	;' '
  1255     084E  3420               	retlw	32	;' '
  1256     084F  3420               	retlw	32	;' '
  1257     0850  3420               	retlw	32	;' '
  1258     0851  3420               	retlw	32	;' '
  1259     0852  3420               	retlw	32	;' '
  1260     0853  3400               	retlw	0
  1261                           
  1262                           	psect	stringtext5
  1263     0854                     __pstringtext5:
  1264     0854                     STR_11:
  1265     0854  3432               	retlw	50	;'2'
  1266     0855  342E               	retlw	46	;'.'
  1267     0856  344D               	retlw	77	;'M'
  1268     0857  344F               	retlw	79	;'O'
  1269     0858  3454               	retlw	84	;'T'
  1270     0859  344F               	retlw	79	;'O'
  1271     085A  3452               	retlw	82	;'R'
  1272     085B  3442               	retlw	66	;'B'
  1273     085C  3420               	retlw	32	;' '
  1274     085D  3420               	retlw	32	;' '
  1275     085E  3420               	retlw	32	;' '
  1276     085F  3420               	retlw	32	;' '
  1277     0860  3420               	retlw	32	;' '
  1278     0861  3420               	retlw	32	;' '
  1279     0862  3420               	retlw	32	;' '
  1280     0863  3420               	retlw	32	;' '
  1281     0864  3420               	retlw	32	;' '
  1282     0865  3420               	retlw	32	;' '
  1283     0866  3420               	retlw	32	;' '
  1284     0867  3420               	retlw	32	;' '
  1285     0868  3400               	retlw	0
  1286                           
  1287                           	psect	stringtext6
  1288     0869                     __pstringtext6:
  1289     0869                     STR_3:
  1290     0869  3432               	retlw	50	;'2'
  1291     086A  342E               	retlw	46	;'.'
  1292     086B  3453               	retlw	83	;'S'
  1293     086C  3445               	retlw	69	;'E'
  1294     086D  344E               	retlw	78	;'N'
  1295     086E  3453               	retlw	83	;'S'
  1296     086F  344F               	retlw	79	;'O'
  1297     0870  3452               	retlw	82	;'R'
  1298     0871  3445               	retlw	69	;'E'
  1299     0872  3453               	retlw	83	;'S'
  1300     0873  3420               	retlw	32	;' '
  1301     0874  3420               	retlw	32	;' '
  1302     0875  3420               	retlw	32	;' '
  1303     0876  3420               	retlw	32	;' '
  1304     0877  3420               	retlw	32	;' '
  1305     0878  3420               	retlw	32	;' '
  1306     0879  3420               	retlw	32	;' '
  1307     087A  3420               	retlw	32	;' '
  1308     087B  3420               	retlw	32	;' '
  1309     087C  3420               	retlw	32	;' '
  1310     087D  3400               	retlw	0
  1311                           
  1312                           	psect	stringtext7
  1313     087E                     __pstringtext7:
  1314     087E                     STR_8:
  1315     087E  3453               	retlw	83	;'S'
  1316     087F  3445               	retlw	69	;'E'
  1317     0880  344C               	retlw	76	;'L'
  1318     0881  3420               	retlw	32	;' '
  1319     0882  3454               	retlw	84	;'T'
  1320     0883  344F               	retlw	79	;'O'
  1321     0884  3420               	retlw	32	;' '
  1322     0885  3442               	retlw	66	;'B'
  1323     0886  3441               	retlw	65	;'A'
  1324     0887  3443               	retlw	67	;'C'
  1325     0888  344B               	retlw	75	;'K'
  1326     0889  3420               	retlw	32	;' '
  1327     088A  3420               	retlw	32	;' '
  1328     088B  3420               	retlw	32	;' '
  1329     088C  3420               	retlw	32	;' '
  1330     088D  3420               	retlw	32	;' '
  1331     088E  3420               	retlw	32	;' '
  1332     088F  3420               	retlw	32	;' '
  1333     0890  3420               	retlw	32	;' '
  1334     0891  3420               	retlw	32	;' '
  1335     0892  3400               	retlw	0
  1336                           
  1337                           	psect	stringtext8
  1338     0893                     __pstringtext8:
  1339     0893                     STR_14:
  1340     0893  3431               	retlw	49	;'1'
  1341     0894  342E               	retlw	46	;'.'
  1342     0895  344C               	retlw	76	;'L'
  1343     0896  3431               	retlw	49	;'1'
  1344     0897  3420               	retlw	32	;' '
  1345     0898  3420               	retlw	32	;' '
  1346     0899  3420               	retlw	32	;' '
  1347     089A  3420               	retlw	32	;' '
  1348     089B  3433               	retlw	51	;'3'
  1349     089C  342E               	retlw	46	;'.'
  1350     089D  344C               	retlw	76	;'L'
  1351     089E  3433               	retlw	51	;'3'
  1352     089F  3420               	retlw	32	;' '
  1353     08A0  3420               	retlw	32	;' '
  1354     08A1  3420               	retlw	32	;' '
  1355     08A2  3420               	retlw	32	;' '
  1356     08A3  3420               	retlw	32	;' '
  1357     08A4  3420               	retlw	32	;' '
  1358     08A5  3420               	retlw	32	;' '
  1359     08A6  3420               	retlw	32	;' '
  1360     08A7  3400               	retlw	0
  1361                           
  1362                           	psect	stringtext9
  1363     08A8                     __pstringtext9:
  1364     08A8                     STR_18:
  1365     08A8  3431               	retlw	49	;'1'
  1366     08A9  342E               	retlw	46	;'.'
  1367     08AA  344F               	retlw	79	;'O'
  1368     08AB  344E               	retlw	78	;'N'
  1369     08AC  3420               	retlw	32	;' '
  1370     08AD  3420               	retlw	32	;' '
  1371     08AE  3420               	retlw	32	;' '
  1372     08AF  3420               	retlw	32	;' '
  1373     08B0  3433               	retlw	51	;'3'
  1374     08B1  342E               	retlw	46	;'.'
  1375     08B2  3442               	retlw	66	;'B'
  1376     08B3  3441               	retlw	65	;'A'
  1377     08B4  3443               	retlw	67	;'C'
  1378     08B5  344B               	retlw	75	;'K'
  1379     08B6  3420               	retlw	32	;' '
  1380     08B7  3420               	retlw	32	;' '
  1381     08B8  3420               	retlw	32	;' '
  1382     08B9  3420               	retlw	32	;' '
  1383     08BA  3420               	retlw	32	;' '
  1384     08BB  3420               	retlw	32	;' '
  1385     08BC  3400               	retlw	0
  1386                           
  1387                           	psect	stringtext10
  1388     08BD                     __pstringtext10:
  1389     08BD                     STR_15:
  1390     08BD  3432               	retlw	50	;'2'
  1391     08BE  342E               	retlw	46	;'.'
  1392     08BF  344C               	retlw	76	;'L'
  1393     08C0  3432               	retlw	50	;'2'
  1394     08C1  3420               	retlw	32	;' '
  1395     08C2  3420               	retlw	32	;' '
  1396     08C3  3420               	retlw	32	;' '
  1397     08C4  3420               	retlw	32	;' '
  1398     08C5  3434               	retlw	52	;'4'
  1399     08C6  342E               	retlw	46	;'.'
  1400     08C7  3442               	retlw	66	;'B'
  1401     08C8  3441               	retlw	65	;'A'
  1402     08C9  3443               	retlw	67	;'C'
  1403     08CA  344B               	retlw	75	;'K'
  1404     08CB  3420               	retlw	32	;' '
  1405     08CC  3420               	retlw	32	;' '
  1406     08CD  3420               	retlw	32	;' '
  1407     08CE  3420               	retlw	32	;' '
  1408     08CF  3420               	retlw	32	;' '
  1409     08D0  3420               	retlw	32	;' '
  1410     08D1  3400               	retlw	0
  1411                           
  1412                           	psect	stringtext11
  1413     08D2                     __pstringtext11:
  1414     08D2                     STR_9:
  1415     08D2  3420               	retlw	32	;' '
  1416     08D3  3420               	retlw	32	;' '
  1417     08D4  3420               	retlw	32	;' '
  1418     08D5  344D               	retlw	77	;'M'
  1419     08D6  3445               	retlw	69	;'E'
  1420     08D7  344E               	retlw	78	;'N'
  1421     08D8  3455               	retlw	85	;'U'
  1422     08D9  3420               	retlw	32	;' '
  1423     08DA  344D               	retlw	77	;'M'
  1424     08DB  344F               	retlw	79	;'O'
  1425     08DC  3454               	retlw	84	;'T'
  1426     08DD  344F               	retlw	79	;'O'
  1427     08DE  3452               	retlw	82	;'R'
  1428     08DF  3445               	retlw	69	;'E'
  1429     08E0  3453               	retlw	83	;'S'
  1430     08E1  3420               	retlw	32	;' '
  1431     08E2  3420               	retlw	32	;' '
  1432     08E3  3420               	retlw	32	;' '
  1433     08E4  3420               	retlw	32	;' '
  1434     08E5  3420               	retlw	32	;' '
  1435     08E6  3400               	retlw	0
  1436                           
  1437                           	psect	stringtext12
  1438     08E7                     __pstringtext12:
  1439     08E7                     STR_17:
  1440     08E7  3420               	retlw	32	;' '
  1441     08E8  3420               	retlw	32	;' '
  1442     08E9  3420               	retlw	32	;' '
  1443     08EA  3420               	retlw	32	;' '
  1444     08EB  3420               	retlw	32	;' '
  1445     08EC  3420               	retlw	32	;' '
  1446     08ED  3420               	retlw	32	;' '
  1447     08EE  344D               	retlw	77	;'M'
  1448     08EF  3445               	retlw	69	;'E'
  1449     08F0  344E               	retlw	78	;'N'
  1450     08F1  3455               	retlw	85	;'U'
  1451     08F2  3420               	retlw	32	;' '
  1452     08F3  344C               	retlw	76	;'L'
  1453     08F4  3445               	retlw	69	;'E'
  1454     08F5  3444               	retlw	68	;'D'
  1455     08F6  3431               	retlw	49	;'1'
  1456     08F7  3420               	retlw	32	;' '
  1457     08F8  3420               	retlw	32	;' '
  1458     08F9  3420               	retlw	32	;' '
  1459     08FA  3420               	retlw	32	;' '
  1460     08FB  3400               	retlw	0
  1461                           
  1462                           	psect	stringtext13
  1463     08FC                     __pstringtext13:
  1464     08FC                     STR_21:
  1465     08FC  3420               	retlw	32	;' '
  1466     08FD  3420               	retlw	32	;' '
  1467     08FE  3420               	retlw	32	;' '
  1468     08FF  3420               	retlw	32	;' '
  1469     0900  3420               	retlw	32	;' '
  1470     0901  3420               	retlw	32	;' '
  1471     0902  3420               	retlw	32	;' '
  1472     0903  344D               	retlw	77	;'M'
  1473     0904  3445               	retlw	69	;'E'
  1474     0905  344E               	retlw	78	;'N'
  1475     0906  3455               	retlw	85	;'U'
  1476     0907  3420               	retlw	32	;' '
  1477     0908  344C               	retlw	76	;'L'
  1478     0909  3445               	retlw	69	;'E'
  1479     090A  3444               	retlw	68	;'D'
  1480     090B  3432               	retlw	50	;'2'
  1481     090C  3420               	retlw	32	;' '
  1482     090D  3420               	retlw	32	;' '
  1483     090E  3420               	retlw	32	;' '
  1484     090F  3420               	retlw	32	;' '
  1485     0910  3400               	retlw	0
  1486                           
  1487                           	psect	stringtext14
  1488     0911                     __pstringtext14:
  1489     0911                     STR_25:
  1490     0911  3420               	retlw	32	;' '
  1491     0912  3420               	retlw	32	;' '
  1492     0913  3420               	retlw	32	;' '
  1493     0914  3420               	retlw	32	;' '
  1494     0915  3420               	retlw	32	;' '
  1495     0916  3420               	retlw	32	;' '
  1496     0917  3420               	retlw	32	;' '
  1497     0918  344D               	retlw	77	;'M'
  1498     0919  3445               	retlw	69	;'E'
  1499     091A  344E               	retlw	78	;'N'
  1500     091B  3455               	retlw	85	;'U'
  1501     091C  3420               	retlw	32	;' '
  1502     091D  344C               	retlw	76	;'L'
  1503     091E  3445               	retlw	69	;'E'
  1504     091F  3444               	retlw	68	;'D'
  1505     0920  3433               	retlw	51	;'3'
  1506     0921  3420               	retlw	32	;' '
  1507     0922  3420               	retlw	32	;' '
  1508     0923  3420               	retlw	32	;' '
  1509     0924  3420               	retlw	32	;' '
  1510     0925  3400               	retlw	0
  1511                           
  1512                           	psect	stringtext15
  1513     0926                     __pstringtext15:
  1514     0926                     STR_29:
  1515     0926  3420               	retlw	32	;' '
  1516     0927  3420               	retlw	32	;' '
  1517     0928  3420               	retlw	32	;' '
  1518     0929  3420               	retlw	32	;' '
  1519     092A  3420               	retlw	32	;' '
  1520     092B  344D               	retlw	77	;'M'
  1521     092C  3445               	retlw	69	;'E'
  1522     092D  344E               	retlw	78	;'N'
  1523     092E  3455               	retlw	85	;'U'
  1524     092F  3420               	retlw	32	;' '
  1525     0930  344D               	retlw	77	;'M'
  1526     0931  344F               	retlw	79	;'O'
  1527     0932  3454               	retlw	84	;'T'
  1528     0933  344F               	retlw	79	;'O'
  1529     0934  3452               	retlw	82	;'R'
  1530     0935  3441               	retlw	65	;'A'
  1531     0936  3420               	retlw	32	;' '
  1532     0937  3420               	retlw	32	;' '
  1533     0938  3420               	retlw	32	;' '
  1534     0939  3420               	retlw	32	;' '
  1535     093A  3400               	retlw	0
  1536                           
  1537                           	psect	stringtext16
  1538     093B                     __pstringtext16:
  1539     093B                     STR_33:
  1540     093B  3420               	retlw	32	;' '
  1541     093C  3420               	retlw	32	;' '
  1542     093D  3420               	retlw	32	;' '
  1543     093E  3420               	retlw	32	;' '
  1544     093F  3420               	retlw	32	;' '
  1545     0940  344D               	retlw	77	;'M'
  1546     0941  3445               	retlw	69	;'E'
  1547     0942  344E               	retlw	78	;'N'
  1548     0943  3455               	retlw	85	;'U'
  1549     0944  3420               	retlw	32	;' '
  1550     0945  344D               	retlw	77	;'M'
  1551     0946  344F               	retlw	79	;'O'
  1552     0947  3454               	retlw	84	;'T'
  1553     0948  344F               	retlw	79	;'O'
  1554     0949  3452               	retlw	82	;'R'
  1555     094A  3442               	retlw	66	;'B'
  1556     094B  3420               	retlw	32	;' '
  1557     094C  3420               	retlw	32	;' '
  1558     094D  3420               	retlw	32	;' '
  1559     094E  3420               	retlw	32	;' '
  1560     094F  3400               	retlw	0
  1561                           
  1562                           	psect	stringtext17
  1563     0950                     __pstringtext17:
  1564     0950                     STR_30:
  1565     0950  3431               	retlw	49	;'1'
  1566     0951  342E               	retlw	46	;'.'
  1567     0952  3454               	retlw	84	;'T'
  1568     0953  3455               	retlw	85	;'U'
  1569     0954  3452               	retlw	82	;'R'
  1570     0955  344E               	retlw	78	;'N'
  1571     0956  3452               	retlw	82	;'R'
  1572     0957  3420               	retlw	32	;' '
  1573     0958  3420               	retlw	32	;' '
  1574     0959  3420               	retlw	32	;' '
  1575     095A  3420               	retlw	32	;' '
  1576     095B  3433               	retlw	51	;'3'
  1577     095C  342E               	retlw	46	;'.'
  1578     095D  344F               	retlw	79	;'O'
  1579     095E  3446               	retlw	70	;'F'
  1580     095F  3446               	retlw	70	;'F'
  1581     0960  3420               	retlw	32	;' '
  1582     0961  3420               	retlw	32	;' '
  1583     0962  3420               	retlw	32	;' '
  1584     0963  3420               	retlw	32	;' '
  1585     0964  3400               	retlw	0
  1586                           
  1587                           	psect	stringtext18
  1588     0965                     __pstringtext18:
  1589     0965                     STR_1:
  1590     0965  3420               	retlw	32	;' '
  1591     0966  3420               	retlw	32	;' '
  1592     0967  3420               	retlw	32	;' '
  1593     0968  3420               	retlw	32	;' '
  1594     0969  3420               	retlw	32	;' '
  1595     096A  3420               	retlw	32	;' '
  1596     096B  3420               	retlw	32	;' '
  1597     096C  344D               	retlw	77	;'M'
  1598     096D  3445               	retlw	69	;'E'
  1599     096E  344E               	retlw	78	;'N'
  1600     096F  3455               	retlw	85	;'U'
  1601     0970  3420               	retlw	32	;' '
  1602     0971  3450               	retlw	80	;'P'
  1603     0972  3450               	retlw	80	;'P'
  1604     0973  3441               	retlw	65	;'A'
  1605     0974  344C               	retlw	76	;'L'
  1606     0975  3420               	retlw	32	;' '
  1607     0976  3420               	retlw	32	;' '
  1608     0977  3420               	retlw	32	;' '
  1609     0978  3420               	retlw	32	;' '
  1610     0979  3400               	retlw	0
  1611                           
  1612                           	psect	stringtext19
  1613     097A                     __pstringtext19:
  1614     097A                     STR_13:
  1615     097A  3420               	retlw	32	;' '
  1616     097B  3420               	retlw	32	;' '
  1617     097C  3420               	retlw	32	;' '
  1618     097D  3420               	retlw	32	;' '
  1619     097E  3420               	retlw	32	;' '
  1620     097F  3420               	retlw	32	;' '
  1621     0980  3420               	retlw	32	;' '
  1622     0981  344D               	retlw	77	;'M'
  1623     0982  3445               	retlw	69	;'E'
  1624     0983  344E               	retlw	78	;'N'
  1625     0984  3455               	retlw	85	;'U'
  1626     0985  3420               	retlw	32	;' '
  1627     0986  344C               	retlw	76	;'L'
  1628     0987  3445               	retlw	69	;'E'
  1629     0988  3444               	retlw	68	;'D'
  1630     0989  3453               	retlw	83	;'S'
  1631     098A  3420               	retlw	32	;' '
  1632     098B  3420               	retlw	32	;' '
  1633     098C  3420               	retlw	32	;' '
  1634     098D  3420               	retlw	32	;' '
  1635     098E  3400               	retlw	0
  1636                           
  1637                           	psect	stringtext20
  1638     098F                     __pstringtext20:
  1639     098F                     STR_5:
  1640     098F  3420               	retlw	32	;' '
  1641     0990  3420               	retlw	32	;' '
  1642     0991  3420               	retlw	32	;' '
  1643     0992  344D               	retlw	77	;'M'
  1644     0993  3445               	retlw	69	;'E'
  1645     0994  344E               	retlw	78	;'N'
  1646     0995  3455               	retlw	85	;'U'
  1647     0996  3420               	retlw	32	;' '
  1648     0997  3453               	retlw	83	;'S'
  1649     0998  3445               	retlw	69	;'E'
  1650     0999  344E               	retlw	78	;'N'
  1651     099A  3453               	retlw	83	;'S'
  1652     099B  344F               	retlw	79	;'O'
  1653     099C  3452               	retlw	82	;'R'
  1654     099D  3445               	retlw	69	;'E'
  1655     099E  3453               	retlw	83	;'S'
  1656     099F  3420               	retlw	32	;' '
  1657     09A0  3420               	retlw	32	;' '
  1658     09A1  3420               	retlw	32	;' '
  1659     09A2  3420               	retlw	32	;' '
  1660     09A3  3400               	retlw	0
  1661                           
  1662                           	psect	stringtext21
  1663     09A4                     __pstringtext21:
  1664     09A4                     STR_31:
  1665     09A4  3432               	retlw	50	;'2'
  1666     09A5  342E               	retlw	46	;'.'
  1667     09A6  3454               	retlw	84	;'T'
  1668     09A7  3455               	retlw	85	;'U'
  1669     09A8  3452               	retlw	82	;'R'
  1670     09A9  344E               	retlw	78	;'N'
  1671     09AA  344C               	retlw	76	;'L'
  1672     09AB  3420               	retlw	32	;' '
  1673     09AC  3420               	retlw	32	;' '
  1674     09AD  3420               	retlw	32	;' '
  1675     09AE  3420               	retlw	32	;' '
  1676     09AF  3434               	retlw	52	;'4'
  1677     09B0  342E               	retlw	46	;'.'
  1678     09B1  3442               	retlw	66	;'B'
  1679     09B2  3441               	retlw	65	;'A'
  1680     09B3  3443               	retlw	67	;'C'
  1681     09B4  344B               	retlw	75	;'K'
  1682     09B5  3420               	retlw	32	;' '
  1683     09B6  3420               	retlw	32	;' '
  1684     09B7  3420               	retlw	32	;' '
  1685     09B8  3400               	retlw	0
  1686                           
  1687                           	psect	stringtext22
  1688     09B9                     __pstringtext22:
  1689     09B9                     STR_10:
  1690     09B9  3431               	retlw	49	;'1'
  1691     09BA  342E               	retlw	46	;'.'
  1692     09BB  344D               	retlw	77	;'M'
  1693     09BC  344F               	retlw	79	;'O'
  1694     09BD  3454               	retlw	84	;'T'
  1695     09BE  344F               	retlw	79	;'O'
  1696     09BF  3452               	retlw	82	;'R'
  1697     09C0  3441               	retlw	65	;'A'
  1698     09C1  3420               	retlw	32	;' '
  1699     09C2  3420               	retlw	32	;' '
  1700     09C3  3420               	retlw	32	;' '
  1701     09C4  3420               	retlw	32	;' '
  1702     09C5  3433               	retlw	51	;'3'
  1703     09C6  342E               	retlw	46	;'.'
  1704     09C7  3442               	retlw	66	;'B'
  1705     09C8  3441               	retlw	65	;'A'
  1706     09C9  3443               	retlw	67	;'C'
  1707     09CA  344B               	retlw	75	;'K'
  1708     09CB  3420               	retlw	32	;' '
  1709     09CC  3420               	retlw	32	;' '
  1710     09CD  3400               	retlw	0
  1711                           
  1712                           	psect	stringtext23
  1713     09CE                     __pstringtext23:
  1714     09CE                     STR_2:
  1715     09CE  3431               	retlw	49	;'1'
  1716     09CF  342E               	retlw	46	;'.'
  1717     09D0  344D               	retlw	77	;'M'
  1718     09D1  344F               	retlw	79	;'O'
  1719     09D2  3454               	retlw	84	;'T'
  1720     09D3  344F               	retlw	79	;'O'
  1721     09D4  3452               	retlw	82	;'R'
  1722     09D5  3445               	retlw	69	;'E'
  1723     09D6  3453               	retlw	83	;'S'
  1724     09D7  3420               	retlw	32	;' '
  1725     09D8  3420               	retlw	32	;' '
  1726     09D9  3420               	retlw	32	;' '
  1727     09DA  3433               	retlw	51	;'3'
  1728     09DB  342E               	retlw	46	;'.'
  1729     09DC  344C               	retlw	76	;'L'
  1730     09DD  3445               	retlw	69	;'E'
  1731     09DE  3444               	retlw	68	;'D'
  1732     09DF  3453               	retlw	83	;'S'
  1733     09E0  3420               	retlw	32	;' '
  1734     09E1  3420               	retlw	32	;' '
  1735     09E2  3400               	retlw	0
  1736                           
  1737                           	psect	stringtext24
  1738     0000                     __pstringtext24:
  1739     0800                     
  1740                           	psect	cinit
  1741     07F8                     start_initialization:	
  1742                           ; #config settings
  1743                           
  1744     07F8                     __initialization:
  1745                           
  1746                           ; Initialize objects allocated to BANK0
  1747     07F8  3184  24C4  3187   	fcall	__pidataBANK0	;fetch initializer
  1748     07FB  00A4               	movwf	__pdataBANK0& (0+127)
  1749                           
  1750                           ; Clear objects allocated to BANK0
  1751     07FC  01A3               	clrf	__pbssBANK0& (0+127)
  1752     07FD                     end_of_initialization:	
  1753                           ;End of C runtime variable initialization code
  1754                           
  1755     07FD                     __end_of__initialization:
  1756     07FD  0020               	movlb	0
  1757     07FE  3187  2F9E         	ljmp	_main	;jump to C main() function
  1758                           
  1759                           	psect	bssBANK0
  1760     0023                     __pbssBANK0:
  1761     0023                     _cMenu:
  1762     0023                     	ds	1
  1763                           
  1764                           	psect	dataBANK0
  1765     0024                     __pdataBANK0:
  1766     0024                     _op:
  1767     0024                     	ds	1
  1768                           
  1769                           	psect	cstackCOMMON
  1770     0070                     __pcstackCOMMON:
  1771     0070                     ?_SystemInit:
  1772     0070                     ?_MenuPPAL:	
  1773                           ; 1 bytes @ 0x0
  1774                           
  1775     0070                     ?_MenuSensores:	
  1776                           ; 1 bytes @ 0x0
  1777                           
  1778     0070                     ?_MenuLeds:	
  1779                           ; 1 bytes @ 0x0
  1780                           
  1781     0070                     ?_MenuMotores:	
  1782                           ; 1 bytes @ 0x0
  1783                           
  1784     0070                     ?_MenuL1:	
  1785                           ; 1 bytes @ 0x0
  1786                           
  1787     0070                     ?_MenuL2:	
  1788                           ; 1 bytes @ 0x0
  1789                           
  1790     0070                     ?_MenuL3:	
  1791                           ; 1 bytes @ 0x0
  1792                           
  1793     0070                     ?_MenuMOTORA:	
  1794                           ; 1 bytes @ 0x0
  1795                           
  1796     0070                     ?_MenuMOTORB:	
  1797                           ; 1 bytes @ 0x0
  1798                           
  1799     0070                     ?_main:	
  1800                           ; 1 bytes @ 0x0
  1801                           
  1802     0070                     ?_Load_Cmd:	
  1803                           ; 1 bytes @ 0x0
  1804                           
  1805     0070                     ??_Load_Cmd:	
  1806                           ; 1 bytes @ 0x0
  1807                           
  1808     0070                     ?_Load_Data:	
  1809                           ; 1 bytes @ 0x0
  1810                           
  1811     0070                     ??_Load_Data:	
  1812                           ; 1 bytes @ 0x0
  1813                           
  1814     0070                     ?_LCD_Init:	
  1815                           ; 1 bytes @ 0x0
  1816                           
  1817     0070                     ?_LCD_Cmd:	
  1818                           ; 1 bytes @ 0x0
  1819                           
  1820     0070                     ?_LCD_Write_Cp:	
  1821                           ; 1 bytes @ 0x0
  1822                           
  1823     0070                     Load_Cmd@cmd:	
  1824                           ; 1 bytes @ 0x0
  1825                           
  1826     0070                     Load_Data@data:	
  1827                           ; 1 bytes @ 0x0
  1828                           
  1829                           
  1830                           ; 1 bytes @ 0x0
  1831     0070                     	ds	1
  1832     0071                     ??_LCD_Init:
  1833     0071                     ??_LCD_Cmd:	
  1834                           ; 1 bytes @ 0x1
  1835                           
  1836     0071                     ??_LCD_Write_Cp:	
  1837                           ; 1 bytes @ 0x1
  1838                           
  1839                           
  1840                           ; 1 bytes @ 0x1
  1841     0071                     	ds	1
  1842     0072                     LCD_Cmd@NibbleH:
  1843     0072                     LCD_Write_Cp@NibbleH:	
  1844                           ; 1 bytes @ 0x2
  1845                           
  1846                           
  1847                           ; 1 bytes @ 0x2
  1848     0072                     	ds	1
  1849     0073                     LCD_Cmd@NibbleL:
  1850     0073                     LCD_Write_Cp@NibbleL:	
  1851                           ; 1 bytes @ 0x3
  1852                           
  1853                           
  1854                           ; 1 bytes @ 0x3
  1855     0073                     	ds	1
  1856     0074                     LCD_Cmd@cmd:
  1857     0074                     LCD_Write_Cp@letra:	
  1858                           ; 1 bytes @ 0x4
  1859                           
  1860                           
  1861                           ; 1 bytes @ 0x4
  1862     0074                     	ds	1
  1863     0075                     ??_SystemInit:
  1864     0075                     ?_LCD_Set_Cursor:	
  1865                           ; 1 bytes @ 0x5
  1866                           
  1867     0075                     LCD_Set_Cursor@col:	
  1868                           ; 1 bytes @ 0x5
  1869                           
  1870                           
  1871                           ; 1 bytes @ 0x5
  1872     0075                     	ds	1
  1873     0076                     ??_LCD_Set_Cursor:
  1874                           
  1875                           ; 1 bytes @ 0x6
  1876     0076                     	ds	2
  1877     0078                     LCD_Set_Cursor@fila:
  1878                           
  1879                           ; 1 bytes @ 0x8
  1880     0078                     	ds	1
  1881     0079                     LCD_Set_Cursor@pos:
  1882                           
  1883                           ; 1 bytes @ 0x9
  1884     0079                     	ds	1
  1885     007A                     ?_LCD_Write:
  1886     007A                     ?_LCD_Write_Text:	
  1887                           ; 1 bytes @ 0xA
  1888                           
  1889     007A                     LCD_Write@col:	
  1890                           ; 1 bytes @ 0xA
  1891                           
  1892     007A                     LCD_Write_Text@col:	
  1893                           ; 1 bytes @ 0xA
  1894                           
  1895                           
  1896                           ; 1 bytes @ 0xA
  1897     007A                     	ds	1
  1898     007B                     LCD_Write@letra:
  1899     007B                     LCD_Write_Text@text:	
  1900                           ; 1 bytes @ 0xB
  1901                           
  1902                           
  1903                           ; 2 bytes @ 0xB
  1904     007B                     	ds	1
  1905     007C                     ??_LCD_Write:
  1906     007C                     LCD_Write@fila:	
  1907                           ; 1 bytes @ 0xC
  1908                           
  1909                           
  1910                           ; 1 bytes @ 0xC
  1911     007C                     	ds	1
  1912     007D                     ??_LCD_Write_Text:
  1913                           
  1914                           ; 1 bytes @ 0xD
  1915     007D                     	ds	1
  1916     007E                     ??_MenuPPAL:
  1917     007E                     ??_MenuSensores:	
  1918                           ; 1 bytes @ 0xE
  1919                           
  1920     007E                     ??_MenuLeds:	
  1921                           ; 1 bytes @ 0xE
  1922                           
  1923     007E                     ??_MenuMotores:	
  1924                           ; 1 bytes @ 0xE
  1925                           
  1926     007E                     ??_MenuL1:	
  1927                           ; 1 bytes @ 0xE
  1928                           
  1929     007E                     ??_MenuL2:	
  1930                           ; 1 bytes @ 0xE
  1931                           
  1932     007E                     ??_MenuL3:	
  1933                           ; 1 bytes @ 0xE
  1934                           
  1935     007E                     ??_MenuMOTORA:	
  1936                           ; 1 bytes @ 0xE
  1937                           
  1938     007E                     ??_MenuMOTORB:	
  1939                           ; 1 bytes @ 0xE
  1940                           
  1941                           
  1942                           	psect	cstackBANK0
  1943     0020                     __pcstackBANK0:	
  1944                           ; 1 bytes @ 0xE
  1945                           
  1946     0020                     LCD_Write_Text@fila:
  1947                           
  1948                           ; 1 bytes @ 0x0
  1949     0020                     	ds	1
  1950     0021                     ??_main:
  1951                           
  1952                           ; 1 bytes @ 0x1
  1953     0021                     	ds	2
  1954                           
  1955                           	psect	maintext
  1956     079E                     __pmaintext:	
  1957 ;;
  1958 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1959 ;;
  1960 ;; *************** function _main *****************
  1961 ;; Defined at:
  1962 ;;		line 19 in file "main.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;		None
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;		None
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  1    wreg      void 
  1969 ;; Registers used:
  1970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : B1F/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1978 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1979 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1980 ;;Total ram usage:        2 bytes
  1981 ;; Hardware stack levels required when called: 5
  1982 ;; This function calls:
  1983 ;;		_MenuL1
  1984 ;;		_MenuL2
  1985 ;;		_MenuL3
  1986 ;;		_MenuLeds
  1987 ;;		_MenuMOTORA
  1988 ;;		_MenuMOTORB
  1989 ;;		_MenuMotores
  1990 ;;		_MenuPPAL
  1991 ;;		_MenuSensores
  1992 ;;		_SystemInit
  1993 ;; This function is called by:
  1994 ;;		Startup code after reset
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998     079E                     _main:	
  1999                           ;psect for function _main
  2000                           
  2001     079E                     l1329:	
  2002                           ;incstack = 0
  2003                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2004                           
  2005                           
  2006                           ;main.c: 21:     SystemInit();
  2007     079E  3187  2719  3187   	fcall	_SystemInit
  2008     07A1  2FC6               	goto	l1351
  2009     07A2                     l1331:
  2010     07A2  3186  26E8  3187   	fcall	_MenuPPAL
  2011     07A5  2FE8               	goto	l1353
  2012     07A6                     l1333:
  2013     07A6  3186  2692  3187   	fcall	_MenuSensores
  2014     07A9  2FE8               	goto	l1353
  2015     07AA                     l1335:
  2016     07AA  3185  25EE  3187   	fcall	_MenuLeds
  2017     07AD  2FE8               	goto	l1353
  2018     07AE                     l1337:
  2019     07AE  3186  2669  3187   	fcall	_MenuMotores
  2020     07B1  2FE8               	goto	l1353
  2021     07B2                     l1339:
  2022     07B2  3185  2573  3187   	fcall	_MenuL1
  2023     07B5  2FE8               	goto	l1353
  2024     07B6                     l1341:
  2025     07B6  3185  259C  3187   	fcall	_MenuL2
  2026     07B9  2FE8               	goto	l1353
  2027     07BA                     l1343:
  2028     07BA  3185  25C5  3187   	fcall	_MenuL3
  2029     07BD  2FE8               	goto	l1353
  2030     07BE                     l1345:
  2031     07BE  3186  2617  3187   	fcall	_MenuMOTORA
  2032     07C1  2FE8               	goto	l1353
  2033     07C2                     l1347:
  2034     07C2  3186  2640  3187   	fcall	_MenuMOTORB
  2035     07C5  2FE8               	goto	l1353
  2036     07C6                     l1351:
  2037                           
  2038                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2039                           ; Switch size 1, requested type "simple"
  2040                           ; Number of cases is 1, Range of values is 0 to 0
  2041                           ; switch strategies available:
  2042                           ; Name         Instructions Cycles
  2043                           ; simple_byte            4     3 (average)
  2044                           ; direct_byte            8     6 (fixed)
  2045                           ; jumptable            260     6 (fixed)
  2046                           ;	Chosen strategy is simple_byte
  2047     07C6  3000               	movlw	0
  2048     07C7  3A00               	xorlw	0	; case 0
  2049     07C8  1903               	skipnz
  2050     07C9  2FCB               	goto	l1407
  2051     07CA  2FE8               	goto	l1353
  2052     07CB                     l1407:
  2053                           
  2054                           ; Switch size 1, requested type "simple"
  2055                           ; Number of cases is 9, Range of values is 0 to 8
  2056                           ; switch strategies available:
  2057                           ; Name         Instructions Cycles
  2058                           ; direct_byte           24     6 (fixed)
  2059                           ; simple_byte           28    15 (average)
  2060                           ; jumptable            260     6 (fixed)
  2061                           ;	Chosen strategy is simple_byte
  2062     07CB  3000               	movlw	0
  2063     07CC  3A00               	xorlw	0	; case 0
  2064     07CD  1903               	skipnz
  2065     07CE  2FA2               	goto	l1331
  2066     07CF  3A01               	xorlw	1	; case 1
  2067     07D0  1903               	skipnz
  2068     07D1  2FA6               	goto	l1333
  2069     07D2  3A03               	xorlw	3	; case 2
  2070     07D3  1903               	skipnz
  2071     07D4  2FAA               	goto	l1335
  2072     07D5  3A01               	xorlw	1	; case 3
  2073     07D6  1903               	skipnz
  2074     07D7  2FAE               	goto	l1337
  2075     07D8  3A07               	xorlw	7	; case 4
  2076     07D9  1903               	skipnz
  2077     07DA  2FB2               	goto	l1339
  2078     07DB  3A01               	xorlw	1	; case 5
  2079     07DC  1903               	skipnz
  2080     07DD  2FB6               	goto	l1341
  2081     07DE  3A03               	xorlw	3	; case 6
  2082     07DF  1903               	skipnz
  2083     07E0  2FBA               	goto	l1343
  2084     07E1  3A01               	xorlw	1	; case 7
  2085     07E2  1903               	skipnz
  2086     07E3  2FBE               	goto	l1345
  2087     07E4  3A0F               	xorlw	15	; case 8
  2088     07E5  1903               	skipnz
  2089     07E6  2FC2               	goto	l1347
  2090     07E7  2FE8               	goto	l1353
  2091     07E8                     l1353:
  2092                           
  2093                           ;main.c: 37:         _delay((unsigned long)((50)*(20000000UL/4000.0)));
  2094     07E8  3002               	movlw	2
  2095     07E9  0020               	movlb	0	; select bank0
  2096     07EA  00A2               	movwf	??_main+1
  2097     07EB  3045               	movlw	69
  2098     07EC  00A1               	movwf	??_main
  2099     07ED  30A9               	movlw	169
  2100     07EE                     u267:
  2101     07EE  0B89               	decfsz	9,f
  2102     07EF  2FEE               	goto	u267
  2103     07F0  0BA1               	decfsz	??_main,f
  2104     07F1  2FEE               	goto	u267
  2105     07F2  0BA2               	decfsz	??_main+1,f
  2106     07F3  2FEE               	goto	u267
  2107     07F4  3200               	nop2
  2108     07F5  2FC6               	goto	l1351
  2109     07F6  3180  2802         	ljmp	start
  2110     07F8                     __end_of_main:
  2111                           
  2112                           	psect	text1
  2113     0719                     __ptext1:	
  2114 ;; *************** function _SystemInit *****************
  2115 ;; Defined at:
  2116 ;;		line 19 in file "Menu.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, status,2, status,0, pclath, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2134 ;;Total ram usage:        0 bytes
  2135 ;; Hardware stack levels used: 1
  2136 ;; Hardware stack levels required when called: 2
  2137 ;; This function calls:
  2138 ;;		_LCD_Cmd
  2139 ;;		_LCD_Init
  2140 ;; This function is called by:
  2141 ;;		_main
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145     0719                     _SystemInit:	
  2146                           ;psect for function _SystemInit
  2147                           
  2148     0719                     l1241:	
  2149                           ;incstack = 0
  2150                           ; Regs used in _SystemInit: [wreg+status,2+status,0+pclath+cstack]
  2151                           
  2152                           
  2153                           ;Menu.c: 20:     OSCCON = 0x38;
  2154     0719  3038               	movlw	56
  2155     071A  0021               	movlb	1	; select bank1
  2156     071B  0099               	movwf	25	;volatile
  2157     071C                     l1243:
  2158                           
  2159                           ;Menu.c: 21:     OSCTUNE = 0x00;
  2160     071C  0198               	clrf	24	;volatile
  2161     071D                     l1245:
  2162                           
  2163                           ;Menu.c: 22:     BORCON = 0x00;
  2164     071D  0022               	movlb	2	; select bank2
  2165     071E  0196               	clrf	22	;volatile
  2166     071F                     l1247:
  2167                           
  2168                           ;Menu.c: 24:     ANSELAbits.ANSA2 = 0;
  2169     071F  0023               	movlb	3	; select bank3
  2170     0720  110C               	bcf	12,2	;volatile
  2171     0721                     l1249:
  2172                           
  2173                           ;Menu.c: 25:     ANSELAbits.ANSA3 = 0;
  2174     0721  118C               	bcf	12,3	;volatile
  2175     0722                     l1251:
  2176                           
  2177                           ;Menu.c: 26:     ANSELAbits.ANSA4 = 0;
  2178     0722  120C               	bcf	12,4	;volatile
  2179     0723                     l1253:
  2180                           
  2181                           ;Menu.c: 28:     TRISAbits.TRISA2 = 0;
  2182     0723  0021               	movlb	1	; select bank1
  2183     0724  110C               	bcf	12,2	;volatile
  2184     0725                     l1255:
  2185                           
  2186                           ;Menu.c: 29:     TRISAbits.TRISA3 = 0;
  2187     0725  118C               	bcf	12,3	;volatile
  2188     0726                     l1257:
  2189                           
  2190                           ;Menu.c: 30:     TRISAbits.TRISA4 = 0;
  2191     0726  120C               	bcf	12,4	;volatile
  2192     0727                     l1259:
  2193                           
  2194                           ;Menu.c: 32:     ANSELBbits.ANSB3 = 0;
  2195     0727  0023               	movlb	3	; select bank3
  2196     0728  118D               	bcf	13,3	;volatile
  2197     0729                     l1261:
  2198                           
  2199                           ;Menu.c: 33:     ANSELBbits.ANSB4 = 0;
  2200     0729  120D               	bcf	13,4	;volatile
  2201     072A                     l1263:
  2202                           
  2203                           ;Menu.c: 34:     ANSELBbits.ANSB2 = 0;
  2204     072A  110D               	bcf	13,2	;volatile
  2205     072B                     l1265:
  2206                           
  2207                           ;Menu.c: 36:     TRISBbits.TRISB3 = 0;
  2208     072B  0021               	movlb	1	; select bank1
  2209     072C  118D               	bcf	13,3	;volatile
  2210     072D                     l1267:
  2211                           
  2212                           ;Menu.c: 37:     TRISBbits.TRISB4 = 0;
  2213     072D  120D               	bcf	13,4	;volatile
  2214     072E                     l1269:
  2215                           
  2216                           ;Menu.c: 38:     TRISBbits.TRISB5 = 0;
  2217     072E  128D               	bcf	13,5	;volatile
  2218     072F                     l1271:
  2219                           
  2220                           ;Menu.c: 39:     TRISBbits.TRISB6 = 0;
  2221     072F  130D               	bcf	13,6	;volatile
  2222     0730                     l1273:
  2223                           
  2224                           ;Menu.c: 41:     ANSELAbits.ANSA0 = 1;
  2225     0730  0023               	movlb	3	; select bank3
  2226     0731  140C               	bsf	12,0	;volatile
  2227     0732                     l1275:
  2228                           
  2229                           ;Menu.c: 42:     ANSELAbits.ANSA1 = 1;
  2230     0732  148C               	bsf	12,1	;volatile
  2231     0733                     l1277:
  2232                           
  2233                           ;Menu.c: 44:     TRISAbits.TRISA0 = 1;
  2234     0733  0021               	movlb	1	; select bank1
  2235     0734  140C               	bsf	12,0	;volatile
  2236     0735                     l1279:
  2237                           
  2238                           ;Menu.c: 45:     TRISAbits.TRISA1 = 1;
  2239     0735  148C               	bsf	12,1	;volatile
  2240     0736                     l1281:
  2241                           
  2242                           ;Menu.c: 47:     ANSELBbits.ANSB0 = 0;
  2243     0736  0023               	movlb	3	; select bank3
  2244     0737  100D               	bcf	13,0	;volatile
  2245     0738                     l1283:
  2246                           
  2247                           ;Menu.c: 48:     ANSELBbits.ANSB1 = 0;
  2248     0738  108D               	bcf	13,1	;volatile
  2249     0739                     l1285:
  2250                           
  2251                           ;Menu.c: 49:     ANSELBbits.ANSB2 = 0;
  2252     0739  110D               	bcf	13,2	;volatile
  2253     073A                     l1287:
  2254                           
  2255                           ;Menu.c: 51:     TRISBbits.TRISB0 = 1;
  2256     073A  0021               	movlb	1	; select bank1
  2257     073B  140D               	bsf	13,0	;volatile
  2258     073C                     l1289:
  2259                           
  2260                           ;Menu.c: 52:     TRISBbits.TRISB1 = 1;
  2261     073C  148D               	bsf	13,1	;volatile
  2262     073D                     l1291:
  2263                           
  2264                           ;Menu.c: 53:     TRISBbits.TRISB2 = 1;
  2265     073D  150D               	bsf	13,2	;volatile
  2266     073E                     l1293:
  2267                           
  2268                           ;Menu.c: 55:     LATAbits.LATA2 = 0;
  2269     073E  0022               	movlb	2	; select bank2
  2270     073F  110C               	bcf	12,2	;volatile
  2271     0740                     l1295:
  2272                           
  2273                           ;Menu.c: 56:     LATAbits.LATA3 = 0;
  2274     0740  118C               	bcf	12,3	;volatile
  2275     0741                     l1297:
  2276                           
  2277                           ;Menu.c: 57:     LATAbits.LATA4 = 0;
  2278     0741  120C               	bcf	12,4	;volatile
  2279     0742                     l1299:
  2280                           
  2281                           ;Menu.c: 59:     LATBbits.LATB3 = 0;
  2282     0742  118D               	bcf	13,3	;volatile
  2283     0743                     l1301:
  2284                           
  2285                           ;Menu.c: 60:     LATBbits.LATB4 = 0;
  2286     0743  120D               	bcf	13,4	;volatile
  2287     0744                     l1303:
  2288                           
  2289                           ;Menu.c: 61:     LATBbits.LATB5 = 0;
  2290     0744  128D               	bcf	13,5	;volatile
  2291     0745                     l1305:
  2292                           
  2293                           ;Menu.c: 62:     LATBbits.LATB6 = 0;
  2294     0745  130D               	bcf	13,6	;volatile
  2295     0746                     l1307:
  2296                           
  2297                           ;Menu.c: 64:     LCD_Init();
  2298     0746  3187  274E  3187   	fcall	_LCD_Init
  2299     0749                     l1309:
  2300                           
  2301                           ;Menu.c: 65:     LCD_Cmd(12);
  2302     0749  300C               	movlw	12
  2303     074A  3184  24E6  3187   	fcall	_LCD_Cmd
  2304     074D                     l152:
  2305     074D  0008               	return
  2306     074E                     __end_of_SystemInit:
  2307                           
  2308                           	psect	text2
  2309     074E                     __ptext2:	
  2310 ;; *************** function _LCD_Init *****************
  2311 ;; Defined at:
  2312 ;;		line 37 in file "LCD_LIB.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;		None
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;		None
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      void 
  2319 ;; Registers used:
  2320 ;;		wreg, status,2, status,0, pclath, cstack
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2328 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2329 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2330 ;;Total ram usage:        1 bytes
  2331 ;; Hardware stack levels used: 1
  2332 ;; Hardware stack levels required when called: 1
  2333 ;; This function calls:
  2334 ;;		_Load_Cmd
  2335 ;; This function is called by:
  2336 ;;		_SystemInit
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340     074E                     _LCD_Init:	
  2341                           ;psect for function _LCD_Init
  2342                           
  2343     074E                     l1201:	
  2344                           ;incstack = 0
  2345                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2346                           
  2347                           
  2348                           ;LCD_LIB.c: 39:     TRISDbits.TRISD0 = 0; TRISDbits.TRISD1 = 0; TRISDbits.TRISD4 = 0;
  2349     074E  0021               	movlb	1	; select bank1
  2350     074F  100F               	bcf	15,0	;volatile
  2351     0750  108F               	bcf	15,1	;volatile
  2352     0751  120F               	bcf	15,4	;volatile
  2353                           
  2354                           ;LCD_LIB.c: 40:     TRISDbits.TRISD5 = 0; TRISDbits.TRISD6 = 0; TRISDbits.TRISD7 = 0;
  2355     0752  128F               	bcf	15,5	;volatile
  2356     0753  130F               	bcf	15,6	;volatile
  2357     0754  138F               	bcf	15,7	;volatile
  2358                           
  2359                           ;LCD_LIB.c: 42:     LATDbits.LATD1 = 0; LATDbits.LATD4 = 0; LATDbits.LATD5 = 0;
  2360     0755  0022               	movlb	2	; select bank2
  2361     0756  108F               	bcf	15,1	;volatile
  2362     0757  120F               	bcf	15,4	;volatile
  2363     0758  128F               	bcf	15,5	;volatile
  2364                           
  2365                           ;LCD_LIB.c: 43:     LATDbits.LATD6 = 0; LATDbits.LATD7 = 0;
  2366     0759  130F               	bcf	15,6	;volatile
  2367     075A  138F               	bcf	15,7	;volatile
  2368     075B                     l1203:
  2369                           
  2370                           ;LCD_LIB.c: 45:     _delay((unsigned long)((15)*(20000000UL/4000.0)));
  2371     075B  3062               	movlw	98
  2372     075C  00F1               	movwf	??_LCD_Init
  2373     075D  3066               	movlw	102
  2374     075E                     u277:
  2375     075E  0B89               	decfsz	9,f
  2376     075F  2F5E               	goto	u277
  2377     0760  0BF1               	decfsz	??_LCD_Init,f
  2378     0761  2F5E               	goto	u277
  2379     0762                     l1205:
  2380                           
  2381                           ;LCD_LIB.c: 46:     Load_Cmd(0x03);
  2382     0762  3003               	movlw	3
  2383     0763  3185  2521  3187   	fcall	_Load_Cmd
  2384     0766                     l1207:
  2385                           
  2386                           ;LCD_LIB.c: 47:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  2387     0766  3021               	movlw	33
  2388     0767  00F1               	movwf	??_LCD_Init
  2389     0768  3076               	movlw	118
  2390     0769                     u287:
  2391     0769  0B89               	decfsz	9,f
  2392     076A  2F69               	goto	u287
  2393     076B  0BF1               	decfsz	??_LCD_Init,f
  2394     076C  2F69               	goto	u287
  2395     076D  3200               	nop2
  2396                           
  2397                           ;LCD_LIB.c: 48:     Load_Cmd(0x03);
  2398     076E  3003               	movlw	3
  2399     076F  3185  2521  3187   	fcall	_Load_Cmd
  2400     0772                     l1209:
  2401                           
  2402                           ;LCD_LIB.c: 49:     _delay((unsigned long)((100)*(20000000UL/4000000.0)));
  2403     0772  30A6               	movlw	166
  2404     0773                     u297:
  2405     0773  0B89               	decfsz	9,f
  2406     0774  2F73               	goto	u297
  2407     0775  3200               	nop2
  2408     0776                     l1211:
  2409                           
  2410                           ;LCD_LIB.c: 50:     Load_Cmd(0x03);
  2411     0776  3003               	movlw	3
  2412     0777  3185  2521  3187   	fcall	_Load_Cmd
  2413     077A                     l1213:
  2414                           
  2415                           ;LCD_LIB.c: 51:     Load_Cmd(0x02);
  2416     077A  3002               	movlw	2
  2417     077B  3185  2521  3187   	fcall	_Load_Cmd
  2418     077E                     l1215:
  2419                           
  2420                           ;LCD_LIB.c: 53:     Load_Cmd(0x02);
  2421     077E  3002               	movlw	2
  2422     077F  3185  2521  3187   	fcall	_Load_Cmd
  2423     0782                     l1217:
  2424                           
  2425                           ;LCD_LIB.c: 54:     Load_Cmd(0x08);
  2426     0782  3008               	movlw	8
  2427     0783  3185  2521  3187   	fcall	_Load_Cmd
  2428     0786                     l1219:
  2429                           
  2430                           ;LCD_LIB.c: 56:     Load_Cmd(0x00);
  2431     0786  3000               	movlw	0
  2432     0787  3185  2521  3187   	fcall	_Load_Cmd
  2433     078A                     l1221:
  2434                           
  2435                           ;LCD_LIB.c: 57:     Load_Cmd(0x0F);
  2436     078A  300F               	movlw	15
  2437     078B  3185  2521  3187   	fcall	_Load_Cmd
  2438     078E                     l1223:
  2439                           
  2440                           ;LCD_LIB.c: 59:     Load_Cmd(0x00);
  2441     078E  3000               	movlw	0
  2442     078F  3185  2521  3187   	fcall	_Load_Cmd
  2443     0792                     l1225:
  2444                           
  2445                           ;LCD_LIB.c: 60:     Load_Cmd(0x01);
  2446     0792  3001               	movlw	1
  2447     0793  3185  2521  3187   	fcall	_Load_Cmd
  2448     0796                     l1227:
  2449                           
  2450                           ;LCD_LIB.c: 61:     _delay((unsigned long)((2)*(20000000UL/4000.0)));
  2451     0796  300D               	movlw	13
  2452     0797  00F1               	movwf	??_LCD_Init
  2453     0798  30FC               	movlw	252
  2454     0799                     u307:
  2455     0799  0B89               	decfsz	9,f
  2456     079A  2F99               	goto	u307
  2457     079B  0BF1               	decfsz	??_LCD_Init,f
  2458     079C  2F99               	goto	u307
  2459     079D                     l91:
  2460     079D  0008               	return
  2461     079E                     __end_of_LCD_Init:
  2462                           
  2463                           	psect	text3
  2464     0692                     __ptext3:	
  2465 ;; *************** function _MenuSensores *****************
  2466 ;; Defined at:
  2467 ;;		line 109 in file "Menu.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;		None
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;		None
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  1    wreg      void 
  2474 ;; Registers used:
  2475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2485 ;;Total ram usage:        0 bytes
  2486 ;; Hardware stack levels used: 1
  2487 ;; Hardware stack levels required when called: 4
  2488 ;; This function calls:
  2489 ;;		_LCD_Write_Text
  2490 ;; This function is called by:
  2491 ;;		_main
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495     0692                     _MenuSensores:	
  2496                           ;psect for function _MenuSensores
  2497                           
  2498     0692                     l1313:	
  2499                           ;incstack = 0
  2500                           ; Regs used in _MenuSensores: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2501                           
  2502                           
  2503                           ;Menu.c: 111:     LCD_Write_Text(1,1,"   MENU SENSORES    ");
  2504     0692  01FA               	clrf	LCD_Write_Text@col
  2505     0693  0AFA               	incf	LCD_Write_Text@col,f
  2506     0694  308F               	movlw	low (STR_5| (0+32768))
  2507     0695  00FB               	movwf	LCD_Write_Text@text
  2508     0696  3089               	movlw	high (STR_5| (0+32768))
  2509     0697  00FC               	movwf	LCD_Write_Text@text+1
  2510     0698  3001               	movlw	1
  2511     0699  3185  2502  3186   	fcall	_LCD_Write_Text
  2512                           
  2513                           ;Menu.c: 112:     LCD_Write_Text(2,1,"LM35:               ");
  2514     069C  01FA               	clrf	LCD_Write_Text@col
  2515     069D  0AFA               	incf	LCD_Write_Text@col,f
  2516     069E  302A               	movlw	low (STR_6| (0+32768))
  2517     069F  00FB               	movwf	LCD_Write_Text@text
  2518     06A0  3088               	movlw	high (STR_6| (0+32768))
  2519     06A1  00FC               	movwf	LCD_Write_Text@text+1
  2520     06A2  3002               	movlw	2
  2521     06A3  3185  2502  3186   	fcall	_LCD_Write_Text
  2522                           
  2523                           ;Menu.c: 113:     LCD_Write_Text(3,1,"LDR:                ");
  2524     06A6  01FA               	clrf	LCD_Write_Text@col
  2525     06A7  0AFA               	incf	LCD_Write_Text@col,f
  2526     06A8  3015               	movlw	low (STR_7| (0+32768))
  2527     06A9  00FB               	movwf	LCD_Write_Text@text
  2528     06AA  3088               	movlw	high (STR_7| (0+32768))
  2529     06AB  00FC               	movwf	LCD_Write_Text@text+1
  2530     06AC  3003               	movlw	3
  2531     06AD  3185  2502  3186   	fcall	_LCD_Write_Text
  2532                           
  2533                           ;Menu.c: 114:     LCD_Write_Text(4,1,"SEL TO BACK         ");
  2534     06B0  01FA               	clrf	LCD_Write_Text@col
  2535     06B1  0AFA               	incf	LCD_Write_Text@col,f
  2536     06B2  307E               	movlw	low (STR_8| (0+32768))
  2537     06B3  00FB               	movwf	LCD_Write_Text@text
  2538     06B4  3088               	movlw	high (STR_8| (0+32768))
  2539     06B5  00FC               	movwf	LCD_Write_Text@text+1
  2540     06B6  3004               	movlw	4
  2541     06B7  3185  2502  3186   	fcall	_LCD_Write_Text
  2542     06BA                     l182:
  2543     06BA  0008               	return
  2544     06BB                     __end_of_MenuSensores:
  2545                           
  2546                           	psect	text4
  2547     06E8                     __ptext4:	
  2548 ;; *************** function _MenuPPAL *****************
  2549 ;; Defined at:
  2550 ;;		line 101 in file "Menu.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;		None
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;		None
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  1    wreg      void 
  2557 ;; Registers used:
  2558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2568 ;;Total ram usage:        0 bytes
  2569 ;; Hardware stack levels used: 1
  2570 ;; Hardware stack levels required when called: 4
  2571 ;; This function calls:
  2572 ;;		_LCD_Write
  2573 ;;		_LCD_Write_Text
  2574 ;; This function is called by:
  2575 ;;		_main
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579     06E8                     _MenuPPAL:	
  2580                           ;psect for function _MenuPPAL
  2581                           
  2582     06E8                     l1311:	
  2583                           ;incstack = 0
  2584                           ; Regs used in _MenuPPAL: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2585                           
  2586                           
  2587                           ;Menu.c: 103:     LCD_Write_Text(1,1,"       MENU PPAL    ");
  2588     06E8  01FA               	clrf	LCD_Write_Text@col
  2589     06E9  0AFA               	incf	LCD_Write_Text@col,f
  2590     06EA  3065               	movlw	low (STR_1| (0+32768))
  2591     06EB  00FB               	movwf	LCD_Write_Text@text
  2592     06EC  3089               	movlw	high (STR_1| (0+32768))
  2593     06ED  00FC               	movwf	LCD_Write_Text@text+1
  2594     06EE  3001               	movlw	1
  2595     06EF  3185  2502  3186   	fcall	_LCD_Write_Text
  2596                           
  2597                           ;Menu.c: 104:     LCD_Write_Text(2,1,"1.MOTORES   3.LEDS  ");
  2598     06F2  01FA               	clrf	LCD_Write_Text@col
  2599     06F3  0AFA               	incf	LCD_Write_Text@col,f
  2600     06F4  30CE               	movlw	low (STR_2| (0+32768))
  2601     06F5  00FB               	movwf	LCD_Write_Text@text
  2602     06F6  3089               	movlw	high (STR_2| (0+32768))
  2603     06F7  00FC               	movwf	LCD_Write_Text@text+1
  2604     06F8  3002               	movlw	2
  2605     06F9  3185  2502  3186   	fcall	_LCD_Write_Text
  2606                           
  2607                           ;Menu.c: 105:     LCD_Write_Text(3,1,"2.SENSORES          ");
  2608     06FC  01FA               	clrf	LCD_Write_Text@col
  2609     06FD  0AFA               	incf	LCD_Write_Text@col,f
  2610     06FE  3069               	movlw	low (STR_3| (0+32768))
  2611     06FF  00FB               	movwf	LCD_Write_Text@text
  2612     0700  3088               	movlw	high (STR_3| (0+32768))
  2613     0701  00FC               	movwf	LCD_Write_Text@text+1
  2614     0702  3003               	movlw	3
  2615     0703  3185  2502  3186   	fcall	_LCD_Write_Text
  2616                           
  2617                           ;Menu.c: 106:     LCD_Write_Text(4,1,"OP:                 ");
  2618     0706  01FA               	clrf	LCD_Write_Text@col
  2619     0707  0AFA               	incf	LCD_Write_Text@col,f
  2620     0708  3000               	movlw	low (STR_4| (0+32768))
  2621     0709  00FB               	movwf	LCD_Write_Text@text
  2622     070A  3088               	movlw	high (STR_4| (0+32768))
  2623     070B  00FC               	movwf	LCD_Write_Text@text+1
  2624     070C  3004               	movlw	4
  2625     070D  3185  2502  3186   	fcall	_LCD_Write_Text
  2626                           
  2627                           ;Menu.c: 107:     LCD_Write(4,4,op);
  2628     0710  3004               	movlw	4
  2629     0711  00FA               	movwf	LCD_Write@col
  2630     0712  01FB               	clrf	LCD_Write@letra
  2631     0713  0AFB               	incf	LCD_Write@letra,f
  2632     0714  3004               	movlw	4
  2633     0715  3184  24C5  3186   	fcall	_LCD_Write
  2634     0718                     l179:
  2635     0718  0008               	return
  2636     0719                     __end_of_MenuPPAL:
  2637                           
  2638                           	psect	text5
  2639     04C5                     __ptext5:	
  2640 ;; *************** function _LCD_Write *****************
  2641 ;; Defined at:
  2642 ;;		line 100 in file "LCD_LIB.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  fila            1    wreg     unsigned char 
  2645 ;;  col             1   10[COMMON] unsigned char 
  2646 ;;  letra           1   11[COMMON] unsigned char 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  fila            1   12[COMMON] unsigned char 
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      void 
  2651 ;; Registers used:
  2652 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2658 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2659 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2661 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2662 ;;Total ram usage:        3 bytes
  2663 ;; Hardware stack levels used: 1
  2664 ;; Hardware stack levels required when called: 3
  2665 ;; This function calls:
  2666 ;;		_LCD_Set_Cursor
  2667 ;;		_LCD_Write_Cp
  2668 ;; This function is called by:
  2669 ;;		_MenuPPAL
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673     04C5                     _LCD_Write:	
  2674                           ;psect for function _LCD_Write
  2675                           
  2676                           
  2677                           ;incstack = 0
  2678                           ; Regs used in _LCD_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2679                           ;LCD_Write@fila stored from wreg
  2680     04C5  00FC               	movwf	LCD_Write@fila
  2681     04C6                     l1229:
  2682                           
  2683                           ;LCD_LIB.c: 101:     LCD_Set_Cursor(fila, col);
  2684     04C6  087A               	movf	LCD_Write@col,w
  2685     04C7  00F5               	movwf	LCD_Set_Cursor@col
  2686     04C8  087C               	movf	LCD_Write@fila,w
  2687     04C9  3186  26BB  3184   	fcall	_LCD_Set_Cursor
  2688     04CC                     l1231:
  2689                           
  2690                           ;LCD_LIB.c: 102:     LCD_Write_Cp(letra);
  2691     04CC  087B               	movf	LCD_Write@letra,w
  2692     04CD  3184  24D1  3184   	fcall	_LCD_Write_Cp
  2693     04D0                     l115:
  2694     04D0  0008               	return
  2695     04D1                     __end_of_LCD_Write:
  2696                           
  2697                           	psect	text6
  2698     0669                     __ptext6:	
  2699 ;; *************** function _MenuMotores *****************
  2700 ;; Defined at:
  2701 ;;		line 116 in file "Menu.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;		None
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  1    wreg      void 
  2708 ;; Registers used:
  2709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2719 ;;Total ram usage:        0 bytes
  2720 ;; Hardware stack levels used: 1
  2721 ;; Hardware stack levels required when called: 4
  2722 ;; This function calls:
  2723 ;;		_LCD_Write_Text
  2724 ;; This function is called by:
  2725 ;;		_main
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729     0669                     _MenuMotores:	
  2730                           ;psect for function _MenuMotores
  2731                           
  2732     0669                     l1317:	
  2733                           ;incstack = 0
  2734                           ; Regs used in _MenuMotores: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2735                           
  2736                           
  2737                           ;Menu.c: 118:     LCD_Write_Text(1,1,"   MENU MOTORES     ");
  2738     0669  01FA               	clrf	LCD_Write_Text@col
  2739     066A  0AFA               	incf	LCD_Write_Text@col,f
  2740     066B  30D2               	movlw	low (STR_9| (0+32768))
  2741     066C  00FB               	movwf	LCD_Write_Text@text
  2742     066D  3088               	movlw	high (STR_9| (0+32768))
  2743     066E  00FC               	movwf	LCD_Write_Text@text+1
  2744     066F  3001               	movlw	1
  2745     0670  3185  2502  3186   	fcall	_LCD_Write_Text
  2746                           
  2747                           ;Menu.c: 119:     LCD_Write_Text(2,1,"1.MOTORA    3.BACK  ");
  2748     0673  01FA               	clrf	LCD_Write_Text@col
  2749     0674  0AFA               	incf	LCD_Write_Text@col,f
  2750     0675  30B9               	movlw	low (STR_10| (0+32768))
  2751     0676  00FB               	movwf	LCD_Write_Text@text
  2752     0677  3089               	movlw	high (STR_10| (0+32768))
  2753     0678  00FC               	movwf	LCD_Write_Text@text+1
  2754     0679  3002               	movlw	2
  2755     067A  3185  2502  3186   	fcall	_LCD_Write_Text
  2756                           
  2757                           ;Menu.c: 120:     LCD_Write_Text(3,1,"2.MOTORB            ");
  2758     067D  01FA               	clrf	LCD_Write_Text@col
  2759     067E  0AFA               	incf	LCD_Write_Text@col,f
  2760     067F  3054               	movlw	low (STR_11| (0+32768))
  2761     0680  00FB               	movwf	LCD_Write_Text@text
  2762     0681  3088               	movlw	high (STR_11| (0+32768))
  2763     0682  00FC               	movwf	LCD_Write_Text@text+1
  2764     0683  3003               	movlw	3
  2765     0684  3185  2502  3186   	fcall	_LCD_Write_Text
  2766                           
  2767                           ;Menu.c: 121:     LCD_Write_Text(4,1,"OP:                 ");
  2768     0687  01FA               	clrf	LCD_Write_Text@col
  2769     0688  0AFA               	incf	LCD_Write_Text@col,f
  2770     0689  3000               	movlw	low (STR_4| (0+32768))
  2771     068A  00FB               	movwf	LCD_Write_Text@text
  2772     068B  3088               	movlw	high (STR_4| (0+32768))
  2773     068C  00FC               	movwf	LCD_Write_Text@text+1
  2774     068D  3004               	movlw	4
  2775     068E  3185  2502  3186   	fcall	_LCD_Write_Text
  2776     0691                     l185:
  2777     0691  0008               	return
  2778     0692                     __end_of_MenuMotores:
  2779                           
  2780                           	psect	text7
  2781     0640                     __ptext7:	
  2782 ;; *************** function _MenuMOTORB *****************
  2783 ;; Defined at:
  2784 ;;		line 159 in file "Menu.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;		None
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;		None
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      void 
  2791 ;; Registers used:
  2792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2802 ;;Total ram usage:        0 bytes
  2803 ;; Hardware stack levels used: 1
  2804 ;; Hardware stack levels required when called: 4
  2805 ;; This function calls:
  2806 ;;		_LCD_Write_Text
  2807 ;; This function is called by:
  2808 ;;		_main
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812     0640                     _MenuMOTORB:	
  2813                           ;psect for function _MenuMOTORB
  2814                           
  2815     0640                     l1327:	
  2816                           ;incstack = 0
  2817                           ; Regs used in _MenuMOTORB: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2818                           
  2819                           
  2820                           ;Menu.c: 161:     LCD_Write_Text(1,1,"     MENU MOTORB    ");
  2821     0640  01FA               	clrf	LCD_Write_Text@col
  2822     0641  0AFA               	incf	LCD_Write_Text@col,f
  2823     0642  303B               	movlw	low (STR_33| (0+32768))
  2824     0643  00FB               	movwf	LCD_Write_Text@text
  2825     0644  3089               	movlw	high (STR_33| (0+32768))
  2826     0645  00FC               	movwf	LCD_Write_Text@text+1
  2827     0646  3001               	movlw	1
  2828     0647  3185  2502  3186   	fcall	_LCD_Write_Text
  2829                           
  2830                           ;Menu.c: 162:     LCD_Write_Text(2,1,"1.TURNR    3.OFF    ");
  2831     064A  01FA               	clrf	LCD_Write_Text@col
  2832     064B  0AFA               	incf	LCD_Write_Text@col,f
  2833     064C  3050               	movlw	low (STR_30| (0+32768))
  2834     064D  00FB               	movwf	LCD_Write_Text@text
  2835     064E  3089               	movlw	high (STR_30| (0+32768))
  2836     064F  00FC               	movwf	LCD_Write_Text@text+1
  2837     0650  3002               	movlw	2
  2838     0651  3185  2502  3186   	fcall	_LCD_Write_Text
  2839                           
  2840                           ;Menu.c: 163:     LCD_Write_Text(3,1,"2.TURNL    4.BACK   ");
  2841     0654  01FA               	clrf	LCD_Write_Text@col
  2842     0655  0AFA               	incf	LCD_Write_Text@col,f
  2843     0656  30A4               	movlw	low (STR_31| (0+32768))
  2844     0657  00FB               	movwf	LCD_Write_Text@text
  2845     0658  3089               	movlw	high (STR_31| (0+32768))
  2846     0659  00FC               	movwf	LCD_Write_Text@text+1
  2847     065A  3003               	movlw	3
  2848     065B  3185  2502  3186   	fcall	_LCD_Write_Text
  2849                           
  2850                           ;Menu.c: 164:     LCD_Write_Text(4,1,"OP:                 ");
  2851     065E  01FA               	clrf	LCD_Write_Text@col
  2852     065F  0AFA               	incf	LCD_Write_Text@col,f
  2853     0660  3000               	movlw	low (STR_4| (0+32768))
  2854     0661  00FB               	movwf	LCD_Write_Text@text
  2855     0662  3088               	movlw	high (STR_4| (0+32768))
  2856     0663  00FC               	movwf	LCD_Write_Text@text+1
  2857     0664  3004               	movlw	4
  2858     0665  3185  2502  3186   	fcall	_LCD_Write_Text
  2859     0668                     l203:
  2860     0668  0008               	return
  2861     0669                     __end_of_MenuMOTORB:
  2862                           
  2863                           	psect	text8
  2864     0617                     __ptext8:	
  2865 ;; *************** function _MenuMOTORA *****************
  2866 ;; Defined at:
  2867 ;;		line 152 in file "Menu.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;		None
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;		None
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      void 
  2874 ;; Registers used:
  2875 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2885 ;;Total ram usage:        0 bytes
  2886 ;; Hardware stack levels used: 1
  2887 ;; Hardware stack levels required when called: 4
  2888 ;; This function calls:
  2889 ;;		_LCD_Write_Text
  2890 ;; This function is called by:
  2891 ;;		_main
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895     0617                     _MenuMOTORA:	
  2896                           ;psect for function _MenuMOTORA
  2897                           
  2898     0617                     l1325:	
  2899                           ;incstack = 0
  2900                           ; Regs used in _MenuMOTORA: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2901                           
  2902                           
  2903                           ;Menu.c: 154:     LCD_Write_Text(1,1,"     MENU MOTORA    ");
  2904     0617  01FA               	clrf	LCD_Write_Text@col
  2905     0618  0AFA               	incf	LCD_Write_Text@col,f
  2906     0619  3026               	movlw	low (STR_29| (0+32768))
  2907     061A  00FB               	movwf	LCD_Write_Text@text
  2908     061B  3089               	movlw	high (STR_29| (0+32768))
  2909     061C  00FC               	movwf	LCD_Write_Text@text+1
  2910     061D  3001               	movlw	1
  2911     061E  3185  2502  3186   	fcall	_LCD_Write_Text
  2912                           
  2913                           ;Menu.c: 155:     LCD_Write_Text(2,1,"1.TURNR    3.OFF    ");
  2914     0621  01FA               	clrf	LCD_Write_Text@col
  2915     0622  0AFA               	incf	LCD_Write_Text@col,f
  2916     0623  3050               	movlw	low (STR_30| (0+32768))
  2917     0624  00FB               	movwf	LCD_Write_Text@text
  2918     0625  3089               	movlw	high (STR_30| (0+32768))
  2919     0626  00FC               	movwf	LCD_Write_Text@text+1
  2920     0627  3002               	movlw	2
  2921     0628  3185  2502  3186   	fcall	_LCD_Write_Text
  2922                           
  2923                           ;Menu.c: 156:     LCD_Write_Text(3,1,"2.TURNL    4.BACK   ");
  2924     062B  01FA               	clrf	LCD_Write_Text@col
  2925     062C  0AFA               	incf	LCD_Write_Text@col,f
  2926     062D  30A4               	movlw	low (STR_31| (0+32768))
  2927     062E  00FB               	movwf	LCD_Write_Text@text
  2928     062F  3089               	movlw	high (STR_31| (0+32768))
  2929     0630  00FC               	movwf	LCD_Write_Text@text+1
  2930     0631  3003               	movlw	3
  2931     0632  3185  2502  3186   	fcall	_LCD_Write_Text
  2932                           
  2933                           ;Menu.c: 157:     LCD_Write_Text(4,1,"OP:                 ");
  2934     0635  01FA               	clrf	LCD_Write_Text@col
  2935     0636  0AFA               	incf	LCD_Write_Text@col,f
  2936     0637  3000               	movlw	low (STR_4| (0+32768))
  2937     0638  00FB               	movwf	LCD_Write_Text@text
  2938     0639  3088               	movlw	high (STR_4| (0+32768))
  2939     063A  00FC               	movwf	LCD_Write_Text@text+1
  2940     063B  3004               	movlw	4
  2941     063C  3185  2502  3186   	fcall	_LCD_Write_Text
  2942     063F                     l200:
  2943     063F  0008               	return
  2944     0640                     __end_of_MenuMOTORA:
  2945                           
  2946                           	psect	text9
  2947     05EE                     __ptext9:	
  2948 ;; *************** function _MenuLeds *****************
  2949 ;; Defined at:
  2950 ;;		line 123 in file "Menu.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;		None
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;		None
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2968 ;;Total ram usage:        0 bytes
  2969 ;; Hardware stack levels used: 1
  2970 ;; Hardware stack levels required when called: 4
  2971 ;; This function calls:
  2972 ;;		_LCD_Write_Text
  2973 ;; This function is called by:
  2974 ;;		_main
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978     05EE                     _MenuLeds:	
  2979                           ;psect for function _MenuLeds
  2980                           
  2981     05EE                     l1315:	
  2982                           ;incstack = 0
  2983                           ; Regs used in _MenuLeds: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2984                           
  2985                           
  2986                           ;Menu.c: 125:     LCD_Write_Text(1,1,"       MENU LEDS    ");
  2987     05EE  01FA               	clrf	LCD_Write_Text@col
  2988     05EF  0AFA               	incf	LCD_Write_Text@col,f
  2989     05F0  307A               	movlw	low (STR_13| (0+32768))
  2990     05F1  00FB               	movwf	LCD_Write_Text@text
  2991     05F2  3089               	movlw	high (STR_13| (0+32768))
  2992     05F3  00FC               	movwf	LCD_Write_Text@text+1
  2993     05F4  3001               	movlw	1
  2994     05F5  3185  2502  3185   	fcall	_LCD_Write_Text
  2995                           
  2996                           ;Menu.c: 126:     LCD_Write_Text(2,1,"1.L1    3.L3        ");
  2997     05F8  01FA               	clrf	LCD_Write_Text@col
  2998     05F9  0AFA               	incf	LCD_Write_Text@col,f
  2999     05FA  3093               	movlw	low (STR_14| (0+32768))
  3000     05FB  00FB               	movwf	LCD_Write_Text@text
  3001     05FC  3088               	movlw	high (STR_14| (0+32768))
  3002     05FD  00FC               	movwf	LCD_Write_Text@text+1
  3003     05FE  3002               	movlw	2
  3004     05FF  3185  2502  3185   	fcall	_LCD_Write_Text
  3005                           
  3006                           ;Menu.c: 127:     LCD_Write_Text(3,1,"2.L2    4.BACK      ");
  3007     0602  01FA               	clrf	LCD_Write_Text@col
  3008     0603  0AFA               	incf	LCD_Write_Text@col,f
  3009     0604  30BD               	movlw	low (STR_15| (0+32768))
  3010     0605  00FB               	movwf	LCD_Write_Text@text
  3011     0606  3088               	movlw	high (STR_15| (0+32768))
  3012     0607  00FC               	movwf	LCD_Write_Text@text+1
  3013     0608  3003               	movlw	3
  3014     0609  3185  2502  3185   	fcall	_LCD_Write_Text
  3015                           
  3016                           ;Menu.c: 128:     LCD_Write_Text(4,1,"OP:                 ");
  3017     060C  01FA               	clrf	LCD_Write_Text@col
  3018     060D  0AFA               	incf	LCD_Write_Text@col,f
  3019     060E  3000               	movlw	low (STR_4| (0+32768))
  3020     060F  00FB               	movwf	LCD_Write_Text@text
  3021     0610  3088               	movlw	high (STR_4| (0+32768))
  3022     0611  00FC               	movwf	LCD_Write_Text@text+1
  3023     0612  3004               	movlw	4
  3024     0613  3185  2502  3185   	fcall	_LCD_Write_Text
  3025     0616                     l188:
  3026     0616  0008               	return
  3027     0617                     __end_of_MenuLeds:
  3028                           
  3029                           	psect	text10
  3030     05C5                     __ptext10:	
  3031 ;; *************** function _MenuL3 *****************
  3032 ;; Defined at:
  3033 ;;		line 145 in file "Menu.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;		None
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;		None
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  1    wreg      void 
  3040 ;; Registers used:
  3041 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3051 ;;Total ram usage:        0 bytes
  3052 ;; Hardware stack levels used: 1
  3053 ;; Hardware stack levels required when called: 4
  3054 ;; This function calls:
  3055 ;;		_LCD_Write_Text
  3056 ;; This function is called by:
  3057 ;;		_main
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061     05C5                     _MenuL3:	
  3062                           ;psect for function _MenuL3
  3063                           
  3064     05C5                     l1323:	
  3065                           ;incstack = 0
  3066                           ; Regs used in _MenuL3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3067                           
  3068                           
  3069                           ;Menu.c: 147:     LCD_Write_Text(1,1,"       MENU LED3    ");
  3070     05C5  01FA               	clrf	LCD_Write_Text@col
  3071     05C6  0AFA               	incf	LCD_Write_Text@col,f
  3072     05C7  3011               	movlw	low (STR_25| (0+32768))
  3073     05C8  00FB               	movwf	LCD_Write_Text@text
  3074     05C9  3089               	movlw	high (STR_25| (0+32768))
  3075     05CA  00FC               	movwf	LCD_Write_Text@text+1
  3076     05CB  3001               	movlw	1
  3077     05CC  3185  2502  3185   	fcall	_LCD_Write_Text
  3078                           
  3079                           ;Menu.c: 148:     LCD_Write_Text(2,1,"1.ON    3.BACK      ");
  3080     05CF  01FA               	clrf	LCD_Write_Text@col
  3081     05D0  0AFA               	incf	LCD_Write_Text@col,f
  3082     05D1  30A8               	movlw	low (STR_18| (0+32768))
  3083     05D2  00FB               	movwf	LCD_Write_Text@text
  3084     05D3  3088               	movlw	high (STR_18| (0+32768))
  3085     05D4  00FC               	movwf	LCD_Write_Text@text+1
  3086     05D5  3002               	movlw	2
  3087     05D6  3185  2502  3185   	fcall	_LCD_Write_Text
  3088                           
  3089                           ;Menu.c: 149:     LCD_Write_Text(3,1,"2.OFF               ");
  3090     05D9  01FA               	clrf	LCD_Write_Text@col
  3091     05DA  0AFA               	incf	LCD_Write_Text@col,f
  3092     05DB  303F               	movlw	low (STR_19| (0+32768))
  3093     05DC  00FB               	movwf	LCD_Write_Text@text
  3094     05DD  3088               	movlw	high (STR_19| (0+32768))
  3095     05DE  00FC               	movwf	LCD_Write_Text@text+1
  3096     05DF  3003               	movlw	3
  3097     05E0  3185  2502  3185   	fcall	_LCD_Write_Text
  3098                           
  3099                           ;Menu.c: 150:     LCD_Write_Text(4,1,"OP:                 ");
  3100     05E3  01FA               	clrf	LCD_Write_Text@col
  3101     05E4  0AFA               	incf	LCD_Write_Text@col,f
  3102     05E5  3000               	movlw	low (STR_4| (0+32768))
  3103     05E6  00FB               	movwf	LCD_Write_Text@text
  3104     05E7  3088               	movlw	high (STR_4| (0+32768))
  3105     05E8  00FC               	movwf	LCD_Write_Text@text+1
  3106     05E9  3004               	movlw	4
  3107     05EA  3185  2502  3185   	fcall	_LCD_Write_Text
  3108     05ED                     l197:
  3109     05ED  0008               	return
  3110     05EE                     __end_of_MenuL3:
  3111                           
  3112                           	psect	text11
  3113     059C                     __ptext11:	
  3114 ;; *************** function _MenuL2 *****************
  3115 ;; Defined at:
  3116 ;;		line 138 in file "Menu.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;		None
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;		None
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  1    wreg      void 
  3123 ;; Registers used:
  3124 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3134 ;;Total ram usage:        0 bytes
  3135 ;; Hardware stack levels used: 1
  3136 ;; Hardware stack levels required when called: 4
  3137 ;; This function calls:
  3138 ;;		_LCD_Write_Text
  3139 ;; This function is called by:
  3140 ;;		_main
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144     059C                     _MenuL2:	
  3145                           ;psect for function _MenuL2
  3146                           
  3147     059C                     l1321:	
  3148                           ;incstack = 0
  3149                           ; Regs used in _MenuL2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3150                           
  3151                           
  3152                           ;Menu.c: 140:     LCD_Write_Text(1,1,"       MENU LED2    ");
  3153     059C  01FA               	clrf	LCD_Write_Text@col
  3154     059D  0AFA               	incf	LCD_Write_Text@col,f
  3155     059E  30FC               	movlw	low (STR_21| (0+32768))
  3156     059F  00FB               	movwf	LCD_Write_Text@text
  3157     05A0  3088               	movlw	high (STR_21| (0+32768))
  3158     05A1  00FC               	movwf	LCD_Write_Text@text+1
  3159     05A2  3001               	movlw	1
  3160     05A3  3185  2502  3185   	fcall	_LCD_Write_Text
  3161                           
  3162                           ;Menu.c: 141:     LCD_Write_Text(2,1,"1.ON    3.BACK      ");
  3163     05A6  01FA               	clrf	LCD_Write_Text@col
  3164     05A7  0AFA               	incf	LCD_Write_Text@col,f
  3165     05A8  30A8               	movlw	low (STR_18| (0+32768))
  3166     05A9  00FB               	movwf	LCD_Write_Text@text
  3167     05AA  3088               	movlw	high (STR_18| (0+32768))
  3168     05AB  00FC               	movwf	LCD_Write_Text@text+1
  3169     05AC  3002               	movlw	2
  3170     05AD  3185  2502  3185   	fcall	_LCD_Write_Text
  3171                           
  3172                           ;Menu.c: 142:     LCD_Write_Text(3,1,"2.OFF               ");
  3173     05B0  01FA               	clrf	LCD_Write_Text@col
  3174     05B1  0AFA               	incf	LCD_Write_Text@col,f
  3175     05B2  303F               	movlw	low (STR_19| (0+32768))
  3176     05B3  00FB               	movwf	LCD_Write_Text@text
  3177     05B4  3088               	movlw	high (STR_19| (0+32768))
  3178     05B5  00FC               	movwf	LCD_Write_Text@text+1
  3179     05B6  3003               	movlw	3
  3180     05B7  3185  2502  3185   	fcall	_LCD_Write_Text
  3181                           
  3182                           ;Menu.c: 143:     LCD_Write_Text(4,1,"OP:                 ");
  3183     05BA  01FA               	clrf	LCD_Write_Text@col
  3184     05BB  0AFA               	incf	LCD_Write_Text@col,f
  3185     05BC  3000               	movlw	low (STR_4| (0+32768))
  3186     05BD  00FB               	movwf	LCD_Write_Text@text
  3187     05BE  3088               	movlw	high (STR_4| (0+32768))
  3188     05BF  00FC               	movwf	LCD_Write_Text@text+1
  3189     05C0  3004               	movlw	4
  3190     05C1  3185  2502  3185   	fcall	_LCD_Write_Text
  3191     05C4                     l194:
  3192     05C4  0008               	return
  3193     05C5                     __end_of_MenuL2:
  3194                           
  3195                           	psect	text12
  3196     0573                     __ptext12:	
  3197 ;; *************** function _MenuL1 *****************
  3198 ;; Defined at:
  3199 ;;		line 131 in file "Menu.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;		None
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;		None
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      void 
  3206 ;; Registers used:
  3207 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3217 ;;Total ram usage:        0 bytes
  3218 ;; Hardware stack levels used: 1
  3219 ;; Hardware stack levels required when called: 4
  3220 ;; This function calls:
  3221 ;;		_LCD_Write_Text
  3222 ;; This function is called by:
  3223 ;;		_main
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227     0573                     _MenuL1:	
  3228                           ;psect for function _MenuL1
  3229                           
  3230     0573                     l1319:	
  3231                           ;incstack = 0
  3232                           ; Regs used in _MenuL1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3233                           
  3234                           
  3235                           ;Menu.c: 133:     LCD_Write_Text(1,1,"       MENU LED1    ");
  3236     0573  01FA               	clrf	LCD_Write_Text@col
  3237     0574  0AFA               	incf	LCD_Write_Text@col,f
  3238     0575  30E7               	movlw	low (STR_17| (0+32768))
  3239     0576  00FB               	movwf	LCD_Write_Text@text
  3240     0577  3088               	movlw	high (STR_17| (0+32768))
  3241     0578  00FC               	movwf	LCD_Write_Text@text+1
  3242     0579  3001               	movlw	1
  3243     057A  3185  2502  3185   	fcall	_LCD_Write_Text
  3244                           
  3245                           ;Menu.c: 134:     LCD_Write_Text(2,1,"1.ON    3.BACK      ");
  3246     057D  01FA               	clrf	LCD_Write_Text@col
  3247     057E  0AFA               	incf	LCD_Write_Text@col,f
  3248     057F  30A8               	movlw	low (STR_18| (0+32768))
  3249     0580  00FB               	movwf	LCD_Write_Text@text
  3250     0581  3088               	movlw	high (STR_18| (0+32768))
  3251     0582  00FC               	movwf	LCD_Write_Text@text+1
  3252     0583  3002               	movlw	2
  3253     0584  3185  2502  3185   	fcall	_LCD_Write_Text
  3254                           
  3255                           ;Menu.c: 135:     LCD_Write_Text(3,1,"2.OFF               ");
  3256     0587  01FA               	clrf	LCD_Write_Text@col
  3257     0588  0AFA               	incf	LCD_Write_Text@col,f
  3258     0589  303F               	movlw	low (STR_19| (0+32768))
  3259     058A  00FB               	movwf	LCD_Write_Text@text
  3260     058B  3088               	movlw	high (STR_19| (0+32768))
  3261     058C  00FC               	movwf	LCD_Write_Text@text+1
  3262     058D  3003               	movlw	3
  3263     058E  3185  2502  3185   	fcall	_LCD_Write_Text
  3264                           
  3265                           ;Menu.c: 136:     LCD_Write_Text(4,1,"OP:                 ");
  3266     0591  01FA               	clrf	LCD_Write_Text@col
  3267     0592  0AFA               	incf	LCD_Write_Text@col,f
  3268     0593  3000               	movlw	low (STR_4| (0+32768))
  3269     0594  00FB               	movwf	LCD_Write_Text@text
  3270     0595  3088               	movlw	high (STR_4| (0+32768))
  3271     0596  00FC               	movwf	LCD_Write_Text@text+1
  3272     0597  3004               	movlw	4
  3273     0598  3185  2502  3185   	fcall	_LCD_Write_Text
  3274     059B                     l191:
  3275     059B  0008               	return
  3276     059C                     __end_of_MenuL1:
  3277                           
  3278                           	psect	text13
  3279     0502                     __ptext13:	
  3280 ;; *************** function _LCD_Write_Text *****************
  3281 ;; Defined at:
  3282 ;;		line 104 in file "LCD_LIB.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;  fila            1    wreg     unsigned char 
  3285 ;;  col             1   10[COMMON] unsigned char 
  3286 ;;  text            2   11[COMMON] PTR unsigned char 
  3287 ;;		 -> STR_36(21), STR_35(21), STR_34(21), STR_33(21), 
  3288 ;;		 -> STR_32(21), STR_31(21), STR_30(21), STR_29(21), 
  3289 ;;		 -> STR_28(21), STR_27(21), STR_26(21), STR_25(21), 
  3290 ;;		 -> STR_24(21), STR_23(21), STR_22(21), STR_21(21), 
  3291 ;;		 -> STR_20(21), STR_19(21), STR_18(21), STR_17(21), 
  3292 ;;		 -> STR_16(21), STR_15(21), STR_14(21), STR_13(21), 
  3293 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
  3294 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
  3295 ;;		 -> STR_4(21), STR_3(21), STR_2(21), STR_1(21), 
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;  fila            1    0[BANK0 ] unsigned char 
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  1    wreg      void 
  3300 ;; Registers used:
  3301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3307 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3308 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3309 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3310 ;;      Totals:         4       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3311 ;;Total ram usage:        5 bytes
  3312 ;; Hardware stack levels used: 1
  3313 ;; Hardware stack levels required when called: 3
  3314 ;; This function calls:
  3315 ;;		_LCD_Set_Cursor
  3316 ;;		_LCD_Write_Cp
  3317 ;; This function is called by:
  3318 ;;		_MenuPPAL
  3319 ;;		_MenuSensores
  3320 ;;		_MenuMotores
  3321 ;;		_MenuLeds
  3322 ;;		_MenuL1
  3323 ;;		_MenuL2
  3324 ;;		_MenuL3
  3325 ;;		_MenuMOTORA
  3326 ;;		_MenuMOTORB
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330     0502                     _LCD_Write_Text:	
  3331                           ;psect for function _LCD_Write_Text
  3332                           
  3333                           
  3334                           ;incstack = 0
  3335                           ; Regs used in _LCD_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3336                           ;LCD_Write_Text@fila stored from wreg
  3337     0502  0020               	movlb	0	; select bank0
  3338     0503  00A0               	movwf	LCD_Write_Text@fila
  3339     0504                     l1233:
  3340                           
  3341                           ;LCD_LIB.c: 105:     LCD_Set_Cursor(fila, col);
  3342     0504  087A               	movf	LCD_Write_Text@col,w
  3343     0505  00F5               	movwf	LCD_Set_Cursor@col
  3344     0506  0820               	movf	LCD_Write_Text@fila,w
  3345     0507  3186  26BB  3185   	fcall	_LCD_Set_Cursor
  3346                           
  3347                           ;LCD_LIB.c: 106:     while(*text){
  3348     050A  2D17               	goto	l1239
  3349     050B                     l1235:
  3350                           
  3351                           ;LCD_LIB.c: 107:         LCD_Write_Cp(*text);
  3352     050B  087B               	movf	LCD_Write_Text@text,w
  3353     050C  0084               	movwf	4
  3354     050D  087C               	movf	LCD_Write_Text@text+1,w
  3355     050E  0085               	movwf	5
  3356     050F  0800               	movf	0,w	;code access
  3357     0510  3184  24D1  3185   	fcall	_LCD_Write_Cp
  3358     0513                     l1237:
  3359                           
  3360                           ;LCD_LIB.c: 108:         text++;
  3361     0513  3001               	movlw	1
  3362     0514  07FB               	addwf	LCD_Write_Text@text,f
  3363     0515  3000               	movlw	0
  3364     0516  3DFC               	addwfc	LCD_Write_Text@text+1,f
  3365     0517                     l1239:
  3366                           
  3367                           ;LCD_LIB.c: 106:     while(*text){
  3368     0517  087B               	movf	LCD_Write_Text@text,w
  3369     0518  0084               	movwf	4
  3370     0519  087C               	movf	LCD_Write_Text@text+1,w
  3371     051A  0085               	movwf	5
  3372     051B  0012               	moviw fsr0++
  3373     051C  1D03               	btfss	3,2
  3374     051D  2D1F               	goto	u241
  3375     051E  2D20               	goto	u240
  3376     051F                     u241:
  3377     051F  2D0B               	goto	l1235
  3378     0520                     u240:
  3379     0520                     l121:
  3380     0520  0008               	return
  3381     0521                     __end_of_LCD_Write_Text:
  3382                           
  3383                           	psect	text14
  3384     04D1                     __ptext14:	
  3385 ;; *************** function _LCD_Write_Cp *****************
  3386 ;; Defined at:
  3387 ;;		line 72 in file "LCD_LIB.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  letra           1    wreg     unsigned char 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  letra           1    4[COMMON] unsigned char 
  3392 ;;  NibbleL         1    3[COMMON] unsigned char 
  3393 ;;  NibbleH         1    2[COMMON] unsigned char 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0, pclath, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3404 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3405 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3406 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3407 ;;Total ram usage:        4 bytes
  3408 ;; Hardware stack levels used: 1
  3409 ;; Hardware stack levels required when called: 1
  3410 ;; This function calls:
  3411 ;;		_Load_Data
  3412 ;; This function is called by:
  3413 ;;		_LCD_Write
  3414 ;;		_LCD_Write_Text
  3415 ;;		_LCD_Write_Text_Cp
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419     04D1                     _LCD_Write_Cp:	
  3420                           ;psect for function _LCD_Write_Cp
  3421                           
  3422                           
  3423                           ;incstack = 0
  3424                           ; Regs used in _LCD_Write_Cp: [wreg+status,2+status,0+pclath+cstack]
  3425                           ;LCD_Write_Cp@letra stored from wreg
  3426     04D1  00F4               	movwf	LCD_Write_Cp@letra
  3427     04D2                     l1173:
  3428                           
  3429                           ;LCD_LIB.c: 73:     char NibbleH, NibbleL;;LCD_LIB.c: 74:     NibbleH = letra>>4;
  3430     04D2  0874               	movf	LCD_Write_Cp@letra,w
  3431     04D3  00F1               	movwf	??_LCD_Write_Cp
  3432     04D4  3004               	movlw	4
  3433     04D5                     u235:
  3434     04D5  36F1               	lsrf	??_LCD_Write_Cp,f
  3435     04D6  0B89               	decfsz	9,f
  3436     04D7  2CD5               	goto	u235
  3437     04D8  0871               	movf	??_LCD_Write_Cp,w
  3438     04D9  00F2               	movwf	LCD_Write_Cp@NibbleH
  3439     04DA                     l1175:
  3440                           
  3441                           ;LCD_LIB.c: 75:     NibbleL = letra & 0x0F;
  3442     04DA  0874               	movf	LCD_Write_Cp@letra,w
  3443     04DB  390F               	andlw	15
  3444     04DC  00F3               	movwf	LCD_Write_Cp@NibbleL
  3445     04DD                     l1177:
  3446                           
  3447                           ;LCD_LIB.c: 76:     Load_Data(NibbleH);
  3448     04DD  0872               	movf	LCD_Write_Cp@NibbleH,w
  3449     04DE  3185  254A  3184   	fcall	_Load_Data
  3450     04E1                     l1179:
  3451                           
  3452                           ;LCD_LIB.c: 77:     Load_Data(NibbleL);
  3453     04E1  0873               	movf	LCD_Write_Cp@NibbleL,w
  3454     04E2  3185  254A  3184   	fcall	_Load_Data
  3455     04E5                     l97:
  3456     04E5  0008               	return
  3457     04E6                     __end_of_LCD_Write_Cp:
  3458                           
  3459                           	psect	text15
  3460     054A                     __ptext15:	
  3461 ;; *************** function _Load_Data *****************
  3462 ;; Defined at:
  3463 ;;		line 20 in file "LCD_LIB.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  data            1    wreg     unsigned char 
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;  data            1    0[COMMON] unsigned char 
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      void 
  3470 ;; Registers used:
  3471 ;;		wreg
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3478 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3480 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3481 ;;Total ram usage:        1 bytes
  3482 ;; Hardware stack levels used: 1
  3483 ;; This function calls:
  3484 ;;		Nothing
  3485 ;; This function is called by:
  3486 ;;		_LCD_Write_Cp
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490     054A                     _Load_Data:	
  3491                           ;psect for function _Load_Data
  3492                           
  3493                           
  3494                           ;incstack = 0
  3495                           ; Regs used in _Load_Data: [wreg]
  3496                           ;Load_Data@data stored from wreg
  3497     054A  00F0               	movwf	Load_Data@data
  3498     054B                     l1143:
  3499                           
  3500                           ;LCD_LIB.c: 21:     LATDbits.LATD0 = 1;
  3501     054B  0022               	movlb	2	; select bank2
  3502     054C  140F               	bsf	15,0	;volatile
  3503     054D                     l1145:
  3504                           
  3505                           ;LCD_LIB.c: 23:     if( (data & 1) == 0 ) LATDbits.LATD4 = 0; else LATDbits.LATD4 = 1;
  3506     054D  1870               	btfsc	Load_Data@data,0
  3507     054E  2D50               	goto	u181
  3508     054F  2D51               	goto	u180
  3509     0550                     u181:
  3510     0550  2D53               	goto	l80
  3511     0551                     u180:
  3512     0551                     l1147:
  3513     0551  120F               	bcf	15,4	;volatile
  3514     0552  2D54               	goto	l1149
  3515     0553                     l80:
  3516     0553  160F               	bsf	15,4	;volatile
  3517     0554                     l1149:
  3518                           
  3519                           ;LCD_LIB.c: 24:     if( (data & 2) == 0 ) LATDbits.LATD5 = 0; else LATDbits.LATD5 = 1;
  3520     0554  18F0               	btfsc	Load_Data@data,1
  3521     0555  2D57               	goto	u191
  3522     0556  2D58               	goto	u190
  3523     0557                     u191:
  3524     0557  2D5A               	goto	l82
  3525     0558                     u190:
  3526     0558                     l1151:
  3527     0558  128F               	bcf	15,5	;volatile
  3528     0559  2D5B               	goto	l1153
  3529     055A                     l82:
  3530     055A  168F               	bsf	15,5	;volatile
  3531     055B                     l1153:
  3532                           
  3533                           ;LCD_LIB.c: 25:     if( (data & 4) == 0 ) LATDbits.LATD6 = 0; else LATDbits.LATD6 = 1;
  3534     055B  1970               	btfsc	Load_Data@data,2
  3535     055C  2D5E               	goto	u201
  3536     055D  2D5F               	goto	u200
  3537     055E                     u201:
  3538     055E  2D61               	goto	l84
  3539     055F                     u200:
  3540     055F                     l1155:
  3541     055F  130F               	bcf	15,6	;volatile
  3542     0560  2D62               	goto	l1157
  3543     0561                     l84:
  3544     0561  170F               	bsf	15,6	;volatile
  3545     0562                     l1157:
  3546                           
  3547                           ;LCD_LIB.c: 26:     if( (data & 8) == 0 ) LATDbits.LATD7 = 0; else LATDbits.LATD7 = 1;
  3548     0562  19F0               	btfsc	Load_Data@data,3
  3549     0563  2D65               	goto	u211
  3550     0564  2D66               	goto	u210
  3551     0565                     u211:
  3552     0565  2D68               	goto	l86
  3553     0566                     u210:
  3554     0566                     l1159:
  3555     0566  138F               	bcf	15,7	;volatile
  3556     0567  2D69               	goto	l87
  3557     0568                     l86:
  3558     0568  178F               	bsf	15,7	;volatile
  3559     0569                     l87:
  3560                           
  3561                           ;LCD_LIB.c: 28:     LATDbits.LATD1 = 0;
  3562     0569  108F               	bcf	15,1	;volatile
  3563                           
  3564                           ;LCD_LIB.c: 29:     LATDbits.LATD1 = 1;
  3565     056A  148F               	bsf	15,1	;volatile
  3566                           
  3567                           ;LCD_LIB.c: 30:     LATDbits.LATD1 = 0;
  3568     056B  108F               	bcf	15,1	;volatile
  3569     056C                     l1161:
  3570                           
  3571                           ;LCD_LIB.c: 32:     _delay((unsigned long)((300)*(20000000UL/4000000.0)));
  3572     056C  30D6               	movlw	214
  3573     056D                     u317:
  3574     056D  3200               	nop2
  3575     056E  3200               	nop2
  3576     056F  0B89               	decfsz	9,f
  3577     0570  2D6D               	goto	u317
  3578     0571  3200               	nop2
  3579     0572                     l88:
  3580     0572  0008               	return
  3581     0573                     __end_of_Load_Data:
  3582                           
  3583                           	psect	text16
  3584     06BB                     __ptext16:	
  3585 ;; *************** function _LCD_Set_Cursor *****************
  3586 ;; Defined at:
  3587 ;;		line 90 in file "LCD_LIB.c"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;  fila            1    wreg     unsigned char 
  3590 ;;  col             1    5[COMMON] unsigned char 
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;  fila            1    8[COMMON] unsigned char 
  3593 ;;  pos             1    9[COMMON] unsigned char 
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3603 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3604 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3605 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3606 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3607 ;;Total ram usage:        5 bytes
  3608 ;; Hardware stack levels used: 1
  3609 ;; Hardware stack levels required when called: 2
  3610 ;; This function calls:
  3611 ;;		_LCD_Cmd
  3612 ;; This function is called by:
  3613 ;;		_LCD_Write
  3614 ;;		_LCD_Write_Text
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618     06BB                     _LCD_Set_Cursor:	
  3619                           ;psect for function _LCD_Set_Cursor
  3620                           
  3621                           
  3622                           ;incstack = 0
  3623                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3624                           ;LCD_Set_Cursor@fila stored from wreg
  3625     06BB  00F8               	movwf	LCD_Set_Cursor@fila
  3626     06BC                     l1181:
  3627                           
  3628                           ;LCD_LIB.c: 91:     char pos;;LCD_LIB.c: 92:     switch(fila){
  3629     06BC  2ECD               	goto	l1193
  3630     06BD                     l1183:
  3631     06BD  0875               	movf	LCD_Set_Cursor@col,w
  3632     06BE  3E7F               	addlw	127
  3633     06BF  00F9               	movwf	LCD_Set_Cursor@pos
  3634     06C0  2EE3               	goto	l1195
  3635     06C1                     l1185:
  3636     06C1  0875               	movf	LCD_Set_Cursor@col,w
  3637     06C2  3EBF               	addlw	191
  3638     06C3  00F9               	movwf	LCD_Set_Cursor@pos
  3639     06C4  2EE3               	goto	l1195
  3640     06C5                     l1187:
  3641     06C5  0875               	movf	LCD_Set_Cursor@col,w
  3642     06C6  3E93               	addlw	147
  3643     06C7  00F9               	movwf	LCD_Set_Cursor@pos
  3644     06C8  2EE3               	goto	l1195
  3645     06C9                     l1189:
  3646     06C9  0875               	movf	LCD_Set_Cursor@col,w
  3647     06CA  3ED3               	addlw	211
  3648     06CB  00F9               	movwf	LCD_Set_Cursor@pos
  3649     06CC  2EE3               	goto	l1195
  3650     06CD                     l1193:
  3651     06CD  0878               	movf	LCD_Set_Cursor@fila,w
  3652     06CE  00F6               	movwf	??_LCD_Set_Cursor
  3653     06CF  01F7               	clrf	??_LCD_Set_Cursor+1
  3654                           
  3655                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3656                           ; Switch size 1, requested type "simple"
  3657                           ; Number of cases is 1, Range of values is 0 to 0
  3658                           ; switch strategies available:
  3659                           ; Name         Instructions Cycles
  3660                           ; simple_byte            4     3 (average)
  3661                           ; direct_byte            8     6 (fixed)
  3662                           ; jumptable            260     6 (fixed)
  3663                           ;	Chosen strategy is simple_byte
  3664     06D0  0877               	movf	??_LCD_Set_Cursor+1,w
  3665     06D1  3A00               	xorlw	0	; case 0
  3666     06D2  1903               	skipnz
  3667     06D3  2ED5               	goto	l1409
  3668     06D4  2EE3               	goto	l1195
  3669     06D5                     l1409:
  3670                           
  3671                           ; Switch size 1, requested type "simple"
  3672                           ; Number of cases is 4, Range of values is 1 to 4
  3673                           ; switch strategies available:
  3674                           ; Name         Instructions Cycles
  3675                           ; simple_byte           13     7 (average)
  3676                           ; direct_byte           17     9 (fixed)
  3677                           ; jumptable            263     9 (fixed)
  3678                           ;	Chosen strategy is simple_byte
  3679     06D5  0876               	movf	??_LCD_Set_Cursor,w
  3680     06D6  3A01               	xorlw	1	; case 1
  3681     06D7  1903               	skipnz
  3682     06D8  2EBD               	goto	l1183
  3683     06D9  3A03               	xorlw	3	; case 2
  3684     06DA  1903               	skipnz
  3685     06DB  2EC1               	goto	l1185
  3686     06DC  3A01               	xorlw	1	; case 3
  3687     06DD  1903               	skipnz
  3688     06DE  2EC5               	goto	l1187
  3689     06DF  3A07               	xorlw	7	; case 4
  3690     06E0  1903               	skipnz
  3691     06E1  2EC9               	goto	l1189
  3692     06E2  2EE3               	goto	l1195
  3693     06E3                     l1195:
  3694                           
  3695                           ;LCD_LIB.c: 98:     LCD_Cmd(pos);
  3696     06E3  0879               	movf	LCD_Set_Cursor@pos,w
  3697     06E4  3184  24E6  3186   	fcall	_LCD_Cmd
  3698     06E7                     l112:
  3699     06E7  0008               	return
  3700     06E8                     __end_of_LCD_Set_Cursor:
  3701                           
  3702                           	psect	text17
  3703     04E6                     __ptext17:	
  3704 ;; *************** function _LCD_Cmd *****************
  3705 ;; Defined at:
  3706 ;;		line 64 in file "LCD_LIB.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;  cmd             1    wreg     unsigned char 
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;  cmd             1    4[COMMON] unsigned char 
  3711 ;;  NibbleL         1    3[COMMON] unsigned char 
  3712 ;;  NibbleH         1    2[COMMON] unsigned char 
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  1    wreg      void 
  3715 ;; Registers used:
  3716 ;;		wreg, status,2, status,0, pclath, cstack
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3723 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3724 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3725 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3726 ;;Total ram usage:        4 bytes
  3727 ;; Hardware stack levels used: 1
  3728 ;; Hardware stack levels required when called: 1
  3729 ;; This function calls:
  3730 ;;		_Load_Cmd
  3731 ;; This function is called by:
  3732 ;;		_LCD_Set_Cursor
  3733 ;;		_SystemInit
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737     04E6                     _LCD_Cmd:	
  3738                           ;psect for function _LCD_Cmd
  3739                           
  3740                           
  3741                           ;incstack = 0
  3742                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3743                           ;LCD_Cmd@cmd stored from wreg
  3744     04E6  00F4               	movwf	LCD_Cmd@cmd
  3745     04E7                     l1163:
  3746                           
  3747                           ;LCD_LIB.c: 65:     char NibbleH, NibbleL;;LCD_LIB.c: 66:     NibbleH = cmd>>4;
  3748     04E7  0874               	movf	LCD_Cmd@cmd,w
  3749     04E8  00F1               	movwf	??_LCD_Cmd
  3750     04E9  3004               	movlw	4
  3751     04EA                     u225:
  3752     04EA  36F1               	lsrf	??_LCD_Cmd,f
  3753     04EB  0B89               	decfsz	9,f
  3754     04EC  2CEA               	goto	u225
  3755     04ED  0871               	movf	??_LCD_Cmd,w
  3756     04EE  00F2               	movwf	LCD_Cmd@NibbleH
  3757     04EF                     l1165:
  3758                           
  3759                           ;LCD_LIB.c: 67:     NibbleL = cmd & 0x0F;
  3760     04EF  0874               	movf	LCD_Cmd@cmd,w
  3761     04F0  390F               	andlw	15
  3762     04F1  00F3               	movwf	LCD_Cmd@NibbleL
  3763     04F2                     l1167:
  3764                           
  3765                           ;LCD_LIB.c: 68:     Load_Cmd(NibbleH);
  3766     04F2  0872               	movf	LCD_Cmd@NibbleH,w
  3767     04F3  3185  2521  3184   	fcall	_Load_Cmd
  3768     04F6                     l1169:
  3769                           
  3770                           ;LCD_LIB.c: 69:     Load_Cmd(NibbleL);
  3771     04F6  0873               	movf	LCD_Cmd@NibbleL,w
  3772     04F7  3185  2521  3184   	fcall	_Load_Cmd
  3773     04FA                     l1171:
  3774                           
  3775                           ;LCD_LIB.c: 70:     _delay((unsigned long)((2)*(20000000UL/4000.0)));
  3776     04FA  300D               	movlw	13
  3777     04FB  00F1               	movwf	??_LCD_Cmd
  3778     04FC  30FC               	movlw	252
  3779     04FD                     u327:
  3780     04FD  0B89               	decfsz	9,f
  3781     04FE  2CFD               	goto	u327
  3782     04FF  0BF1               	decfsz	??_LCD_Cmd,f
  3783     0500  2CFD               	goto	u327
  3784     0501                     l94:
  3785     0501  0008               	return
  3786     0502                     __end_of_LCD_Cmd:
  3787                           
  3788                           	psect	text18
  3789     0521                     __ptext18:	
  3790 ;; *************** function _Load_Cmd *****************
  3791 ;; Defined at:
  3792 ;;		line 6 in file "LCD_LIB.c"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;  cmd             1    wreg     unsigned char 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  cmd             1    0[COMMON] unsigned char 
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  1    wreg      void 
  3799 ;; Registers used:
  3800 ;;		wreg
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3809 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3810 ;;Total ram usage:        1 bytes
  3811 ;; Hardware stack levels used: 1
  3812 ;; This function calls:
  3813 ;;		Nothing
  3814 ;; This function is called by:
  3815 ;;		_LCD_Init
  3816 ;;		_LCD_Cmd
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820     0521                     _Load_Cmd:	
  3821                           ;psect for function _Load_Cmd
  3822                           
  3823                           
  3824                           ;incstack = 0
  3825                           ; Regs used in _Load_Cmd: [wreg]
  3826                           ;Load_Cmd@cmd stored from wreg
  3827     0521  00F0               	movwf	Load_Cmd@cmd
  3828     0522                     l1123:
  3829                           
  3830                           ;LCD_LIB.c: 7:     LATDbits.LATD0 = 0;
  3831     0522  0022               	movlb	2	; select bank2
  3832     0523  100F               	bcf	15,0	;volatile
  3833     0524                     l1125:
  3834                           
  3835                           ;LCD_LIB.c: 9:     if( (cmd & 1) == 0 ) LATDbits.LATD4 = 0; else LATDbits.LATD4 = 1;
  3836     0524  1870               	btfsc	Load_Cmd@cmd,0
  3837     0525  2D27               	goto	u141
  3838     0526  2D28               	goto	u140
  3839     0527                     u141:
  3840     0527  2D2A               	goto	l69
  3841     0528                     u140:
  3842     0528                     l1127:
  3843     0528  120F               	bcf	15,4	;volatile
  3844     0529  2D2B               	goto	l1129
  3845     052A                     l69:
  3846     052A  160F               	bsf	15,4	;volatile
  3847     052B                     l1129:
  3848                           
  3849                           ;LCD_LIB.c: 10:     if( (cmd & 2) == 0 ) LATDbits.LATD5 = 0; else LATDbits.LATD5 = 1;
  3850     052B  18F0               	btfsc	Load_Cmd@cmd,1
  3851     052C  2D2E               	goto	u151
  3852     052D  2D2F               	goto	u150
  3853     052E                     u151:
  3854     052E  2D31               	goto	l71
  3855     052F                     u150:
  3856     052F                     l1131:
  3857     052F  128F               	bcf	15,5	;volatile
  3858     0530  2D32               	goto	l1133
  3859     0531                     l71:
  3860     0531  168F               	bsf	15,5	;volatile
  3861     0532                     l1133:
  3862                           
  3863                           ;LCD_LIB.c: 11:     if( (cmd & 4) == 0 ) LATDbits.LATD6 = 0; else LATDbits.LATD6 = 1;
  3864     0532  1970               	btfsc	Load_Cmd@cmd,2
  3865     0533  2D35               	goto	u161
  3866     0534  2D36               	goto	u160
  3867     0535                     u161:
  3868     0535  2D38               	goto	l73
  3869     0536                     u160:
  3870     0536                     l1135:
  3871     0536  130F               	bcf	15,6	;volatile
  3872     0537  2D39               	goto	l1137
  3873     0538                     l73:
  3874     0538  170F               	bsf	15,6	;volatile
  3875     0539                     l1137:
  3876                           
  3877                           ;LCD_LIB.c: 12:     if( (cmd & 8) == 0 ) LATDbits.LATD7 = 0; else LATDbits.LATD7 = 1;
  3878     0539  19F0               	btfsc	Load_Cmd@cmd,3
  3879     053A  2D3C               	goto	u171
  3880     053B  2D3D               	goto	u170
  3881     053C                     u171:
  3882     053C  2D3F               	goto	l75
  3883     053D                     u170:
  3884     053D                     l1139:
  3885     053D  138F               	bcf	15,7	;volatile
  3886     053E  2D40               	goto	l76
  3887     053F                     l75:
  3888     053F  178F               	bsf	15,7	;volatile
  3889     0540                     l76:
  3890                           
  3891                           ;LCD_LIB.c: 14:     LATDbits.LATD1 = 0;
  3892     0540  108F               	bcf	15,1	;volatile
  3893                           
  3894                           ;LCD_LIB.c: 15:     LATDbits.LATD1 = 1;
  3895     0541  148F               	bsf	15,1	;volatile
  3896                           
  3897                           ;LCD_LIB.c: 16:     LATDbits.LATD1 = 0;
  3898     0542  108F               	bcf	15,1	;volatile
  3899     0543                     l1141:
  3900                           
  3901                           ;LCD_LIB.c: 17:     _delay((unsigned long)((300)*(20000000UL/4000000.0)));
  3902     0543  30D6               	movlw	214
  3903     0544                     u337:
  3904     0544  3200               	nop2
  3905     0545  3200               	nop2
  3906     0546  0B89               	decfsz	9,f
  3907     0547  2D44               	goto	u337
  3908     0548  3200               	nop2
  3909     0549                     l77:
  3910     0549  0008               	return
  3911     054A                     __end_of_Load_Cmd:
  3912     007E                     btemp	set	126	;btemp
  3913     007E                     wtemp0	set	126
  3914                           
  3915                           	psect	config
  3916                           
  3917                           ;Config register CONFIG1 @ 0x8007
  3918                           ;	Oscillator Selection
  3919                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  3920                           ;	Watchdog Timer Enable
  3921                           ;	WDTE = OFF, WDT disabled
  3922                           ;	Power-up Timer Enable
  3923                           ;	PWRTE = OFF, PWRT disabled
  3924                           ;	MCLR Pin Function Select
  3925                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3926                           ;	Flash Program Memory Code Protection
  3927                           ;	CP = OFF, Program memory code protection is disabled
  3928                           ;	Data Memory Code Protection
  3929                           ;	CPD = OFF, Data memory code protection is disabled
  3930                           ;	Brown-out Reset Enable
  3931                           ;	BOREN = OFF, Brown-out Reset disabled
  3932                           ;	Clock Out Enable
  3933                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3934                           ;	Internal/External Switchover
  3935                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3936                           ;	Fail-Safe Clock Monitor Enable
  3937                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3938     8007                     	org	32775
  3939     8007  39E2               	dw	14818
  3940                           
  3941                           ;Config register CONFIG2 @ 0x8008
  3942                           ;	Flash Memory Self-Write Protection
  3943                           ;	WRT = OFF, Write protection off
  3944                           ;	Voltage Regulator Capacitor Enable
  3945                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  3946                           ;	PLL Enable
  3947                           ;	PLLEN = OFF, 4x PLL disabled
  3948                           ;	Stack Overflow/Underflow Reset Enable
  3949                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3950                           ;	Brown-out Reset Voltage Selection
  3951                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3952                           ;	Low-Voltage Programming Enable
  3953                           ;	LVP = ON, Low-voltage programming enabled
  3954     8008                     	org	32776
  3955     8008  3EFF               	dw	16127

Data Sizes:
    Strings     483
    Constant    0
    Data        1
    BSS         1
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      3       5
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    LCD_Write_Text@text	PTR unsigned char  size(2) Largest target is 21
		 -> STR_36(CODE[21]), STR_35(CODE[21]), STR_34(CODE[21]), STR_33(CODE[21]), 
		 -> STR_32(CODE[21]), STR_31(CODE[21]), STR_30(CODE[21]), STR_29(CODE[21]), 
		 -> STR_28(CODE[21]), STR_27(CODE[21]), STR_26(CODE[21]), STR_25(CODE[21]), 
		 -> STR_24(CODE[21]), STR_23(CODE[21]), STR_22(CODE[21]), STR_21(CODE[21]), 
		 -> STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 


Critical Paths under _main in COMMON

    _SystemInit->_LCD_Cmd
    _LCD_Init->_Load_Cmd
    _MenuSensores->_LCD_Write_Text
    _MenuPPAL->_LCD_Write_Text
    _LCD_Write->_LCD_Set_Cursor
    _MenuMotores->_LCD_Write_Text
    _MenuMOTORB->_LCD_Write_Text
    _MenuMOTORA->_LCD_Write_Text
    _MenuLeds->_LCD_Write_Text
    _MenuL3->_LCD_Write_Text
    _MenuL2->_LCD_Write_Text
    _MenuL1->_LCD_Write_Text
    _LCD_Write_Text->_LCD_Set_Cursor
    _LCD_Write_Cp->_Load_Data
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_Load_Cmd

Critical Paths under _main in BANK0

    _MenuSensores->_LCD_Write_Text
    _MenuPPAL->_LCD_Write_Text
    _MenuMotores->_LCD_Write_Text
    _MenuMOTORB->_LCD_Write_Text
    _MenuMOTORA->_LCD_Write_Text
    _MenuLeds->_LCD_Write_Text
    _MenuL3->_LCD_Write_Text
    _MenuL2->_LCD_Write_Text
    _MenuL1->_LCD_Write_Text

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   56973
                                              1 BANK0      2     2      0
                             _MenuL1
                             _MenuL2
                             _MenuL3
                           _MenuLeds
                         _MenuMOTORA
                         _MenuMOTORB
                        _MenuMotores
                           _MenuPPAL
                       _MenuSensores
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0     266
                            _LCD_Cmd
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             1     1      0      88
                                              1 COMMON     1     1      0
                           _Load_Cmd
 ---------------------------------------------------------------------------------
 (1) _MenuSensores                                         0     0      0    6205
                     _LCD_Write_Text
 ---------------------------------------------------------------------------------
 (1) _MenuPPAL                                             0     0      0    7067
                          _LCD_Write
                     _LCD_Write_Text
 ---------------------------------------------------------------------------------
 (2) _LCD_Write                                            3     1      2     862
                                             10 COMMON     3     1      2
                     _LCD_Set_Cursor
                       _LCD_Write_Cp
 ---------------------------------------------------------------------------------
 (1) _MenuMotores                                          0     0      0    6205
                     _LCD_Write_Text
 ---------------------------------------------------------------------------------
 (1) _MenuMOTORB                                           0     0      0    6205
                     _LCD_Write_Text
 ---------------------------------------------------------------------------------
 (1) _MenuMOTORA                                           0     0      0    6205
                     _LCD_Write_Text
 ---------------------------------------------------------------------------------
 (1) _MenuLeds                                             0     0      0    6205
                     _LCD_Write_Text
 ---------------------------------------------------------------------------------
 (1) _MenuL3                                               0     0      0    6205
                     _LCD_Write_Text
 ---------------------------------------------------------------------------------
 (1) _MenuL2                                               0     0      0    6205
                     _LCD_Write_Text
 ---------------------------------------------------------------------------------
 (1) _MenuL1                                               0     0      0    6205
                     _LCD_Write_Text
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Text                                       5     2      3    6205
                                             10 COMMON     4     1      3
                                              0 BANK0      1     1      0
                     _LCD_Set_Cursor
                       _LCD_Write_Cp
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Cp                                         4     4      0     178
                                              1 COMMON     4     4      0
                          _Load_Data
 ---------------------------------------------------------------------------------
 (4) _Load_Data                                            1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Set_Cursor                                       5     4      1     466
                                              5 COMMON     5     4      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              4     4      0     178
                                              1 COMMON     4     4      0
                           _Load_Cmd
 ---------------------------------------------------------------------------------
 (3) _Load_Cmd                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MenuL1
     _LCD_Write_Text
       _LCD_Set_Cursor
         _LCD_Cmd
           _Load_Cmd
       _LCD_Write_Cp
         _Load_Data
   _MenuL2
     _LCD_Write_Text
   _MenuL3
     _LCD_Write_Text
   _MenuLeds
     _LCD_Write_Text
   _MenuMOTORA
     _LCD_Write_Text
   _MenuMOTORB
     _LCD_Write_Text
   _MenuMotores
     _LCD_Write_Text
   _MenuPPAL
     _LCD_Write
       _LCD_Set_Cursor
       _LCD_Write_Cp
     _LCD_Write_Text
   _MenuSensores
     _LCD_Write_Text
   _SystemInit
     _LCD_Cmd
     _LCD_Init
       _Load_Cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       5       5        6.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      13      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      13      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Oct 15 00:37:49 2023

                     l71 0531                       l80 0553                       l73 0538  
                     l82 055A                       l75 053F                       l91 079D  
                     l76 0540                       l84 0561                       l77 0549  
                     l69 052A                       l94 0501                       l86 0568  
                     l87 0569                       l88 0572                       l97 04E5  
                     _op 0024                      l112 06E7                      l200 063F  
                    l121 0520                      l203 0668                      l115 04D0  
                    l152 074D                      l182 06BA                      l191 059B  
                    l185 0691                      l194 05C4                      l179 0718  
                    l188 0616                      l197 05ED                      u200 055F  
                    u201 055E                      u210 0566                      u211 0565  
                    u140 0528                      u141 0527                      u150 052F  
                    u151 052E                      u160 0536                      u240 0520  
                    u161 0535                      u225 04EA                      u241 051F  
                    u170 053D                      u171 053C                      u235 04D5  
                    u307 0799                      u180 0551                      u317 056D  
                    u181 0550                      u190 0558                      u327 04FD  
                    u191 0557                      u337 0544                      u267 07EE  
                    u277 075E                      u287 0769                      u297 0773  
                    wreg 0009          __end_of_LCD_Cmd 0502           _LCD_Set_Cursor 06BB  
                   l1201 074E                     l1131 052F                     l1123 0522  
                   l1211 0776                     l1203 075B                     l1141 0543  
                   l1133 0532                     l1125 0524                     l1221 078A  
                   l1213 077A                     l1205 0762                     l1301 0743  
                   l1135 0536                     l1127 0528                     l1151 0558  
                   l1143 054B                     l1231 04CC                     l1311 06E8  
                   l1223 078E                     l1215 077E                     l1207 0766  
                   l1303 0744                     l1137 0539                     l1129 052B  
                   l1161 056C                     l1153 055B                     l1145 054D  
                   l1233 0504                     l1321 059C                     l1313 0692  
                   l1225 0792                     l1217 0782                     l1209 0772  
                   l1305 0745                     l1241 0719                     l1139 053D  
                   l1171 04FA                     l1163 04E7                     l1155 055F  
                   l1147 0551                     l1235 050B                     l1323 05C5  
                   l1315 05EE                     l1227 0796                     l1219 0786  
                   l1307 0746                     l1251 0722                     l1243 071C  
                   l1331 07A2                     l1165 04EF                     l1181 06BC  
                   l1157 0562                     l1149 0554                     l1173 04D2  
                   l1237 0513                     l1325 0617                     l1317 0669  
                   l1229 04C6                     l1309 0749                     l1261 0729  
                   l1253 0723                     l1245 071D                     l1341 07B6  
                   l1333 07A6                     l1167 04F2                     l1183 06BD  
                   l1159 0566                     l1175 04DA                     l1239 0517  
                   l1319 0573                     l1327 0640                     l1271 072F  
                   l1263 072A                     l1255 0725                     l1247 071F  
                   l1407 07CB                     l1343 07BA                     l1335 07AA  
                   l1351 07C6                     l1169 04F6                     l1409 06D5  
                   l1185 06C1                     l1193 06CD                     l1177 04DD  
                   l1281 0736                     l1273 0730                     l1265 072B  
                   l1257 0726                     l1249 0721                     l1345 07BE  
                   l1337 07AE                     l1353 07E8                     l1329 079E  
                   l1187 06C5                     l1195 06E3                     l1179 04E1  
                   l1291 073D                     l1283 0738                     l1275 0732  
                   l1267 072D                     l1259 0727                     l1347 07C2  
                   l1339 07B2                     l1189 06C9                     l1293 073E  
                   l1285 0739                     l1277 0733                     l1269 072E  
                   l1295 0740                     l1287 073A                     l1279 0735  
                   l1297 0741                     l1289 073C                     l1299 0742  
                   STR_1 0965                     STR_2 09CE                     STR_3 0869  
                   STR_4 0800                     STR_5 098F                     STR_6 082A  
                   STR_7 0815                     STR_8 087E                     STR_9 08D2  
                   _main 079E                     fsr0h 0005                     indf0 0000  
                   fsr0l 0004                     btemp 007E                     start 0002  
          ?_LCD_Write_Cp 0070              Load_Cmd@cmd 0070         __end_of_LCD_Init 079E  
          ??_MenuMotores 007E                    ?_main 0070                    STR_10 09B9  
                  STR_11 0854                    STR_20 0800                    STR_12 0800  
                  STR_13 097A                    STR_21 08FC                    STR_22 08A8  
                  STR_30 0950                    STR_14 0893                    STR_23 083F  
                  STR_31 09A4                    STR_15 08BD                    STR_32 0800  
                  STR_24 0800                    STR_16 0800                    STR_33 093B  
                  STR_25 0911                    STR_17 08E7                    STR_26 08A8  
                  STR_34 0950                    STR_18 08A8                    STR_27 083F  
                  STR_35 09A4                    STR_19 083F                    STR_36 0800  
                  STR_28 0800                    STR_29 0926   __end_of_LCD_Set_Cursor 06E8  
                  _cMenu 0023            ?_MenuSensores 0070                    status 0003  
                  wtemp0 007E               _MenuMOTORA 0617               _MenuMOTORB 0640  
         ??_LCD_Write_Cp 0071          __initialization 07F8           _LCD_Write_Text 0502  
           __end_of_main 07F8         __end_of_MenuPPAL 0719         __end_of_Load_Cmd 054A  
       __end_of_MenuLeds 0617                   ??_main 0021                ??_LCD_Cmd 0071  
      __end_of_LCD_Write 04D1          ?_LCD_Set_Cursor 0075           ??_MenuSensores 007E  
    __end_of_MenuMotores 0692                   _ADRESH 009C                   _ADRESL 009B  
                 _BORCON 0116                   _OSCCON 0099   __end_of_LCD_Write_Text 0521  
                 _MenuL1 0573                   _MenuL2 059C                   _MenuL3 05C5  
           LCD_Write@col 007A  __end_of__initialization 07FD                ?_LCD_Init 0070  
            ?_MenuMOTORA 0070              ?_MenuMOTORB 0070          ?_LCD_Write_Text 007A  
         __pcstackCOMMON 0070             __pidataBANK0 04C4           LCD_Cmd@NibbleH 0072  
         LCD_Cmd@NibbleL 0073        __end_of_Load_Data 0573              _MenuMotores 0669  
             _SystemInit 0719     __end_of_LCD_Write_Cp 04E6            Load_Data@data 0070  
             __pbssBANK0 0023                ?_MenuPPAL 0070                ?_Load_Cmd 0070  
              ?_MenuLeds 0070               ??_LCD_Init 0071                  ?_MenuL1 0070  
                ?_MenuL2 0070                  ?_MenuL3 0070               __pmaintext 079E  
   __end_of_MenuSensores 06BB                  _LCD_Cmd 04E6                  _OSCTUNE 0098  
             ??_MenuPPAL 007E               ??_Load_Cmd 0070               ??_MenuLeds 007E  
          LCD_Write@fila 007C         ??_LCD_Set_Cursor 0076                  __ptext1 0719  
                __ptext2 074E                  __ptext3 0692                  __ptext4 06E8  
                __ptext5 04C5                  __ptext6 0669                  __ptext7 0640  
                __ptext8 0617                  __ptext9 05EE              ?_SystemInit 0070  
              _LCD_Write 04C5     end_of_initialization 07FD        LCD_Write_Cp@letra 0074  
      LCD_Write_Text@col 007A                _TRISAbits 008C                _TRISBbits 008D  
              _TRISDbits 008F               ?_LCD_Write 007A         ??_LCD_Write_Text 007D  
             LCD_Cmd@cmd 0074             ??_MenuMOTORA 007E             ??_MenuMOTORB 007E  
           _LCD_Write_Cp 04D1           __end_of_MenuL1 059C           __end_of_MenuL2 05C5  
         __end_of_MenuL3 05EE             ?_MenuMotores 0070      start_initialization 07F8  
              _Load_Data 054A       __end_of_MenuMOTORA 0640       __end_of_MenuMOTORB 0669  
           _MenuSensores 0692                 ??_MenuL1 007E                 ??_MenuL2 007E  
               ??_MenuL3 007E              __pdataBANK0 0024                 ?_LCD_Cmd 0070  
             ?_Load_Data 0070                ___latbits 0003            __pcstackBANK0 0020  
            ??_LCD_Write 007C             ??_SystemInit 0075                 _LCD_Init 074E  
               _LATAbits 010C                 _LATBbits 010D                 _LATDbits 010F  
     __end_of_SystemInit 074E               _ADCON0bits 009D               _ADCON1bits 009E  
    LCD_Write_Cp@NibbleH 0072      LCD_Write_Cp@NibbleL 0073              ??_Load_Data 0070  
               _MenuPPAL 06E8                 _Load_Cmd 0521                 _MenuLeds 05EE  
         LCD_Write@letra 007B               _ANSELAbits 018C               _ANSELBbits 018D  
               __ptext10 05C5                 __ptext11 059C                 __ptext12 0573  
               __ptext13 0502                 __ptext14 04D1                 __ptext15 054A  
               __ptext16 06BB                 __ptext17 04E6                 __ptext18 0521  
         __pstringtext10 08BD           __pstringtext11 08D2           __pstringtext20 098F  
         __pstringtext12 08E7           __pstringtext21 09A4           __pstringtext13 08FC  
         __pstringtext22 09B9           __pstringtext14 0911           __pstringtext23 09CE  
         __pstringtext15 0926           __pstringtext24 0000           __pstringtext16 093B  
         __pstringtext17 0950           __pstringtext18 0965           __pstringtext19 097A  
     LCD_Set_Cursor@fila 0078            __pstringtext1 0800            __pstringtext2 0815  
          __pstringtext3 082A            __pstringtext4 083F            __pstringtext5 0854  
          __pstringtext6 0869            __pstringtext7 087E            __pstringtext8 0893  
          __pstringtext9 08A8        LCD_Set_Cursor@col 0075        LCD_Set_Cursor@pos 0079  
     LCD_Write_Text@fila 0020       LCD_Write_Text@text 007B  
