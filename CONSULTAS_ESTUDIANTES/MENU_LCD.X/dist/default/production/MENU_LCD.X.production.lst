

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Oct 15 01:16:25 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1939
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext19,global,class=STRCODE,delta=2,noexec
    25                           	psect	stringtext20,global,class=STRCODE,delta=2,noexec
    26                           	psect	stringtext21,global,class=STRCODE,delta=2,noexec
    27                           	psect	stringtext22,global,class=STRCODE,delta=2,noexec
    28                           	psect	stringtext23,global,class=STRCODE,delta=2,noexec
    29                           	psect	stringtext24,global,class=STRCODE,delta=2,noexec
    30                           	psect	stringtext25,global,class=STRCODE,delta=2,noexec
    31                           	psect	stringtext26,global,class=STRCODE,delta=2,noexec
    32                           	psect	cinit,global,class=CODE,merge=1,delta=2
    33                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    34                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    36                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    37                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    38                           	psect	inittext,global,class=CODE,delta=2
    39                           	psect	clrtext,global,class=CODE,delta=2
    40                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    41                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    42                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    43                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    44                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    45                           	psect	text1,local,class=CODE,merge=1,delta=2
    46                           	psect	text2,local,class=CODE,merge=1,delta=2
    47                           	psect	text3,local,class=CODE,merge=1,delta=2
    48                           	psect	text4,local,class=CODE,merge=1,delta=2
    49                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    50                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    56                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    58                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    59                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    60                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    61                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    62                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    63                           	psect	text19,local,class=CODE,merge=1,delta=2,group=3
    64                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    73                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text30,local,class=CODE,merge=1,delta=2
    75                           	psect	text31,local,class=CODE,merge=1,delta=2
    76                           	psect	text32,local,class=CODE,merge=1,delta=2
    77                           	psect	text33,local,class=CODE,merge=1,delta=2
    78                           	psect	text34,local,class=CODE,merge=1,delta=2
    79                           	psect	text35,local,class=CODE,merge=1,delta=2
    80                           	psect	text36,local,class=CODE,merge=1,delta=2
    81                           	psect	text37,local,class=CODE,merge=1,delta=2
    82                           	psect	text38,local,class=CODE,merge=1,delta=2
    83                           	psect	text39,local,class=CODE,merge=1,delta=2
    84                           	psect	text40,local,class=CODE,merge=1,delta=2
    85                           	psect	text41,local,class=CODE,merge=1,delta=2
    86                           	psect	text42,local,class=CODE,merge=1,delta=2
    87                           	psect	text43,local,class=CODE,merge=1,delta=2
    88                           	psect	text44,local,class=CODE,merge=1,delta=2
    89                           	psect	text45,local,class=CODE,merge=1,delta=2
    90                           	psect	text46,local,class=CODE,merge=1,delta=2
    91                           	psect	text47,local,class=CODE,merge=1,delta=2
    92                           	psect	text48,local,class=CODE,merge=1,delta=2
    93                           	psect	text49,local,class=CODE,merge=1,delta=2
    94                           	psect	text50,local,class=CODE,merge=1,delta=2
    95                           	psect	text51,local,class=CODE,merge=1,delta=2
    96                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    97                           	dabs	1,0x7E,2
    98     0000                     
    99                           ; Generated 06/07/2023 GMT
   100                           ; 
   101                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   102                           ; All rights reserved.
   103                           ; 
   104                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   105                           ; 
   106                           ; Redistribution and use in source and binary forms, with or without modification, are
   107                           ; permitted provided that the following conditions are met:
   108                           ; 
   109                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   110                           ;        conditions and the following disclaimer.
   111                           ; 
   112                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   113                           ;        of conditions and the following disclaimer in the documentation and/or other
   114                           ;        materials provided with the distribution. Publication is not required when
   115                           ;        this file is used in an embedded application.
   116                           ; 
   117                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   118                           ;        software without specific prior written permission.
   119                           ; 
   120                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   121                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   122                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   123                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   124                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   125                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   126                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   127                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   128                           ; 
   129                           ; 
   130                           ; Code-generator required, PIC16F1939 Definitions
   131                           ; 
   132                           ; SFR Addresses
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000F                     	;# 
   149     0010                     	;# 
   150     0011                     	;# 
   151     0012                     	;# 
   152     0013                     	;# 
   153     0015                     	;# 
   154     0016                     	;# 
   155     0016                     	;# 
   156     0017                     	;# 
   157     0018                     	;# 
   158     0019                     	;# 
   159     001A                     	;# 
   160     001B                     	;# 
   161     001C                     	;# 
   162     001E                     	;# 
   163     001F                     	;# 
   164     008C                     	;# 
   165     008D                     	;# 
   166     008E                     	;# 
   167     008F                     	;# 
   168     0090                     	;# 
   169     0091                     	;# 
   170     0092                     	;# 
   171     0093                     	;# 
   172     0095                     	;# 
   173     0096                     	;# 
   174     0097                     	;# 
   175     0098                     	;# 
   176     0099                     	;# 
   177     009A                     	;# 
   178     009B                     	;# 
   179     009B                     	;# 
   180     009C                     	;# 
   181     009D                     	;# 
   182     009E                     	;# 
   183     010C                     	;# 
   184     010D                     	;# 
   185     010E                     	;# 
   186     010F                     	;# 
   187     0110                     	;# 
   188     0111                     	;# 
   189     0112                     	;# 
   190     0113                     	;# 
   191     0114                     	;# 
   192     0115                     	;# 
   193     0116                     	;# 
   194     0117                     	;# 
   195     0118                     	;# 
   196     0119                     	;# 
   197     011A                     	;# 
   198     011B                     	;# 
   199     011D                     	;# 
   200     018C                     	;# 
   201     018D                     	;# 
   202     018F                     	;# 
   203     0190                     	;# 
   204     0191                     	;# 
   205     0191                     	;# 
   206     0192                     	;# 
   207     0193                     	;# 
   208     0193                     	;# 
   209     0193                     	;# 
   210     0194                     	;# 
   211     0195                     	;# 
   212     0196                     	;# 
   213     0199                     	;# 
   214     019A                     	;# 
   215     019B                     	;# 
   216     019B                     	;# 
   217     019B                     	;# 
   218     019B                     	;# 
   219     019C                     	;# 
   220     019C                     	;# 
   221     019D                     	;# 
   222     019E                     	;# 
   223     019F                     	;# 
   224     020D                     	;# 
   225     0210                     	;# 
   226     0211                     	;# 
   227     0212                     	;# 
   228     0213                     	;# 
   229     0214                     	;# 
   230     0215                     	;# 
   231     0215                     	;# 
   232     0216                     	;# 
   233     0217                     	;# 
   234     0291                     	;# 
   235     0291                     	;# 
   236     0292                     	;# 
   237     0293                     	;# 
   238     0294                     	;# 
   239     0295                     	;# 
   240     0295                     	;# 
   241     0296                     	;# 
   242     0298                     	;# 
   243     0298                     	;# 
   244     0299                     	;# 
   245     029A                     	;# 
   246     029B                     	;# 
   247     029C                     	;# 
   248     029C                     	;# 
   249     029D                     	;# 
   250     029E                     	;# 
   251     029F                     	;# 
   252     0311                     	;# 
   253     0311                     	;# 
   254     0312                     	;# 
   255     0313                     	;# 
   256     0314                     	;# 
   257     0315                     	;# 
   258     0315                     	;# 
   259     0316                     	;# 
   260     0318                     	;# 
   261     0318                     	;# 
   262     0319                     	;# 
   263     031A                     	;# 
   264     031C                     	;# 
   265     031C                     	;# 
   266     031D                     	;# 
   267     031E                     	;# 
   268     0394                     	;# 
   269     0395                     	;# 
   270     0396                     	;# 
   271     0415                     	;# 
   272     0416                     	;# 
   273     0417                     	;# 
   274     041C                     	;# 
   275     041D                     	;# 
   276     041E                     	;# 
   277     0791                     	;# 
   278     0792                     	;# 
   279     0793                     	;# 
   280     0794                     	;# 
   281     0795                     	;# 
   282     0798                     	;# 
   283     0799                     	;# 
   284     079A                     	;# 
   285     07A0                     	;# 
   286     07A1                     	;# 
   287     07A2                     	;# 
   288     07A3                     	;# 
   289     07A4                     	;# 
   290     07A5                     	;# 
   291     07A6                     	;# 
   292     07A7                     	;# 
   293     07A8                     	;# 
   294     07A9                     	;# 
   295     07AA                     	;# 
   296     07AB                     	;# 
   297     0FE4                     	;# 
   298     0FE5                     	;# 
   299     0FE6                     	;# 
   300     0FE7                     	;# 
   301     0FE8                     	;# 
   302     0FE9                     	;# 
   303     0FEA                     	;# 
   304     0FEB                     	;# 
   305     0FED                     	;# 
   306     0FEE                     	;# 
   307     0FEF                     	;# 
   308     0000                     	;# 
   309     0001                     	;# 
   310     0002                     	;# 
   311     0003                     	;# 
   312     0004                     	;# 
   313     0005                     	;# 
   314     0006                     	;# 
   315     0007                     	;# 
   316     0008                     	;# 
   317     0009                     	;# 
   318     000A                     	;# 
   319     000B                     	;# 
   320     000C                     	;# 
   321     000D                     	;# 
   322     000E                     	;# 
   323     000F                     	;# 
   324     0010                     	;# 
   325     0011                     	;# 
   326     0012                     	;# 
   327     0013                     	;# 
   328     0015                     	;# 
   329     0016                     	;# 
   330     0016                     	;# 
   331     0017                     	;# 
   332     0018                     	;# 
   333     0019                     	;# 
   334     001A                     	;# 
   335     001B                     	;# 
   336     001C                     	;# 
   337     001E                     	;# 
   338     001F                     	;# 
   339     008C                     	;# 
   340     008D                     	;# 
   341     008E                     	;# 
   342     008F                     	;# 
   343     0090                     	;# 
   344     0091                     	;# 
   345     0092                     	;# 
   346     0093                     	;# 
   347     0095                     	;# 
   348     0096                     	;# 
   349     0097                     	;# 
   350     0098                     	;# 
   351     0099                     	;# 
   352     009A                     	;# 
   353     009B                     	;# 
   354     009B                     	;# 
   355     009C                     	;# 
   356     009D                     	;# 
   357     009E                     	;# 
   358     010C                     	;# 
   359     010D                     	;# 
   360     010E                     	;# 
   361     010F                     	;# 
   362     0110                     	;# 
   363     0111                     	;# 
   364     0112                     	;# 
   365     0113                     	;# 
   366     0114                     	;# 
   367     0115                     	;# 
   368     0116                     	;# 
   369     0117                     	;# 
   370     0118                     	;# 
   371     0119                     	;# 
   372     011A                     	;# 
   373     011B                     	;# 
   374     011D                     	;# 
   375     018C                     	;# 
   376     018D                     	;# 
   377     018F                     	;# 
   378     0190                     	;# 
   379     0191                     	;# 
   380     0191                     	;# 
   381     0192                     	;# 
   382     0193                     	;# 
   383     0193                     	;# 
   384     0193                     	;# 
   385     0194                     	;# 
   386     0195                     	;# 
   387     0196                     	;# 
   388     0199                     	;# 
   389     019A                     	;# 
   390     019B                     	;# 
   391     019B                     	;# 
   392     019B                     	;# 
   393     019B                     	;# 
   394     019C                     	;# 
   395     019C                     	;# 
   396     019D                     	;# 
   397     019E                     	;# 
   398     019F                     	;# 
   399     020D                     	;# 
   400     0210                     	;# 
   401     0211                     	;# 
   402     0212                     	;# 
   403     0213                     	;# 
   404     0214                     	;# 
   405     0215                     	;# 
   406     0215                     	;# 
   407     0216                     	;# 
   408     0217                     	;# 
   409     0291                     	;# 
   410     0291                     	;# 
   411     0292                     	;# 
   412     0293                     	;# 
   413     0294                     	;# 
   414     0295                     	;# 
   415     0295                     	;# 
   416     0296                     	;# 
   417     0298                     	;# 
   418     0298                     	;# 
   419     0299                     	;# 
   420     029A                     	;# 
   421     029B                     	;# 
   422     029C                     	;# 
   423     029C                     	;# 
   424     029D                     	;# 
   425     029E                     	;# 
   426     029F                     	;# 
   427     0311                     	;# 
   428     0311                     	;# 
   429     0312                     	;# 
   430     0313                     	;# 
   431     0314                     	;# 
   432     0315                     	;# 
   433     0315                     	;# 
   434     0316                     	;# 
   435     0318                     	;# 
   436     0318                     	;# 
   437     0319                     	;# 
   438     031A                     	;# 
   439     031C                     	;# 
   440     031C                     	;# 
   441     031D                     	;# 
   442     031E                     	;# 
   443     0394                     	;# 
   444     0395                     	;# 
   445     0396                     	;# 
   446     0415                     	;# 
   447     0416                     	;# 
   448     0417                     	;# 
   449     041C                     	;# 
   450     041D                     	;# 
   451     041E                     	;# 
   452     0791                     	;# 
   453     0792                     	;# 
   454     0793                     	;# 
   455     0794                     	;# 
   456     0795                     	;# 
   457     0798                     	;# 
   458     0799                     	;# 
   459     079A                     	;# 
   460     07A0                     	;# 
   461     07A1                     	;# 
   462     07A2                     	;# 
   463     07A3                     	;# 
   464     07A4                     	;# 
   465     07A5                     	;# 
   466     07A6                     	;# 
   467     07A7                     	;# 
   468     07A8                     	;# 
   469     07A9                     	;# 
   470     07AA                     	;# 
   471     07AB                     	;# 
   472     0FE4                     	;# 
   473     0FE5                     	;# 
   474     0FE6                     	;# 
   475     0FE7                     	;# 
   476     0FE8                     	;# 
   477     0FE9                     	;# 
   478     0FEA                     	;# 
   479     0FEB                     	;# 
   480     0FED                     	;# 
   481     0FEE                     	;# 
   482     0FEF                     	;# 
   483     0000                     	;# 
   484     0001                     	;# 
   485     0002                     	;# 
   486     0003                     	;# 
   487     0004                     	;# 
   488     0005                     	;# 
   489     0006                     	;# 
   490     0007                     	;# 
   491     0008                     	;# 
   492     0009                     	;# 
   493     000A                     	;# 
   494     000B                     	;# 
   495     000C                     	;# 
   496     000D                     	;# 
   497     000E                     	;# 
   498     000F                     	;# 
   499     0010                     	;# 
   500     0011                     	;# 
   501     0012                     	;# 
   502     0013                     	;# 
   503     0015                     	;# 
   504     0016                     	;# 
   505     0016                     	;# 
   506     0017                     	;# 
   507     0018                     	;# 
   508     0019                     	;# 
   509     001A                     	;# 
   510     001B                     	;# 
   511     001C                     	;# 
   512     001E                     	;# 
   513     001F                     	;# 
   514     008C                     	;# 
   515     008D                     	;# 
   516     008E                     	;# 
   517     008F                     	;# 
   518     0090                     	;# 
   519     0091                     	;# 
   520     0092                     	;# 
   521     0093                     	;# 
   522     0095                     	;# 
   523     0096                     	;# 
   524     0097                     	;# 
   525     0098                     	;# 
   526     0099                     	;# 
   527     009A                     	;# 
   528     009B                     	;# 
   529     009B                     	;# 
   530     009C                     	;# 
   531     009D                     	;# 
   532     009E                     	;# 
   533     010C                     	;# 
   534     010D                     	;# 
   535     010E                     	;# 
   536     010F                     	;# 
   537     0110                     	;# 
   538     0111                     	;# 
   539     0112                     	;# 
   540     0113                     	;# 
   541     0114                     	;# 
   542     0115                     	;# 
   543     0116                     	;# 
   544     0117                     	;# 
   545     0118                     	;# 
   546     0119                     	;# 
   547     011A                     	;# 
   548     011B                     	;# 
   549     011D                     	;# 
   550     018C                     	;# 
   551     018D                     	;# 
   552     018F                     	;# 
   553     0190                     	;# 
   554     0191                     	;# 
   555     0191                     	;# 
   556     0192                     	;# 
   557     0193                     	;# 
   558     0193                     	;# 
   559     0193                     	;# 
   560     0194                     	;# 
   561     0195                     	;# 
   562     0196                     	;# 
   563     0199                     	;# 
   564     019A                     	;# 
   565     019B                     	;# 
   566     019B                     	;# 
   567     019B                     	;# 
   568     019B                     	;# 
   569     019C                     	;# 
   570     019C                     	;# 
   571     019D                     	;# 
   572     019E                     	;# 
   573     019F                     	;# 
   574     020D                     	;# 
   575     0210                     	;# 
   576     0211                     	;# 
   577     0212                     	;# 
   578     0213                     	;# 
   579     0214                     	;# 
   580     0215                     	;# 
   581     0215                     	;# 
   582     0216                     	;# 
   583     0217                     	;# 
   584     0291                     	;# 
   585     0291                     	;# 
   586     0292                     	;# 
   587     0293                     	;# 
   588     0294                     	;# 
   589     0295                     	;# 
   590     0295                     	;# 
   591     0296                     	;# 
   592     0298                     	;# 
   593     0298                     	;# 
   594     0299                     	;# 
   595     029A                     	;# 
   596     029B                     	;# 
   597     029C                     	;# 
   598     029C                     	;# 
   599     029D                     	;# 
   600     029E                     	;# 
   601     029F                     	;# 
   602     0311                     	;# 
   603     0311                     	;# 
   604     0312                     	;# 
   605     0313                     	;# 
   606     0314                     	;# 
   607     0315                     	;# 
   608     0315                     	;# 
   609     0316                     	;# 
   610     0318                     	;# 
   611     0318                     	;# 
   612     0319                     	;# 
   613     031A                     	;# 
   614     031C                     	;# 
   615     031C                     	;# 
   616     031D                     	;# 
   617     031E                     	;# 
   618     0394                     	;# 
   619     0395                     	;# 
   620     0396                     	;# 
   621     0415                     	;# 
   622     0416                     	;# 
   623     0417                     	;# 
   624     041C                     	;# 
   625     041D                     	;# 
   626     041E                     	;# 
   627     0791                     	;# 
   628     0792                     	;# 
   629     0793                     	;# 
   630     0794                     	;# 
   631     0795                     	;# 
   632     0798                     	;# 
   633     0799                     	;# 
   634     079A                     	;# 
   635     07A0                     	;# 
   636     07A1                     	;# 
   637     07A2                     	;# 
   638     07A3                     	;# 
   639     07A4                     	;# 
   640     07A5                     	;# 
   641     07A6                     	;# 
   642     07A7                     	;# 
   643     07A8                     	;# 
   644     07A9                     	;# 
   645     07AA                     	;# 
   646     07AB                     	;# 
   647     0FE4                     	;# 
   648     0FE5                     	;# 
   649     0FE6                     	;# 
   650     0FE7                     	;# 
   651     0FE8                     	;# 
   652     0FE9                     	;# 
   653     0FEA                     	;# 
   654     0FEB                     	;# 
   655     0FED                     	;# 
   656     0FEE                     	;# 
   657     0FEF                     	;# 
   658     0000                     	;# 
   659     0001                     	;# 
   660     0002                     	;# 
   661     0003                     	;# 
   662     0004                     	;# 
   663     0005                     	;# 
   664     0006                     	;# 
   665     0007                     	;# 
   666     0008                     	;# 
   667     0009                     	;# 
   668     000A                     	;# 
   669     000B                     	;# 
   670     000C                     	;# 
   671     000D                     	;# 
   672     000E                     	;# 
   673     000F                     	;# 
   674     0010                     	;# 
   675     0011                     	;# 
   676     0012                     	;# 
   677     0013                     	;# 
   678     0015                     	;# 
   679     0016                     	;# 
   680     0016                     	;# 
   681     0017                     	;# 
   682     0018                     	;# 
   683     0019                     	;# 
   684     001A                     	;# 
   685     001B                     	;# 
   686     001C                     	;# 
   687     001E                     	;# 
   688     001F                     	;# 
   689     008C                     	;# 
   690     008D                     	;# 
   691     008E                     	;# 
   692     008F                     	;# 
   693     0090                     	;# 
   694     0091                     	;# 
   695     0092                     	;# 
   696     0093                     	;# 
   697     0095                     	;# 
   698     0096                     	;# 
   699     0097                     	;# 
   700     0098                     	;# 
   701     0099                     	;# 
   702     009A                     	;# 
   703     009B                     	;# 
   704     009B                     	;# 
   705     009C                     	;# 
   706     009D                     	;# 
   707     009E                     	;# 
   708     010C                     	;# 
   709     010D                     	;# 
   710     010E                     	;# 
   711     010F                     	;# 
   712     0110                     	;# 
   713     0111                     	;# 
   714     0112                     	;# 
   715     0113                     	;# 
   716     0114                     	;# 
   717     0115                     	;# 
   718     0116                     	;# 
   719     0117                     	;# 
   720     0118                     	;# 
   721     0119                     	;# 
   722     011A                     	;# 
   723     011B                     	;# 
   724     011D                     	;# 
   725     018C                     	;# 
   726     018D                     	;# 
   727     018F                     	;# 
   728     0190                     	;# 
   729     0191                     	;# 
   730     0191                     	;# 
   731     0192                     	;# 
   732     0193                     	;# 
   733     0193                     	;# 
   734     0193                     	;# 
   735     0194                     	;# 
   736     0195                     	;# 
   737     0196                     	;# 
   738     0199                     	;# 
   739     019A                     	;# 
   740     019B                     	;# 
   741     019B                     	;# 
   742     019B                     	;# 
   743     019B                     	;# 
   744     019C                     	;# 
   745     019C                     	;# 
   746     019D                     	;# 
   747     019E                     	;# 
   748     019F                     	;# 
   749     020D                     	;# 
   750     0210                     	;# 
   751     0211                     	;# 
   752     0212                     	;# 
   753     0213                     	;# 
   754     0214                     	;# 
   755     0215                     	;# 
   756     0215                     	;# 
   757     0216                     	;# 
   758     0217                     	;# 
   759     0291                     	;# 
   760     0291                     	;# 
   761     0292                     	;# 
   762     0293                     	;# 
   763     0294                     	;# 
   764     0295                     	;# 
   765     0295                     	;# 
   766     0296                     	;# 
   767     0298                     	;# 
   768     0298                     	;# 
   769     0299                     	;# 
   770     029A                     	;# 
   771     029B                     	;# 
   772     029C                     	;# 
   773     029C                     	;# 
   774     029D                     	;# 
   775     029E                     	;# 
   776     029F                     	;# 
   777     0311                     	;# 
   778     0311                     	;# 
   779     0312                     	;# 
   780     0313                     	;# 
   781     0314                     	;# 
   782     0315                     	;# 
   783     0315                     	;# 
   784     0316                     	;# 
   785     0318                     	;# 
   786     0318                     	;# 
   787     0319                     	;# 
   788     031A                     	;# 
   789     031C                     	;# 
   790     031C                     	;# 
   791     031D                     	;# 
   792     031E                     	;# 
   793     0394                     	;# 
   794     0395                     	;# 
   795     0396                     	;# 
   796     0415                     	;# 
   797     0416                     	;# 
   798     0417                     	;# 
   799     041C                     	;# 
   800     041D                     	;# 
   801     041E                     	;# 
   802     0791                     	;# 
   803     0792                     	;# 
   804     0793                     	;# 
   805     0794                     	;# 
   806     0795                     	;# 
   807     0798                     	;# 
   808     0799                     	;# 
   809     079A                     	;# 
   810     07A0                     	;# 
   811     07A1                     	;# 
   812     07A2                     	;# 
   813     07A3                     	;# 
   814     07A4                     	;# 
   815     07A5                     	;# 
   816     07A6                     	;# 
   817     07A7                     	;# 
   818     07A8                     	;# 
   819     07A9                     	;# 
   820     07AA                     	;# 
   821     07AB                     	;# 
   822     0FE4                     	;# 
   823     0FE5                     	;# 
   824     0FE6                     	;# 
   825     0FE7                     	;# 
   826     0FE8                     	;# 
   827     0FE9                     	;# 
   828     0FEA                     	;# 
   829     0FEB                     	;# 
   830     0FED                     	;# 
   831     0FEE                     	;# 
   832     0FEF                     	;# 
   833     0000                     	;# 
   834     0001                     	;# 
   835     0002                     	;# 
   836     0003                     	;# 
   837     0004                     	;# 
   838     0005                     	;# 
   839     0006                     	;# 
   840     0007                     	;# 
   841     0008                     	;# 
   842     0009                     	;# 
   843     000A                     	;# 
   844     000B                     	;# 
   845     000C                     	;# 
   846     000D                     	;# 
   847     000E                     	;# 
   848     000F                     	;# 
   849     0010                     	;# 
   850     0011                     	;# 
   851     0012                     	;# 
   852     0013                     	;# 
   853     0015                     	;# 
   854     0016                     	;# 
   855     0016                     	;# 
   856     0017                     	;# 
   857     0018                     	;# 
   858     0019                     	;# 
   859     001A                     	;# 
   860     001B                     	;# 
   861     001C                     	;# 
   862     001E                     	;# 
   863     001F                     	;# 
   864     008C                     	;# 
   865     008D                     	;# 
   866     008E                     	;# 
   867     008F                     	;# 
   868     0090                     	;# 
   869     0091                     	;# 
   870     0092                     	;# 
   871     0093                     	;# 
   872     0095                     	;# 
   873     0096                     	;# 
   874     0097                     	;# 
   875     0098                     	;# 
   876     0099                     	;# 
   877     009A                     	;# 
   878     009B                     	;# 
   879     009B                     	;# 
   880     009C                     	;# 
   881     009D                     	;# 
   882     009E                     	;# 
   883     010C                     	;# 
   884     010D                     	;# 
   885     010E                     	;# 
   886     010F                     	;# 
   887     0110                     	;# 
   888     0111                     	;# 
   889     0112                     	;# 
   890     0113                     	;# 
   891     0114                     	;# 
   892     0115                     	;# 
   893     0116                     	;# 
   894     0117                     	;# 
   895     0118                     	;# 
   896     0119                     	;# 
   897     011A                     	;# 
   898     011B                     	;# 
   899     011D                     	;# 
   900     018C                     	;# 
   901     018D                     	;# 
   902     018F                     	;# 
   903     0190                     	;# 
   904     0191                     	;# 
   905     0191                     	;# 
   906     0192                     	;# 
   907     0193                     	;# 
   908     0193                     	;# 
   909     0193                     	;# 
   910     0194                     	;# 
   911     0195                     	;# 
   912     0196                     	;# 
   913     0199                     	;# 
   914     019A                     	;# 
   915     019B                     	;# 
   916     019B                     	;# 
   917     019B                     	;# 
   918     019B                     	;# 
   919     019C                     	;# 
   920     019C                     	;# 
   921     019D                     	;# 
   922     019E                     	;# 
   923     019F                     	;# 
   924     020D                     	;# 
   925     0210                     	;# 
   926     0211                     	;# 
   927     0212                     	;# 
   928     0213                     	;# 
   929     0214                     	;# 
   930     0215                     	;# 
   931     0215                     	;# 
   932     0216                     	;# 
   933     0217                     	;# 
   934     0291                     	;# 
   935     0291                     	;# 
   936     0292                     	;# 
   937     0293                     	;# 
   938     0294                     	;# 
   939     0295                     	;# 
   940     0295                     	;# 
   941     0296                     	;# 
   942     0298                     	;# 
   943     0298                     	;# 
   944     0299                     	;# 
   945     029A                     	;# 
   946     029B                     	;# 
   947     029C                     	;# 
   948     029C                     	;# 
   949     029D                     	;# 
   950     029E                     	;# 
   951     029F                     	;# 
   952     0311                     	;# 
   953     0311                     	;# 
   954     0312                     	;# 
   955     0313                     	;# 
   956     0314                     	;# 
   957     0315                     	;# 
   958     0315                     	;# 
   959     0316                     	;# 
   960     0318                     	;# 
   961     0318                     	;# 
   962     0319                     	;# 
   963     031A                     	;# 
   964     031C                     	;# 
   965     031C                     	;# 
   966     031D                     	;# 
   967     031E                     	;# 
   968     0394                     	;# 
   969     0395                     	;# 
   970     0396                     	;# 
   971     0415                     	;# 
   972     0416                     	;# 
   973     0417                     	;# 
   974     041C                     	;# 
   975     041D                     	;# 
   976     041E                     	;# 
   977     0791                     	;# 
   978     0792                     	;# 
   979     0793                     	;# 
   980     0794                     	;# 
   981     0795                     	;# 
   982     0798                     	;# 
   983     0799                     	;# 
   984     079A                     	;# 
   985     07A0                     	;# 
   986     07A1                     	;# 
   987     07A2                     	;# 
   988     07A3                     	;# 
   989     07A4                     	;# 
   990     07A5                     	;# 
   991     07A6                     	;# 
   992     07A7                     	;# 
   993     07A8                     	;# 
   994     07A9                     	;# 
   995     07AA                     	;# 
   996     07AB                     	;# 
   997     0FE4                     	;# 
   998     0FE5                     	;# 
   999     0FE6                     	;# 
  1000     0FE7                     	;# 
  1001     0FE8                     	;# 
  1002     0FE9                     	;# 
  1003     0FEA                     	;# 
  1004     0FEB                     	;# 
  1005     0FED                     	;# 
  1006     0FEE                     	;# 
  1007     0FEF                     	;# 
  1008     0000                     	;# 
  1009     0001                     	;# 
  1010     0002                     	;# 
  1011     0003                     	;# 
  1012     0004                     	;# 
  1013     0005                     	;# 
  1014     0006                     	;# 
  1015     0007                     	;# 
  1016     0008                     	;# 
  1017     0009                     	;# 
  1018     000A                     	;# 
  1019     000B                     	;# 
  1020     000C                     	;# 
  1021     000D                     	;# 
  1022     000E                     	;# 
  1023     000F                     	;# 
  1024     0010                     	;# 
  1025     0011                     	;# 
  1026     0012                     	;# 
  1027     0013                     	;# 
  1028     0015                     	;# 
  1029     0016                     	;# 
  1030     0016                     	;# 
  1031     0017                     	;# 
  1032     0018                     	;# 
  1033     0019                     	;# 
  1034     001A                     	;# 
  1035     001B                     	;# 
  1036     001C                     	;# 
  1037     001E                     	;# 
  1038     001F                     	;# 
  1039     008C                     	;# 
  1040     008D                     	;# 
  1041     008E                     	;# 
  1042     008F                     	;# 
  1043     0090                     	;# 
  1044     0091                     	;# 
  1045     0092                     	;# 
  1046     0093                     	;# 
  1047     0095                     	;# 
  1048     0096                     	;# 
  1049     0097                     	;# 
  1050     0098                     	;# 
  1051     0099                     	;# 
  1052     009A                     	;# 
  1053     009B                     	;# 
  1054     009B                     	;# 
  1055     009C                     	;# 
  1056     009D                     	;# 
  1057     009E                     	;# 
  1058     010C                     	;# 
  1059     010D                     	;# 
  1060     010E                     	;# 
  1061     010F                     	;# 
  1062     0110                     	;# 
  1063     0111                     	;# 
  1064     0112                     	;# 
  1065     0113                     	;# 
  1066     0114                     	;# 
  1067     0115                     	;# 
  1068     0116                     	;# 
  1069     0117                     	;# 
  1070     0118                     	;# 
  1071     0119                     	;# 
  1072     011A                     	;# 
  1073     011B                     	;# 
  1074     011D                     	;# 
  1075     018C                     	;# 
  1076     018D                     	;# 
  1077     018F                     	;# 
  1078     0190                     	;# 
  1079     0191                     	;# 
  1080     0191                     	;# 
  1081     0192                     	;# 
  1082     0193                     	;# 
  1083     0193                     	;# 
  1084     0193                     	;# 
  1085     0194                     	;# 
  1086     0195                     	;# 
  1087     0196                     	;# 
  1088     0199                     	;# 
  1089     019A                     	;# 
  1090     019B                     	;# 
  1091     019B                     	;# 
  1092     019B                     	;# 
  1093     019B                     	;# 
  1094     019C                     	;# 
  1095     019C                     	;# 
  1096     019D                     	;# 
  1097     019E                     	;# 
  1098     019F                     	;# 
  1099     020D                     	;# 
  1100     0210                     	;# 
  1101     0211                     	;# 
  1102     0212                     	;# 
  1103     0213                     	;# 
  1104     0214                     	;# 
  1105     0215                     	;# 
  1106     0215                     	;# 
  1107     0216                     	;# 
  1108     0217                     	;# 
  1109     0291                     	;# 
  1110     0291                     	;# 
  1111     0292                     	;# 
  1112     0293                     	;# 
  1113     0294                     	;# 
  1114     0295                     	;# 
  1115     0295                     	;# 
  1116     0296                     	;# 
  1117     0298                     	;# 
  1118     0298                     	;# 
  1119     0299                     	;# 
  1120     029A                     	;# 
  1121     029B                     	;# 
  1122     029C                     	;# 
  1123     029C                     	;# 
  1124     029D                     	;# 
  1125     029E                     	;# 
  1126     029F                     	;# 
  1127     0311                     	;# 
  1128     0311                     	;# 
  1129     0312                     	;# 
  1130     0313                     	;# 
  1131     0314                     	;# 
  1132     0315                     	;# 
  1133     0315                     	;# 
  1134     0316                     	;# 
  1135     0318                     	;# 
  1136     0318                     	;# 
  1137     0319                     	;# 
  1138     031A                     	;# 
  1139     031C                     	;# 
  1140     031C                     	;# 
  1141     031D                     	;# 
  1142     031E                     	;# 
  1143     0394                     	;# 
  1144     0395                     	;# 
  1145     0396                     	;# 
  1146     0415                     	;# 
  1147     0416                     	;# 
  1148     0417                     	;# 
  1149     041C                     	;# 
  1150     041D                     	;# 
  1151     041E                     	;# 
  1152     0791                     	;# 
  1153     0792                     	;# 
  1154     0793                     	;# 
  1155     0794                     	;# 
  1156     0795                     	;# 
  1157     0798                     	;# 
  1158     0799                     	;# 
  1159     079A                     	;# 
  1160     07A0                     	;# 
  1161     07A1                     	;# 
  1162     07A2                     	;# 
  1163     07A3                     	;# 
  1164     07A4                     	;# 
  1165     07A5                     	;# 
  1166     07A6                     	;# 
  1167     07A7                     	;# 
  1168     07A8                     	;# 
  1169     07A9                     	;# 
  1170     07AA                     	;# 
  1171     07AB                     	;# 
  1172     0FE4                     	;# 
  1173     0FE5                     	;# 
  1174     0FE6                     	;# 
  1175     0FE7                     	;# 
  1176     0FE8                     	;# 
  1177     0FE9                     	;# 
  1178     0FEA                     	;# 
  1179     0FEB                     	;# 
  1180     0FED                     	;# 
  1181     0FEE                     	;# 
  1182     0FEF                     	;# 
  1183                           
  1184                           	psect	idataBANK1
  1185     0006                     __pidataBANK1:
  1186                           
  1187                           ;initializer for _op
  1188     0006  3401               	retlw	1
  1189                           
  1190                           	psect	idataBANK2
  1191     19A2                     __pidataBANK2:
  1192                           
  1193                           ;initializer for _strLCD
  1194     19A2  3420               	retlw	32
  1195     19A3  3400               	retlw	0
  1196     19A4  3400               	retlw	0
  1197     19A5  3400               	retlw	0
  1198     19A6  3400               	retlw	0
  1199     19A7  3400               	retlw	0
  1200     19A8  3400               	retlw	0
  1201     19A9  3400               	retlw	0
  1202     19AA  3400               	retlw	0
  1203     19AB  3400               	retlw	0
  1204     19AC  3400               	retlw	0
  1205     19AD  3400               	retlw	0
  1206     19AE  3400               	retlw	0
  1207     19AF  3400               	retlw	0
  1208     19B0  3400               	retlw	0
  1209     19B1  3400               	retlw	0
  1210     19B2  3400               	retlw	0
  1211     19B3  3400               	retlw	0
  1212     19B4  3400               	retlw	0
  1213     19B5  3400               	retlw	0
  1214     000D                     _PORTBbits	set	13
  1215     008D                     _TRISBbits	set	141
  1216     008C                     _TRISAbits	set	140
  1217     0098                     _OSCTUNE	set	152
  1218     0099                     _OSCCON	set	153
  1219     008F                     _TRISDbits	set	143
  1220     009B                     _ADRESL	set	155
  1221     009C                     _ADRESH	set	156
  1222     009D                     _ADCON0bits	set	157
  1223     009E                     _ADCON1bits	set	158
  1224     010D                     _LATBbits	set	269
  1225     010C                     _LATAbits	set	268
  1226     0116                     _BORCON	set	278
  1227     010F                     _LATDbits	set	271
  1228     018D                     _ANSELBbits	set	397
  1229     018C                     _ANSELAbits	set	396
  1230                           
  1231                           	psect	stringtext1
  1232     2000                     __pstringtext1:
  1233     2000                     STR_4:
  1234     2000  344F               	retlw	79	;'O'
  1235     2001  3450               	retlw	80	;'P'
  1236     2002  343A               	retlw	58	;':'
  1237     2003  3420               	retlw	32	;' '
  1238     2004  3420               	retlw	32	;' '
  1239     2005  3420               	retlw	32	;' '
  1240     2006  3420               	retlw	32	;' '
  1241     2007  3420               	retlw	32	;' '
  1242     2008  3420               	retlw	32	;' '
  1243     2009  3420               	retlw	32	;' '
  1244     200A  3420               	retlw	32	;' '
  1245     200B  3420               	retlw	32	;' '
  1246     200C  3420               	retlw	32	;' '
  1247     200D  3420               	retlw	32	;' '
  1248     200E  3420               	retlw	32	;' '
  1249     200F  3420               	retlw	32	;' '
  1250     2010  3420               	retlw	32	;' '
  1251     2011  3420               	retlw	32	;' '
  1252     2012  3420               	retlw	32	;' '
  1253     2013  3420               	retlw	32	;' '
  1254     2014  3400               	retlw	0
  1255                           
  1256                           	psect	stringtext2
  1257     2015                     __pstringtext2:
  1258     2015                     STR_19:
  1259     2015  3432               	retlw	50	;'2'
  1260     2016  342E               	retlw	46	;'.'
  1261     2017  344F               	retlw	79	;'O'
  1262     2018  3446               	retlw	70	;'F'
  1263     2019  3446               	retlw	70	;'F'
  1264     201A  3420               	retlw	32	;' '
  1265     201B  3420               	retlw	32	;' '
  1266     201C  3420               	retlw	32	;' '
  1267     201D  3420               	retlw	32	;' '
  1268     201E  3420               	retlw	32	;' '
  1269     201F  3420               	retlw	32	;' '
  1270     2020  3420               	retlw	32	;' '
  1271     2021  3420               	retlw	32	;' '
  1272     2022  3420               	retlw	32	;' '
  1273     2023  3420               	retlw	32	;' '
  1274     2024  3420               	retlw	32	;' '
  1275     2025  3420               	retlw	32	;' '
  1276     2026  3420               	retlw	32	;' '
  1277     2027  3420               	retlw	32	;' '
  1278     2028  3420               	retlw	32	;' '
  1279     2029  3400               	retlw	0
  1280                           
  1281                           	psect	stringtext3
  1282     202A                     __pstringtext3:
  1283     202A                     STR_11:
  1284     202A  3432               	retlw	50	;'2'
  1285     202B  342E               	retlw	46	;'.'
  1286     202C  344D               	retlw	77	;'M'
  1287     202D  344F               	retlw	79	;'O'
  1288     202E  3454               	retlw	84	;'T'
  1289     202F  344F               	retlw	79	;'O'
  1290     2030  3452               	retlw	82	;'R'
  1291     2031  3442               	retlw	66	;'B'
  1292     2032  3420               	retlw	32	;' '
  1293     2033  3420               	retlw	32	;' '
  1294     2034  3420               	retlw	32	;' '
  1295     2035  3420               	retlw	32	;' '
  1296     2036  3420               	retlw	32	;' '
  1297     2037  3420               	retlw	32	;' '
  1298     2038  3420               	retlw	32	;' '
  1299     2039  3420               	retlw	32	;' '
  1300     203A  3420               	retlw	32	;' '
  1301     203B  3420               	retlw	32	;' '
  1302     203C  3420               	retlw	32	;' '
  1303     203D  3420               	retlw	32	;' '
  1304     203E  3400               	retlw	0
  1305                           
  1306                           	psect	stringtext4
  1307     203F                     __pstringtext4:
  1308     203F                     STR_3:
  1309     203F  3432               	retlw	50	;'2'
  1310     2040  342E               	retlw	46	;'.'
  1311     2041  3453               	retlw	83	;'S'
  1312     2042  3445               	retlw	69	;'E'
  1313     2043  344E               	retlw	78	;'N'
  1314     2044  3453               	retlw	83	;'S'
  1315     2045  344F               	retlw	79	;'O'
  1316     2046  3452               	retlw	82	;'R'
  1317     2047  3445               	retlw	69	;'E'
  1318     2048  3453               	retlw	83	;'S'
  1319     2049  3420               	retlw	32	;' '
  1320     204A  3420               	retlw	32	;' '
  1321     204B  3420               	retlw	32	;' '
  1322     204C  3420               	retlw	32	;' '
  1323     204D  3420               	retlw	32	;' '
  1324     204E  3420               	retlw	32	;' '
  1325     204F  3420               	retlw	32	;' '
  1326     2050  3420               	retlw	32	;' '
  1327     2051  3420               	retlw	32	;' '
  1328     2052  3420               	retlw	32	;' '
  1329     2053  3400               	retlw	0
  1330                           
  1331                           	psect	stringtext5
  1332     2054                     __pstringtext5:
  1333     2054                     STR_6:
  1334     2054  3453               	retlw	83	;'S'
  1335     2055  3445               	retlw	69	;'E'
  1336     2056  344C               	retlw	76	;'L'
  1337     2057  3420               	retlw	32	;' '
  1338     2058  3454               	retlw	84	;'T'
  1339     2059  344F               	retlw	79	;'O'
  1340     205A  3420               	retlw	32	;' '
  1341     205B  3442               	retlw	66	;'B'
  1342     205C  3441               	retlw	65	;'A'
  1343     205D  3443               	retlw	67	;'C'
  1344     205E  344B               	retlw	75	;'K'
  1345     205F  3420               	retlw	32	;' '
  1346     2060  3420               	retlw	32	;' '
  1347     2061  3420               	retlw	32	;' '
  1348     2062  3420               	retlw	32	;' '
  1349     2063  3420               	retlw	32	;' '
  1350     2064  3420               	retlw	32	;' '
  1351     2065  3420               	retlw	32	;' '
  1352     2066  3420               	retlw	32	;' '
  1353     2067  3420               	retlw	32	;' '
  1354     2068  3400               	retlw	0
  1355                           
  1356                           	psect	stringtext6
  1357     2069                     __pstringtext6:
  1358     2069                     STR_14:
  1359     2069  3431               	retlw	49	;'1'
  1360     206A  342E               	retlw	46	;'.'
  1361     206B  344C               	retlw	76	;'L'
  1362     206C  3431               	retlw	49	;'1'
  1363     206D  3420               	retlw	32	;' '
  1364     206E  3420               	retlw	32	;' '
  1365     206F  3420               	retlw	32	;' '
  1366     2070  3420               	retlw	32	;' '
  1367     2071  3433               	retlw	51	;'3'
  1368     2072  342E               	retlw	46	;'.'
  1369     2073  344C               	retlw	76	;'L'
  1370     2074  3433               	retlw	51	;'3'
  1371     2075  3420               	retlw	32	;' '
  1372     2076  3420               	retlw	32	;' '
  1373     2077  3420               	retlw	32	;' '
  1374     2078  3420               	retlw	32	;' '
  1375     2079  3420               	retlw	32	;' '
  1376     207A  3420               	retlw	32	;' '
  1377     207B  3420               	retlw	32	;' '
  1378     207C  3420               	retlw	32	;' '
  1379     207D  3400               	retlw	0
  1380                           
  1381                           	psect	stringtext7
  1382     207E                     __pstringtext7:
  1383     207E                     STR_18:
  1384     207E  3431               	retlw	49	;'1'
  1385     207F  342E               	retlw	46	;'.'
  1386     2080  344F               	retlw	79	;'O'
  1387     2081  344E               	retlw	78	;'N'
  1388     2082  3420               	retlw	32	;' '
  1389     2083  3420               	retlw	32	;' '
  1390     2084  3420               	retlw	32	;' '
  1391     2085  3420               	retlw	32	;' '
  1392     2086  3433               	retlw	51	;'3'
  1393     2087  342E               	retlw	46	;'.'
  1394     2088  3442               	retlw	66	;'B'
  1395     2089  3441               	retlw	65	;'A'
  1396     208A  3443               	retlw	67	;'C'
  1397     208B  344B               	retlw	75	;'K'
  1398     208C  3420               	retlw	32	;' '
  1399     208D  3420               	retlw	32	;' '
  1400     208E  3420               	retlw	32	;' '
  1401     208F  3420               	retlw	32	;' '
  1402     2090  3420               	retlw	32	;' '
  1403     2091  3420               	retlw	32	;' '
  1404     2092  3400               	retlw	0
  1405                           
  1406                           	psect	stringtext8
  1407     2093                     __pstringtext8:
  1408     2093                     STR_15:
  1409     2093  3432               	retlw	50	;'2'
  1410     2094  342E               	retlw	46	;'.'
  1411     2095  344C               	retlw	76	;'L'
  1412     2096  3432               	retlw	50	;'2'
  1413     2097  3420               	retlw	32	;' '
  1414     2098  3420               	retlw	32	;' '
  1415     2099  3420               	retlw	32	;' '
  1416     209A  3420               	retlw	32	;' '
  1417     209B  3434               	retlw	52	;'4'
  1418     209C  342E               	retlw	46	;'.'
  1419     209D  3442               	retlw	66	;'B'
  1420     209E  3441               	retlw	65	;'A'
  1421     209F  3443               	retlw	67	;'C'
  1422     20A0  344B               	retlw	75	;'K'
  1423     20A1  3420               	retlw	32	;' '
  1424     20A2  3420               	retlw	32	;' '
  1425     20A3  3420               	retlw	32	;' '
  1426     20A4  3420               	retlw	32	;' '
  1427     20A5  3420               	retlw	32	;' '
  1428     20A6  3420               	retlw	32	;' '
  1429     20A7  3400               	retlw	0
  1430                           
  1431                           	psect	stringtext9
  1432     20A8                     __pstringtext9:
  1433     20A8                     STR_9:
  1434     20A8  3420               	retlw	32	;' '
  1435     20A9  3420               	retlw	32	;' '
  1436     20AA  3420               	retlw	32	;' '
  1437     20AB  344D               	retlw	77	;'M'
  1438     20AC  3445               	retlw	69	;'E'
  1439     20AD  344E               	retlw	78	;'N'
  1440     20AE  3455               	retlw	85	;'U'
  1441     20AF  3420               	retlw	32	;' '
  1442     20B0  344D               	retlw	77	;'M'
  1443     20B1  344F               	retlw	79	;'O'
  1444     20B2  3454               	retlw	84	;'T'
  1445     20B3  344F               	retlw	79	;'O'
  1446     20B4  3452               	retlw	82	;'R'
  1447     20B5  3445               	retlw	69	;'E'
  1448     20B6  3453               	retlw	83	;'S'
  1449     20B7  3420               	retlw	32	;' '
  1450     20B8  3420               	retlw	32	;' '
  1451     20B9  3420               	retlw	32	;' '
  1452     20BA  3420               	retlw	32	;' '
  1453     20BB  3420               	retlw	32	;' '
  1454     20BC  3400               	retlw	0
  1455                           
  1456                           	psect	stringtext10
  1457     20BD                     __pstringtext10:
  1458     20BD                     STR_17:
  1459     20BD  3420               	retlw	32	;' '
  1460     20BE  3420               	retlw	32	;' '
  1461     20BF  3420               	retlw	32	;' '
  1462     20C0  3420               	retlw	32	;' '
  1463     20C1  3420               	retlw	32	;' '
  1464     20C2  3420               	retlw	32	;' '
  1465     20C3  3420               	retlw	32	;' '
  1466     20C4  344D               	retlw	77	;'M'
  1467     20C5  3445               	retlw	69	;'E'
  1468     20C6  344E               	retlw	78	;'N'
  1469     20C7  3455               	retlw	85	;'U'
  1470     20C8  3420               	retlw	32	;' '
  1471     20C9  344C               	retlw	76	;'L'
  1472     20CA  3445               	retlw	69	;'E'
  1473     20CB  3444               	retlw	68	;'D'
  1474     20CC  3431               	retlw	49	;'1'
  1475     20CD  3420               	retlw	32	;' '
  1476     20CE  3420               	retlw	32	;' '
  1477     20CF  3420               	retlw	32	;' '
  1478     20D0  3420               	retlw	32	;' '
  1479     20D1  3400               	retlw	0
  1480                           
  1481                           	psect	stringtext11
  1482     20D2                     __pstringtext11:
  1483     20D2                     STR_21:
  1484     20D2  3420               	retlw	32	;' '
  1485     20D3  3420               	retlw	32	;' '
  1486     20D4  3420               	retlw	32	;' '
  1487     20D5  3420               	retlw	32	;' '
  1488     20D6  3420               	retlw	32	;' '
  1489     20D7  3420               	retlw	32	;' '
  1490     20D8  3420               	retlw	32	;' '
  1491     20D9  344D               	retlw	77	;'M'
  1492     20DA  3445               	retlw	69	;'E'
  1493     20DB  344E               	retlw	78	;'N'
  1494     20DC  3455               	retlw	85	;'U'
  1495     20DD  3420               	retlw	32	;' '
  1496     20DE  344C               	retlw	76	;'L'
  1497     20DF  3445               	retlw	69	;'E'
  1498     20E0  3444               	retlw	68	;'D'
  1499     20E1  3432               	retlw	50	;'2'
  1500     20E2  3420               	retlw	32	;' '
  1501     20E3  3420               	retlw	32	;' '
  1502     20E4  3420               	retlw	32	;' '
  1503     20E5  3420               	retlw	32	;' '
  1504     20E6  3400               	retlw	0
  1505                           
  1506                           	psect	stringtext12
  1507     20E7                     __pstringtext12:
  1508     20E7                     STR_25:
  1509     20E7  3420               	retlw	32	;' '
  1510     20E8  3420               	retlw	32	;' '
  1511     20E9  3420               	retlw	32	;' '
  1512     20EA  3420               	retlw	32	;' '
  1513     20EB  3420               	retlw	32	;' '
  1514     20EC  3420               	retlw	32	;' '
  1515     20ED  3420               	retlw	32	;' '
  1516     20EE  344D               	retlw	77	;'M'
  1517     20EF  3445               	retlw	69	;'E'
  1518     20F0  344E               	retlw	78	;'N'
  1519     20F1  3455               	retlw	85	;'U'
  1520     20F2  3420               	retlw	32	;' '
  1521     20F3  344C               	retlw	76	;'L'
  1522     20F4  3445               	retlw	69	;'E'
  1523     20F5  3444               	retlw	68	;'D'
  1524     20F6  3433               	retlw	51	;'3'
  1525     20F7  3420               	retlw	32	;' '
  1526     20F8  3420               	retlw	32	;' '
  1527     20F9  3420               	retlw	32	;' '
  1528     20FA  3420               	retlw	32	;' '
  1529     20FB  3400               	retlw	0
  1530                           
  1531                           	psect	stringtext13
  1532     20FC                     __pstringtext13:
  1533     20FC                     STR_29:
  1534     20FC  3420               	retlw	32	;' '
  1535     20FD  3420               	retlw	32	;' '
  1536     20FE  3420               	retlw	32	;' '
  1537     20FF  3420               	retlw	32	;' '
  1538     2100  3420               	retlw	32	;' '
  1539     2101  344D               	retlw	77	;'M'
  1540     2102  3445               	retlw	69	;'E'
  1541     2103  344E               	retlw	78	;'N'
  1542     2104  3455               	retlw	85	;'U'
  1543     2105  3420               	retlw	32	;' '
  1544     2106  344D               	retlw	77	;'M'
  1545     2107  344F               	retlw	79	;'O'
  1546     2108  3454               	retlw	84	;'T'
  1547     2109  344F               	retlw	79	;'O'
  1548     210A  3452               	retlw	82	;'R'
  1549     210B  3441               	retlw	65	;'A'
  1550     210C  3420               	retlw	32	;' '
  1551     210D  3420               	retlw	32	;' '
  1552     210E  3420               	retlw	32	;' '
  1553     210F  3420               	retlw	32	;' '
  1554     2110  3400               	retlw	0
  1555                           
  1556                           	psect	stringtext14
  1557     2111                     __pstringtext14:
  1558     2111                     STR_33:
  1559     2111  3420               	retlw	32	;' '
  1560     2112  3420               	retlw	32	;' '
  1561     2113  3420               	retlw	32	;' '
  1562     2114  3420               	retlw	32	;' '
  1563     2115  3420               	retlw	32	;' '
  1564     2116  344D               	retlw	77	;'M'
  1565     2117  3445               	retlw	69	;'E'
  1566     2118  344E               	retlw	78	;'N'
  1567     2119  3455               	retlw	85	;'U'
  1568     211A  3420               	retlw	32	;' '
  1569     211B  344D               	retlw	77	;'M'
  1570     211C  344F               	retlw	79	;'O'
  1571     211D  3454               	retlw	84	;'T'
  1572     211E  344F               	retlw	79	;'O'
  1573     211F  3452               	retlw	82	;'R'
  1574     2120  3442               	retlw	66	;'B'
  1575     2121  3420               	retlw	32	;' '
  1576     2122  3420               	retlw	32	;' '
  1577     2123  3420               	retlw	32	;' '
  1578     2124  3420               	retlw	32	;' '
  1579     2125  3400               	retlw	0
  1580                           
  1581                           	psect	stringtext15
  1582     2126                     __pstringtext15:
  1583     2126                     STR_30:
  1584     2126  3431               	retlw	49	;'1'
  1585     2127  342E               	retlw	46	;'.'
  1586     2128  3454               	retlw	84	;'T'
  1587     2129  3455               	retlw	85	;'U'
  1588     212A  3452               	retlw	82	;'R'
  1589     212B  344E               	retlw	78	;'N'
  1590     212C  3452               	retlw	82	;'R'
  1591     212D  3420               	retlw	32	;' '
  1592     212E  3420               	retlw	32	;' '
  1593     212F  3420               	retlw	32	;' '
  1594     2130  3420               	retlw	32	;' '
  1595     2131  3433               	retlw	51	;'3'
  1596     2132  342E               	retlw	46	;'.'
  1597     2133  344F               	retlw	79	;'O'
  1598     2134  3446               	retlw	70	;'F'
  1599     2135  3446               	retlw	70	;'F'
  1600     2136  3420               	retlw	32	;' '
  1601     2137  3420               	retlw	32	;' '
  1602     2138  3420               	retlw	32	;' '
  1603     2139  3420               	retlw	32	;' '
  1604     213A  3400               	retlw	0
  1605                           
  1606                           	psect	stringtext16
  1607     213B                     __pstringtext16:
  1608     213B                     STR_1:
  1609     213B  3420               	retlw	32	;' '
  1610     213C  3420               	retlw	32	;' '
  1611     213D  3420               	retlw	32	;' '
  1612     213E  3420               	retlw	32	;' '
  1613     213F  3420               	retlw	32	;' '
  1614     2140  3420               	retlw	32	;' '
  1615     2141  3420               	retlw	32	;' '
  1616     2142  344D               	retlw	77	;'M'
  1617     2143  3445               	retlw	69	;'E'
  1618     2144  344E               	retlw	78	;'N'
  1619     2145  3455               	retlw	85	;'U'
  1620     2146  3420               	retlw	32	;' '
  1621     2147  3450               	retlw	80	;'P'
  1622     2148  3450               	retlw	80	;'P'
  1623     2149  3441               	retlw	65	;'A'
  1624     214A  344C               	retlw	76	;'L'
  1625     214B  3420               	retlw	32	;' '
  1626     214C  3420               	retlw	32	;' '
  1627     214D  3420               	retlw	32	;' '
  1628     214E  3420               	retlw	32	;' '
  1629     214F  3400               	retlw	0
  1630                           
  1631                           	psect	stringtext17
  1632     2150                     __pstringtext17:
  1633     2150                     STR_13:
  1634     2150  3420               	retlw	32	;' '
  1635     2151  3420               	retlw	32	;' '
  1636     2152  3420               	retlw	32	;' '
  1637     2153  3420               	retlw	32	;' '
  1638     2154  3420               	retlw	32	;' '
  1639     2155  3420               	retlw	32	;' '
  1640     2156  3420               	retlw	32	;' '
  1641     2157  344D               	retlw	77	;'M'
  1642     2158  3445               	retlw	69	;'E'
  1643     2159  344E               	retlw	78	;'N'
  1644     215A  3455               	retlw	85	;'U'
  1645     215B  3420               	retlw	32	;' '
  1646     215C  344C               	retlw	76	;'L'
  1647     215D  3445               	retlw	69	;'E'
  1648     215E  3444               	retlw	68	;'D'
  1649     215F  3453               	retlw	83	;'S'
  1650     2160  3420               	retlw	32	;' '
  1651     2161  3420               	retlw	32	;' '
  1652     2162  3420               	retlw	32	;' '
  1653     2163  3420               	retlw	32	;' '
  1654     2164  3400               	retlw	0
  1655                           
  1656                           	psect	stringtext18
  1657     2165                     __pstringtext18:
  1658     2165                     STR_5:
  1659     2165  3420               	retlw	32	;' '
  1660     2166  3420               	retlw	32	;' '
  1661     2167  3420               	retlw	32	;' '
  1662     2168  344D               	retlw	77	;'M'
  1663     2169  3445               	retlw	69	;'E'
  1664     216A  344E               	retlw	78	;'N'
  1665     216B  3455               	retlw	85	;'U'
  1666     216C  3420               	retlw	32	;' '
  1667     216D  3453               	retlw	83	;'S'
  1668     216E  3445               	retlw	69	;'E'
  1669     216F  344E               	retlw	78	;'N'
  1670     2170  3453               	retlw	83	;'S'
  1671     2171  344F               	retlw	79	;'O'
  1672     2172  3452               	retlw	82	;'R'
  1673     2173  3445               	retlw	69	;'E'
  1674     2174  3453               	retlw	83	;'S'
  1675     2175  3420               	retlw	32	;' '
  1676     2176  3420               	retlw	32	;' '
  1677     2177  3420               	retlw	32	;' '
  1678     2178  3420               	retlw	32	;' '
  1679     2179  3400               	retlw	0
  1680                           
  1681                           	psect	stringtext19
  1682     217A                     __pstringtext19:
  1683     217A                     STR_31:
  1684     217A  3432               	retlw	50	;'2'
  1685     217B  342E               	retlw	46	;'.'
  1686     217C  3454               	retlw	84	;'T'
  1687     217D  3455               	retlw	85	;'U'
  1688     217E  3452               	retlw	82	;'R'
  1689     217F  344E               	retlw	78	;'N'
  1690     2180  344C               	retlw	76	;'L'
  1691     2181  3420               	retlw	32	;' '
  1692     2182  3420               	retlw	32	;' '
  1693     2183  3420               	retlw	32	;' '
  1694     2184  3420               	retlw	32	;' '
  1695     2185  3434               	retlw	52	;'4'
  1696     2186  342E               	retlw	46	;'.'
  1697     2187  3442               	retlw	66	;'B'
  1698     2188  3441               	retlw	65	;'A'
  1699     2189  3443               	retlw	67	;'C'
  1700     218A  344B               	retlw	75	;'K'
  1701     218B  3420               	retlw	32	;' '
  1702     218C  3420               	retlw	32	;' '
  1703     218D  3420               	retlw	32	;' '
  1704     218E  3400               	retlw	0
  1705                           
  1706                           	psect	stringtext20
  1707     218F                     __pstringtext20:
  1708     218F                     STR_10:
  1709     218F  3431               	retlw	49	;'1'
  1710     2190  342E               	retlw	46	;'.'
  1711     2191  344D               	retlw	77	;'M'
  1712     2192  344F               	retlw	79	;'O'
  1713     2193  3454               	retlw	84	;'T'
  1714     2194  344F               	retlw	79	;'O'
  1715     2195  3452               	retlw	82	;'R'
  1716     2196  3441               	retlw	65	;'A'
  1717     2197  3420               	retlw	32	;' '
  1718     2198  3420               	retlw	32	;' '
  1719     2199  3420               	retlw	32	;' '
  1720     219A  3420               	retlw	32	;' '
  1721     219B  3433               	retlw	51	;'3'
  1722     219C  342E               	retlw	46	;'.'
  1723     219D  3442               	retlw	66	;'B'
  1724     219E  3441               	retlw	65	;'A'
  1725     219F  3443               	retlw	67	;'C'
  1726     21A0  344B               	retlw	75	;'K'
  1727     21A1  3420               	retlw	32	;' '
  1728     21A2  3420               	retlw	32	;' '
  1729     21A3  3400               	retlw	0
  1730                           
  1731                           	psect	stringtext21
  1732     21A4                     __pstringtext21:
  1733     21A4                     STR_2:
  1734     21A4  3431               	retlw	49	;'1'
  1735     21A5  342E               	retlw	46	;'.'
  1736     21A6  344D               	retlw	77	;'M'
  1737     21A7  344F               	retlw	79	;'O'
  1738     21A8  3454               	retlw	84	;'T'
  1739     21A9  344F               	retlw	79	;'O'
  1740     21AA  3452               	retlw	82	;'R'
  1741     21AB  3445               	retlw	69	;'E'
  1742     21AC  3453               	retlw	83	;'S'
  1743     21AD  3420               	retlw	32	;' '
  1744     21AE  3420               	retlw	32	;' '
  1745     21AF  3420               	retlw	32	;' '
  1746     21B0  3433               	retlw	51	;'3'
  1747     21B1  342E               	retlw	46	;'.'
  1748     21B2  344C               	retlw	76	;'L'
  1749     21B3  3445               	retlw	69	;'E'
  1750     21B4  3444               	retlw	68	;'D'
  1751     21B5  3453               	retlw	83	;'S'
  1752     21B6  3420               	retlw	32	;' '
  1753     21B7  3420               	retlw	32	;' '
  1754     21B8  3400               	retlw	0
  1755                           
  1756                           	psect	stringtext22
  1757     21B9                     __pstringtext22:
  1758     21B9                     STR_7:
  1759     21B9  344C               	retlw	76	;'L'
  1760     21BA  344D               	retlw	77	;'M'
  1761     21BB  3433               	retlw	51	;'3'
  1762     21BC  3435               	retlw	53	;'5'
  1763     21BD  343A               	retlw	58	;':'
  1764     21BE  3420               	retlw	32	;' '
  1765     21BF  3425               	retlw	37	;'%'
  1766     21C0  3436               	retlw	54	;'6'
  1767     21C1  342E               	retlw	46	;'.'
  1768     21C2  3431               	retlw	49	;'1'
  1769     21C3  3466               	retlw	102	;'f'
  1770     21C4  3400               	retlw	0
  1771                           
  1772                           	psect	stringtext23
  1773     21C5                     __pstringtext23:
  1774     21C5                     STR_8:
  1775     21C5  344C               	retlw	76	;'L'
  1776     21C6  3444               	retlw	68	;'D'
  1777     21C7  3452               	retlw	82	;'R'
  1778     21C8  343A               	retlw	58	;':'
  1779     21C9  3420               	retlw	32	;' '
  1780     21CA  3425               	retlw	37	;'%'
  1781     21CB  3436               	retlw	54	;'6'
  1782     21CC  342E               	retlw	46	;'.'
  1783     21CD  3431               	retlw	49	;'1'
  1784     21CE  3466               	retlw	102	;'f'
  1785     21CF  3400               	retlw	0
  1786                           
  1787                           	psect	stringtext24
  1788     21D0                     __pstringtext24:
  1789     21D0                     STR_37:
  1790     21D0  3469               	retlw	105	;'i'
  1791     21D1  346E               	retlw	110	;'n'
  1792     21D2  3466               	retlw	102	;'f'
  1793     21D3  3400               	retlw	0
  1794                           
  1795                           	psect	stringtext25
  1796     21D4                     __pstringtext25:
  1797     21D4                     STR_40:
  1798     21D4  346E               	retlw	110	;'n'
  1799     21D5  3461               	retlw	97	;'a'
  1800     21D6  346E               	retlw	110	;'n'
  1801     21D7  3400               	retlw	0
  1802                           
  1803                           	psect	stringtext26
  1804     0000                     __pstringtext26:
  1805     2000                     
  1806                           	psect	cinit
  1807     07DB                     start_initialization:	
  1808                           ; #config settings
  1809                           
  1810     07DB                     __initialization:
  1811                           
  1812                           ; Initialize objects allocated to BANK1
  1813     07DB  0021               	movlb	1	; select bank1
  1814     07DC  3180  2006  3187   	fcall	__pidataBANK1	;fetch initializer
  1815     07DF  00EF               	movwf	__pdataBANK1& (0+127)
  1816                           
  1817                           ; Initialize objects allocated to BANK2
  1818     07E0  30A2               	movlw	low __pidataBANK2
  1819     07E1  0084               	movwf	4
  1820     07E2  3099               	movlw	(high __pidataBANK2)| (0+128)
  1821     07E3  0085               	movwf	5
  1822     07E4  3037               	movlw	low __pdataBANK2
  1823     07E5  0086               	movwf	6
  1824     07E6  3001               	movlw	high __pdataBANK2
  1825     07E7  0087               	movwf	7
  1826     07E8  3014               	movlw	20
  1827     07E9  3180  2007  3187   	fcall	init_ram
  1828                           
  1829                           ; Clear objects allocated to BANK1
  1830     07EC  01EE               	clrf	__pbssBANK1& (0+127)
  1831                           
  1832                           ; Clear objects allocated to BANK2
  1833     07ED  3020               	movlw	low __pbssBANK2
  1834     07EE  0084               	movwf	4
  1835     07EF  3001               	movlw	high __pbssBANK2
  1836     07F0  0085               	movwf	5
  1837     07F1  3017               	movlw	23
  1838     07F2  3188  2000  3187   	fcall	clear_ram0
  1839                           
  1840                           ; Clear objects allocated to BANK3
  1841     07F5  30A0               	movlw	low __pbssBANK3
  1842     07F6  0084               	movwf	4
  1843     07F7  3001               	movlw	high __pbssBANK3
  1844     07F8  0085               	movwf	5
  1845     07F9  3050               	movlw	80
  1846     07FA  3188  2000  3187   	fcall	clear_ram0
  1847     07FD                     end_of_initialization:	
  1848                           ;End of C runtime variable initialization code
  1849                           
  1850     07FD                     __end_of__initialization:
  1851     07FD  0020               	movlb	0
  1852     07FE  319C  2CDA         	ljmp	_main	;jump to C main() function
  1853                           
  1854                           	psect	bssBANK1
  1855     00EE                     __pbssBANK1:
  1856     00EE                     _flags:
  1857     00EE                     	ds	1
  1858                           
  1859                           	psect	dataBANK1
  1860     00EF                     __pdataBANK1:
  1861     00EF                     _op:
  1862     00EF                     	ds	1
  1863                           
  1864                           	psect	bssBANK2
  1865     0120                     __pbssBANK2:
  1866     0120                     floorf@F526:
  1867     0120                     	ds	4
  1868     0124                     ___fpclassifyf@F465:
  1869     0124                     	ds	4
  1870     0128                     _ldr:
  1871     0128                     	ds	4
  1872     012C                     _lm35:
  1873     012C                     	ds	4
  1874     0130                     _width:
  1875     0130                     	ds	2
  1876     0132                     _prec:
  1877     0132                     	ds	2
  1878     0134                     _conver:
  1879     0134                     	ds	2
  1880     0136                     _cMenu:
  1881     0136                     	ds	1
  1882                           
  1883                           	psect	dataBANK2
  1884     0137                     __pdataBANK2:
  1885     0137                     _strLCD:
  1886     0137                     	ds	20
  1887                           
  1888                           	psect	bssBANK3
  1889     01A0                     __pbssBANK3:
  1890     01A0                     _dbuf:
  1891     01A0                     	ds	80
  1892                           
  1893                           	psect	inittext
  1894     0007                     init_ram:
  1895     0007  00FE               	movwf	btemp
  1896     0008                     initloop:
  1897     0008  0012               	moviw fsr0++
  1898     0009  001E               	movwi fsr1++
  1899     000A  0BFE               	decfsz	btemp,f
  1900     000B  2808               	goto	initloop
  1901     000C  3400               	retlw	0
  1902                           
  1903                           	psect	clrtext
  1904     0800                     clear_ram0:	
  1905                           ;	Called with FSR0 containing the base address, and
  1906                           ;	WREG with the size to clear
  1907                           
  1908     0800  0064               	clrwdt	;clear the watchdog before getting into this loop
  1909     0801                     clrloop0:
  1910     0801  0180               	clrf	0	;clear RAM location pointed to by FSR
  1911     0802  3101               	addfsr 0,1
  1912     0803  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1913     0804  2801               	goto	clrloop0	;have we reached the end yet?
  1914     0805  3400               	retlw	0	;all done for this memory range, return
  1915                           
  1916                           	psect	cstackBANK2
  1917     014B                     __pcstackBANK2:
  1918     014B                     sprintf@s:
  1919                           
  1920                           ; 1 bytes @ 0x0
  1921     014B                     	ds	1
  1922     014C                     sprintf@ap:
  1923                           
  1924                           ; 1 bytes @ 0x1
  1925     014C                     	ds	1
  1926     014D                     sprintf@f:
  1927                           
  1928                           ; 11 bytes @ 0x2
  1929     014D                     	ds	11
  1930                           
  1931                           	psect	cstackBANK1
  1932     00A0                     __pcstackBANK1:
  1933     00A0                     ??_efgtoa:
  1934                           
  1935                           ; 1 bytes @ 0x0
  1936     00A0                     	ds	4
  1937     00A4                     efgtoa@ne:
  1938                           
  1939                           ; 2 bytes @ 0x4
  1940     00A4                     	ds	2
  1941     00A6                     efgtoa@p:
  1942                           
  1943                           ; 2 bytes @ 0x6
  1944     00A6                     	ds	2
  1945     00A8                     efgtoa@t:
  1946                           
  1947                           ; 2 bytes @ 0x8
  1948     00A8                     	ds	2
  1949     00AA                     _efgtoa$1158:
  1950                           
  1951                           ; 2 bytes @ 0xA
  1952     00AA                     	ds	2
  1953     00AC                     efgtoa@pp:
  1954                           
  1955                           ; 1 bytes @ 0xC
  1956     00AC                     	ds	1
  1957     00AD                     efgtoa@mode:
  1958                           
  1959                           ; 1 bytes @ 0xD
  1960     00AD                     	ds	1
  1961     00AE                     efgtoa@nmode:
  1962                           
  1963                           ; 1 bytes @ 0xE
  1964     00AE                     	ds	1
  1965     00AF                     efgtoa@d:
  1966                           
  1967                           ; 2 bytes @ 0xF
  1968     00AF                     	ds	2
  1969     00B1                     efgtoa@m:
  1970                           
  1971                           ; 2 bytes @ 0x11
  1972     00B1                     	ds	2
  1973     00B3                     efgtoa@fp:
  1974                           
  1975                           ; 1 bytes @ 0x13
  1976     00B3                     	ds	1
  1977     00B4                     efgtoa@e:
  1978                           
  1979                           ; 2 bytes @ 0x14
  1980     00B4                     	ds	2
  1981     00B6                     efgtoa@w:
  1982                           
  1983                           ; 2 bytes @ 0x16
  1984     00B6                     	ds	2
  1985     00B8                     efgtoa@ou:
  1986                           
  1987                           ; 4 bytes @ 0x18
  1988     00B8                     	ds	4
  1989     00BC                     efgtoa@i:
  1990                           
  1991                           ; 2 bytes @ 0x1C
  1992     00BC                     	ds	2
  1993     00BE                     efgtoa@h:
  1994                           
  1995                           ; 4 bytes @ 0x1E
  1996     00BE                     	ds	4
  1997     00C2                     efgtoa@l:
  1998                           
  1999                           ; 4 bytes @ 0x22
  2000     00C2                     	ds	4
  2001     00C6                     efgtoa@sign:
  2002                           
  2003                           ; 1 bytes @ 0x26
  2004     00C6                     	ds	1
  2005     00C7                     efgtoa@n:
  2006                           
  2007                           ; 2 bytes @ 0x27
  2008     00C7                     	ds	2
  2009     00C9                     efgtoa@g:
  2010                           
  2011                           ; 4 bytes @ 0x29
  2012     00C9                     	ds	4
  2013     00CD                     efgtoa@u:
  2014                           
  2015                           ; 4 bytes @ 0x2D
  2016     00CD                     	ds	4
  2017     00D1                     ??_vfpfcnvrt:
  2018                           
  2019                           ; 1 bytes @ 0x31
  2020     00D1                     	ds	4
  2021     00D5                     vfpfcnvrt@convarg:
  2022                           
  2023                           ; 4 bytes @ 0x35
  2024     00D5                     	ds	4
  2025     00D9                     vfpfcnvrt@fp:
  2026                           
  2027                           ; 1 bytes @ 0x39
  2028     00D9                     	ds	1
  2029     00DA                     vfpfcnvrt@c:
  2030                           
  2031                           ; 1 bytes @ 0x3A
  2032     00DA                     	ds	1
  2033     00DB                     vfpfcnvrt@cp:
  2034                           
  2035                           ; 2 bytes @ 0x3B
  2036     00DB                     	ds	2
  2037     00DD                     ?_vfprintf:
  2038     00DD                     vfprintf@fmt:	
  2039                           ; 2 bytes @ 0x3D
  2040                           
  2041                           
  2042                           ; 2 bytes @ 0x3D
  2043     00DD                     	ds	2
  2044     00DF                     vfprintf@ap:
  2045                           
  2046                           ; 1 bytes @ 0x3F
  2047     00DF                     	ds	1
  2048     00E0                     vfprintf@fp:
  2049                           
  2050                           ; 1 bytes @ 0x40
  2051     00E0                     	ds	1
  2052     00E1                     vfprintf@cfmt:
  2053                           
  2054                           ; 2 bytes @ 0x41
  2055     00E1                     	ds	2
  2056     00E3                     ?_sprintf:
  2057     00E3                     sprintf@fmt:	
  2058                           ; 2 bytes @ 0x43
  2059                           
  2060                           
  2061                           ; 2 bytes @ 0x43
  2062     00E3                     	ds	6
  2063     00E9                     ??_sprintf:
  2064                           
  2065                           ; 1 bytes @ 0x49
  2066     00E9                     	ds	1
  2067     00EA                     ??_MenuSensores:
  2068                           
  2069                           ; 1 bytes @ 0x4A
  2070     00EA                     	ds	2
  2071     00EC                     ??_main:
  2072                           
  2073                           ; 1 bytes @ 0x4C
  2074     00EC                     	ds	2
  2075                           
  2076                           	psect	cstackCOMMON
  2077     0070                     __pcstackCOMMON:
  2078     0070                     ?___fleq:
  2079     0070                     ?_SystemInit:	
  2080                           ; 1 bit 
  2081                           
  2082     0070                     ?_MenuPPAL:	
  2083                           ; 1 bytes @ 0x0
  2084                           
  2085     0070                     ?_MenuSensores:	
  2086                           ; 1 bytes @ 0x0
  2087                           
  2088     0070                     ?_MenuLeds:	
  2089                           ; 1 bytes @ 0x0
  2090                           
  2091     0070                     ?_MenuMotores:	
  2092                           ; 1 bytes @ 0x0
  2093                           
  2094     0070                     ?_MenuL1:	
  2095                           ; 1 bytes @ 0x0
  2096                           
  2097     0070                     ?_MenuL2:	
  2098                           ; 1 bytes @ 0x0
  2099                           
  2100     0070                     ?_MenuL3:	
  2101                           ; 1 bytes @ 0x0
  2102                           
  2103     0070                     ?_MenuMOTORA:	
  2104                           ; 1 bytes @ 0x0
  2105                           
  2106     0070                     ?_MenuMOTORB:	
  2107                           ; 1 bytes @ 0x0
  2108                           
  2109     0070                     ?_strcpy:	
  2110                           ; 1 bytes @ 0x0
  2111                           
  2112     0070                     ?_memcpy:	
  2113                           ; 1 bytes @ 0x0
  2114                           
  2115     0070                     ?_putch:	
  2116                           ; 1 bytes @ 0x0
  2117                           
  2118     0070                     ??_putch:	
  2119                           ; 1 bytes @ 0x0
  2120                           
  2121     0070                     ?_main:	
  2122                           ; 1 bytes @ 0x0
  2123                           
  2124     0070                     ?_ADC_Init:	
  2125                           ; 1 bytes @ 0x0
  2126                           
  2127     0070                     ??_ADC_Init:	
  2128                           ; 1 bytes @ 0x0
  2129                           
  2130     0070                     ?_Load_Cmd:	
  2131                           ; 1 bytes @ 0x0
  2132                           
  2133     0070                     ??_Load_Cmd:	
  2134                           ; 1 bytes @ 0x0
  2135                           
  2136     0070                     ?_Load_Data:	
  2137                           ; 1 bytes @ 0x0
  2138                           
  2139     0070                     ??_Load_Data:	
  2140                           ; 1 bytes @ 0x0
  2141                           
  2142     0070                     ?_LCD_Init:	
  2143                           ; 1 bytes @ 0x0
  2144                           
  2145     0070                     ?_LCD_Cmd:	
  2146                           ; 1 bytes @ 0x0
  2147                           
  2148     0070                     ?_LCD_Write_Cp:	
  2149                           ; 1 bytes @ 0x0
  2150                           
  2151     0070                     ?_MA_TurnR:	
  2152                           ; 1 bytes @ 0x0
  2153                           
  2154     0070                     ??_MA_TurnR:	
  2155                           ; 1 bytes @ 0x0
  2156                           
  2157     0070                     ?_MA_TurnL:	
  2158                           ; 1 bytes @ 0x0
  2159                           
  2160     0070                     ??_MA_TurnL:	
  2161                           ; 1 bytes @ 0x0
  2162                           
  2163     0070                     ?_MA_Off:	
  2164                           ; 1 bytes @ 0x0
  2165                           
  2166     0070                     ??_MA_Off:	
  2167                           ; 1 bytes @ 0x0
  2168                           
  2169     0070                     ?_MB_TurnR:	
  2170                           ; 1 bytes @ 0x0
  2171                           
  2172     0070                     ??_MB_TurnR:	
  2173                           ; 1 bytes @ 0x0
  2174                           
  2175     0070                     ?_MB_TurnL:	
  2176                           ; 1 bytes @ 0x0
  2177                           
  2178     0070                     ??_MB_TurnL:	
  2179                           ; 1 bytes @ 0x0
  2180                           
  2181     0070                     ?_MB_Off:	
  2182                           ; 1 bytes @ 0x0
  2183                           
  2184     0070                     ??_MB_Off:	
  2185                           ; 1 bytes @ 0x0
  2186                           
  2187     0070                     ?__Umul8_16:	
  2188                           ; 1 bytes @ 0x0
  2189                           
  2190     0070                     ?_fputc:	
  2191                           ; 2 bytes @ 0x0
  2192                           
  2193     0070                     ?___fpclassifyf:	
  2194                           ; 2 bytes @ 0x0
  2195                           
  2196     0070                     ?_ADC_Get_Value:	
  2197                           ; 2 bytes @ 0x0
  2198                           
  2199     0070                     ?___wmul:	
  2200                           ; 2 bytes @ 0x0
  2201                           
  2202     0070                     ?_labs:	
  2203                           ; 2 bytes @ 0x0
  2204                           
  2205     0070                     ?___flneg:	
  2206                           ; 4 bytes @ 0x0
  2207                           
  2208     0070                     ?___fltol:	
  2209                           ; 4 bytes @ 0x0
  2210                           
  2211     0070                     ?___fladd:	
  2212                           ; 4 bytes @ 0x0
  2213                           
  2214     0070                     ?___xxtofl:	
  2215                           ; 4 bytes @ 0x0
  2216                           
  2217     0070                     Load_Cmd@cmd:	
  2218                           ; 4 bytes @ 0x0
  2219                           
  2220     0070                     Load_Data@data:	
  2221                           ; 1 bytes @ 0x0
  2222                           
  2223     0070                     __Umul8_16@multiplicand:	
  2224                           ; 1 bytes @ 0x0
  2225                           
  2226     0070                     memcpy@s1:	
  2227                           ; 1 bytes @ 0x0
  2228                           
  2229     0070                     putch@c:	
  2230                           ; 1 bytes @ 0x0
  2231                           
  2232     0070                     ___wmul@multiplier:	
  2233                           ; 1 bytes @ 0x0
  2234                           
  2235     0070                     fputc@c:	
  2236                           ; 2 bytes @ 0x0
  2237                           
  2238     0070                     strcpy@src:	
  2239                           ; 2 bytes @ 0x0
  2240                           
  2241     0070                     ___fleq@ff1:	
  2242                           ; 2 bytes @ 0x0
  2243                           
  2244     0070                     ___flneg@f1:	
  2245                           ; 4 bytes @ 0x0
  2246                           
  2247     0070                     ___fltol@f1:	
  2248                           ; 4 bytes @ 0x0
  2249                           
  2250     0070                     ___fladd@b:	
  2251                           ; 4 bytes @ 0x0
  2252                           
  2253     0070                     ___xxtofl@val:	
  2254                           ; 4 bytes @ 0x0
  2255                           
  2256     0070                     ___fpclassifyf@x:	
  2257                           ; 4 bytes @ 0x0
  2258                           
  2259     0070                     labs@a:	
  2260                           ; 4 bytes @ 0x0
  2261                           
  2262                           
  2263                           ; 4 bytes @ 0x0
  2264     0070                     	ds	1
  2265     0071                     ??_LCD_Init:
  2266     0071                     ??_LCD_Cmd:	
  2267                           ; 1 bytes @ 0x1
  2268                           
  2269     0071                     ??_LCD_Write_Cp:	
  2270                           ; 1 bytes @ 0x1
  2271                           
  2272     0071                     memcpy@n:	
  2273                           ; 1 bytes @ 0x1
  2274                           
  2275                           
  2276                           ; 2 bytes @ 0x1
  2277     0071                     	ds	1
  2278     0072                     ??__Umul8_16:
  2279     0072                     ??_strcpy:	
  2280                           ; 1 bytes @ 0x2
  2281                           
  2282     0072                     ??_ADC_Get_Value:	
  2283                           ; 1 bytes @ 0x2
  2284                           
  2285     0072                     LCD_Cmd@NibbleH:	
  2286                           ; 1 bytes @ 0x2
  2287                           
  2288     0072                     LCD_Write_Cp@NibbleH:	
  2289                           ; 1 bytes @ 0x2
  2290                           
  2291     0072                     fputc@fp:	
  2292                           ; 1 bytes @ 0x2
  2293                           
  2294     0072                     ___wmul@multiplicand:	
  2295                           ; 1 bytes @ 0x2
  2296                           
  2297                           
  2298                           ; 2 bytes @ 0x2
  2299     0072                     	ds	1
  2300     0073                     ??_fputc:
  2301     0073                     ??_memcpy:	
  2302                           ; 1 bytes @ 0x3
  2303                           
  2304     0073                     ADC_Get_Value@ch:	
  2305                           ; 1 bytes @ 0x3
  2306                           
  2307     0073                     LCD_Cmd@NibbleL:	
  2308                           ; 1 bytes @ 0x3
  2309                           
  2310     0073                     LCD_Write_Cp@NibbleL:	
  2311                           ; 1 bytes @ 0x3
  2312                           
  2313                           
  2314                           ; 1 bytes @ 0x3
  2315     0073                     	ds	1
  2316     0074                     ??___fpclassifyf:
  2317     0074                     ??_labs:	
  2318                           ; 1 bytes @ 0x4
  2319                           
  2320     0074                     ??___wmul:	
  2321                           ; 1 bytes @ 0x4
  2322                           
  2323     0074                     ??___flneg:	
  2324                           ; 1 bytes @ 0x4
  2325                           
  2326     0074                     ??___fltol:	
  2327                           ; 1 bytes @ 0x4
  2328                           
  2329     0074                     ??___xxtofl:	
  2330                           ; 1 bytes @ 0x4
  2331                           
  2332     0074                     LCD_Cmd@cmd:	
  2333                           ; 1 bytes @ 0x4
  2334                           
  2335     0074                     LCD_Write_Cp@letra:	
  2336                           ; 1 bytes @ 0x4
  2337                           
  2338     0074                     memcpy@tmp:	
  2339                           ; 1 bytes @ 0x4
  2340                           
  2341     0074                     ___wmul@product:	
  2342                           ; 1 bytes @ 0x4
  2343                           
  2344     0074                     __Umul8_16@product:	
  2345                           ; 2 bytes @ 0x4
  2346                           
  2347     0074                     strcpy@s:	
  2348                           ; 2 bytes @ 0x4
  2349                           
  2350     0074                     ___fleq@ff2:	
  2351                           ; 2 bytes @ 0x4
  2352                           
  2353     0074                     ___fladd@a:	
  2354                           ; 4 bytes @ 0x4
  2355                           
  2356                           
  2357                           ; 4 bytes @ 0x4
  2358     0074                     	ds	1
  2359     0075                     ??_SystemInit:
  2360     0075                     ?_LCD_Set_Cursor:	
  2361                           ; 1 bytes @ 0x5
  2362                           
  2363     0075                     LCD_Set_Cursor@col:	
  2364                           ; 1 bytes @ 0x5
  2365                           
  2366     0075                     memcpy@d1:	
  2367                           ; 1 bytes @ 0x5
  2368                           
  2369                           
  2370                           ; 1 bytes @ 0x5
  2371     0075                     	ds	1
  2372     0076                     ??_LCD_Set_Cursor:
  2373     0076                     ?_read_prec_or_width:	
  2374                           ; 1 bytes @ 0x6
  2375                           
  2376     0076                     read_prec_or_width@ap:	
  2377                           ; 2 bytes @ 0x6
  2378                           
  2379     0076                     memcpy@d:	
  2380                           ; 1 bytes @ 0x6
  2381                           
  2382     0076                     strcpy@d:	
  2383                           ; 1 bytes @ 0x6
  2384                           
  2385     0076                     __Umul8_16@word_mpld:	
  2386                           ; 1 bytes @ 0x6
  2387                           
  2388                           
  2389                           ; 2 bytes @ 0x6
  2390     0076                     	ds	1
  2391     0077                     memcpy@s:
  2392     0077                     strcpy@dest:	
  2393                           ; 1 bytes @ 0x7
  2394                           
  2395                           
  2396                           ; 1 bytes @ 0x7
  2397     0077                     	ds	1
  2398     0078                     ??___fleq:
  2399     0078                     ??_read_prec_or_width:	
  2400                           ; 1 bytes @ 0x8
  2401                           
  2402     0078                     ?_fputs:	
  2403                           ; 1 bytes @ 0x8
  2404                           
  2405     0078                     LCD_Set_Cursor@fila:	
  2406                           ; 2 bytes @ 0x8
  2407                           
  2408     0078                     ___fltol@sign1:	
  2409                           ; 1 bytes @ 0x8
  2410                           
  2411     0078                     ___fladd@signs:	
  2412                           ; 1 bytes @ 0x8
  2413                           
  2414     0078                     __Umul8_16@multiplier:	
  2415                           ; 1 bytes @ 0x8
  2416                           
  2417     0078                     ___xxtofl@sign:	
  2418                           ; 1 bytes @ 0x8
  2419                           
  2420     0078                     fputs@fp:	
  2421                           ; 1 bytes @ 0x8
  2422                           
  2423                           
  2424                           ; 1 bytes @ 0x8
  2425     0078                     	ds	1
  2426     0079                     ??_fputs:
  2427     0079                     LCD_Set_Cursor@pos:	
  2428                           ; 1 bytes @ 0x9
  2429                           
  2430     0079                     ___fltol@exp1:	
  2431                           ; 1 bytes @ 0x9
  2432                           
  2433     0079                     ___fladd@aexp:	
  2434                           ; 1 bytes @ 0x9
  2435                           
  2436     0079                     ___xxtofl@exp:	
  2437                           ; 1 bytes @ 0x9
  2438                           
  2439                           
  2440                           ; 1 bytes @ 0x9
  2441     0079                     	ds	1
  2442     007A                     ?_LCD_Write:
  2443     007A                     ?_LCD_Write_Text:	
  2444                           ; 1 bytes @ 0xA
  2445                           
  2446     007A                     LCD_Write@col:	
  2447                           ; 1 bytes @ 0xA
  2448                           
  2449     007A                     LCD_Write_Text@col:	
  2450                           ; 1 bytes @ 0xA
  2451                           
  2452     007A                     ___fladd@bexp:	
  2453                           ; 1 bytes @ 0xA
  2454                           
  2455     007A                     ___xxtofl@arg:	
  2456                           ; 1 bytes @ 0xA
  2457                           
  2458                           
  2459                           ; 4 bytes @ 0xA
  2460     007A                     	ds	1
  2461     007B                     ?_pad:
  2462     007B                     LCD_Write@letra:	
  2463                           ; 1 bytes @ 0xB
  2464                           
  2465     007B                     ___fladd@grs:	
  2466                           ; 1 bytes @ 0xB
  2467                           
  2468     007B                     pad@buf:	
  2469                           ; 1 bytes @ 0xB
  2470                           
  2471     007B                     LCD_Write_Text@text:	
  2472                           ; 1 bytes @ 0xB
  2473                           
  2474                           
  2475                           ; 2 bytes @ 0xB
  2476     007B                     	ds	1
  2477     007C                     ??_LCD_Write:
  2478     007C                     LCD_Write@fila:	
  2479                           ; 1 bytes @ 0xC
  2480                           
  2481     007C                     pad@p:	
  2482                           ; 1 bytes @ 0xC
  2483                           
  2484                           
  2485                           ; 2 bytes @ 0xC
  2486     007C                     	ds	1
  2487     007D                     ??_LCD_Write_Text:
  2488                           
  2489                           ; 1 bytes @ 0xD
  2490     007D                     	ds	1
  2491     007E                     ??___flsub:
  2492                           
  2493                           	psect	cstackBANK0
  2494     0020                     __pcstackBANK0:	
  2495                           ; 1 bytes @ 0xE
  2496                           
  2497     0020                     ??___fladd:
  2498     0020                     ?___flmul:	
  2499                           ; 1 bytes @ 0x0
  2500                           
  2501     0020                     LCD_Write_Text@fila:	
  2502                           ; 4 bytes @ 0x0
  2503                           
  2504     0020                     read_prec_or_width@c:	
  2505                           ; 1 bytes @ 0x0
  2506                           
  2507     0020                     fputs@c:	
  2508                           ; 1 bytes @ 0x0
  2509                           
  2510     0020                     ___fpclassifyf@e:	
  2511                           ; 1 bytes @ 0x0
  2512                           
  2513     0020                     ___flmul@b:	
  2514                           ; 2 bytes @ 0x0
  2515                           
  2516                           
  2517                           ; 4 bytes @ 0x0
  2518     0020                     	ds	1
  2519     0021                     ??_MenuPPAL:
  2520     0021                     ??_MenuLeds:	
  2521                           ; 1 bytes @ 0x1
  2522                           
  2523     0021                     ??_MenuMotores:	
  2524                           ; 1 bytes @ 0x1
  2525                           
  2526     0021                     ??_MenuL1:	
  2527                           ; 1 bytes @ 0x1
  2528                           
  2529     0021                     ??_MenuL2:	
  2530                           ; 1 bytes @ 0x1
  2531                           
  2532     0021                     ??_MenuL3:	
  2533                           ; 1 bytes @ 0x1
  2534                           
  2535     0021                     ??_MenuMOTORA:	
  2536                           ; 1 bytes @ 0x1
  2537                           
  2538     0021                     ??_MenuMOTORB:	
  2539                           ; 1 bytes @ 0x1
  2540                           
  2541     0021                     read_prec_or_width@n:	
  2542                           ; 1 bytes @ 0x1
  2543                           
  2544     0021                     fputs@i:	
  2545                           ; 2 bytes @ 0x1
  2546                           
  2547                           
  2548                           ; 2 bytes @ 0x1
  2549     0021                     	ds	1
  2550     0022                     ___fpclassifyf@u:
  2551                           
  2552                           ; 4 bytes @ 0x2
  2553     0022                     	ds	1
  2554     0023                     read_prec_or_width@fmt:
  2555     0023                     fputs@s:	
  2556                           ; 1 bytes @ 0x3
  2557                           
  2558                           
  2559                           ; 1 bytes @ 0x3
  2560     0023                     	ds	1
  2561     0024                     ??_pad:
  2562     0024                     ___flmul@a:	
  2563                           ; 1 bytes @ 0x4
  2564                           
  2565                           
  2566                           ; 4 bytes @ 0x4
  2567     0024                     	ds	1
  2568     0025                     pad@i:
  2569                           
  2570                           ; 2 bytes @ 0x5
  2571     0025                     	ds	2
  2572     0027                     pad@w:
  2573                           
  2574                           ; 2 bytes @ 0x7
  2575     0027                     	ds	1
  2576     0028                     ??___flmul:
  2577                           
  2578                           ; 1 bytes @ 0x8
  2579     0028                     	ds	1
  2580     0029                     pad@fp:
  2581                           
  2582                           ; 1 bytes @ 0x9
  2583     0029                     	ds	4
  2584     002D                     ___flmul@sign:
  2585                           
  2586                           ; 1 bytes @ 0xD
  2587     002D                     	ds	1
  2588     002E                     ___flmul@grs:
  2589                           
  2590                           ; 4 bytes @ 0xE
  2591     002E                     	ds	4
  2592     0032                     ___flmul@aexp:
  2593                           
  2594                           ; 1 bytes @ 0x12
  2595     0032                     	ds	1
  2596     0033                     ___flmul@bexp:
  2597                           
  2598                           ; 1 bytes @ 0x13
  2599     0033                     	ds	1
  2600     0034                     ___flmul@prod:
  2601                           
  2602                           ; 4 bytes @ 0x14
  2603     0034                     	ds	4
  2604     0038                     ___flmul@temp:
  2605                           
  2606                           ; 2 bytes @ 0x18
  2607     0038                     	ds	2
  2608     003A                     ?___flge:
  2609     003A                     ?___flsub:	
  2610                           ; 1 bit 
  2611                           
  2612     003A                     ?___fldiv:	
  2613                           ; 4 bytes @ 0x1A
  2614                           
  2615     003A                     ___flge@ff1:	
  2616                           ; 4 bytes @ 0x1A
  2617                           
  2618     003A                     ___flsub@a:	
  2619                           ; 4 bytes @ 0x1A
  2620                           
  2621     003A                     ___fldiv@a:	
  2622                           ; 4 bytes @ 0x1A
  2623                           
  2624                           
  2625                           ; 4 bytes @ 0x1A
  2626     003A                     	ds	4
  2627     003E                     ___flge@ff2:
  2628     003E                     ___flsub@b:	
  2629                           ; 4 bytes @ 0x1E
  2630                           
  2631     003E                     ___fldiv@b:	
  2632                           ; 4 bytes @ 0x1E
  2633                           
  2634                           
  2635                           ; 4 bytes @ 0x1E
  2636     003E                     	ds	4
  2637     0042                     ??___flge:
  2638     0042                     ??___fldiv:	
  2639                           ; 1 bytes @ 0x22
  2640                           
  2641                           
  2642                           ; 1 bytes @ 0x22
  2643     0042                     	ds	5
  2644     0047                     ___fldiv@rem:
  2645                           
  2646                           ; 4 bytes @ 0x27
  2647     0047                     	ds	4
  2648     004B                     ___fldiv@sign:
  2649                           
  2650                           ; 1 bytes @ 0x2B
  2651     004B                     	ds	1
  2652     004C                     ___fldiv@new_exp:
  2653                           
  2654                           ; 2 bytes @ 0x2C
  2655     004C                     	ds	2
  2656     004E                     ___fldiv@grs:
  2657                           
  2658                           ; 4 bytes @ 0x2E
  2659     004E                     	ds	4
  2660     0052                     ___fldiv@bexp:
  2661                           
  2662                           ; 1 bytes @ 0x32
  2663     0052                     	ds	1
  2664     0053                     ___fldiv@aexp:
  2665                           
  2666                           ; 1 bytes @ 0x33
  2667     0053                     	ds	1
  2668     0054                     ?_floorf:
  2669     0054                     floorf@x:	
  2670                           ; 4 bytes @ 0x34
  2671                           
  2672                           
  2673                           ; 4 bytes @ 0x34
  2674     0054                     	ds	4
  2675     0058                     ??_floorf:
  2676                           
  2677                           ; 1 bytes @ 0x38
  2678     0058                     	ds	6
  2679     005E                     floorf@m:
  2680                           
  2681                           ; 4 bytes @ 0x3E
  2682     005E                     	ds	4
  2683     0062                     floorf@e:
  2684                           
  2685                           ; 2 bytes @ 0x42
  2686     0062                     	ds	2
  2687     0064                     floorf@u:
  2688                           
  2689                           ; 4 bytes @ 0x44
  2690     0064                     	ds	4
  2691     0068                     ?_efgtoa:
  2692     0068                     efgtoa@f:	
  2693                           ; 1 bytes @ 0x48
  2694                           
  2695                           
  2696                           ; 4 bytes @ 0x48
  2697     0068                     	ds	4
  2698     006C                     efgtoa@c:
  2699                           
  2700                           ; 1 bytes @ 0x4C
  2701     006C                     	ds	1
  2702     006D                     ?_vfpfcnvrt:
  2703     006D                     vfpfcnvrt@fmt:	
  2704                           ; 1 bytes @ 0x4D
  2705                           
  2706                           
  2707                           ; 1 bytes @ 0x4D
  2708     006D                     	ds	1
  2709     006E                     vfpfcnvrt@ap:
  2710                           
  2711                           ; 1 bytes @ 0x4E
  2712     006E                     	ds	1
  2713     006F                     ??_vfprintf:
  2714                           
  2715                           ; 1 bytes @ 0x4F
  2716     006F                     	ds	1
  2717                           
  2718                           	psect	maintext
  2719     1CDA                     __pmaintext:	
  2720 ;;
  2721 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2722 ;;
  2723 ;; *************** function _main *****************
  2724 ;; Defined at:
  2725 ;;		line 19 in file "main.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;		None
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;		None
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      void 
  2732 ;; Registers used:
  2733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2734 ;; Tracked objects:
  2735 ;;		On entry : B1F/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2741 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2742 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2743 ;;Total ram usage:        2 bytes
  2744 ;; Hardware stack levels required when called: 9
  2745 ;; This function calls:
  2746 ;;		_MenuL1
  2747 ;;		_MenuL2
  2748 ;;		_MenuL3
  2749 ;;		_MenuLeds
  2750 ;;		_MenuMOTORA
  2751 ;;		_MenuMOTORB
  2752 ;;		_MenuMotores
  2753 ;;		_MenuPPAL
  2754 ;;		_MenuSensores
  2755 ;;		_SystemInit
  2756 ;; This function is called by:
  2757 ;;		Startup code after reset
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761     1CDA                     _main:	
  2762                           ;psect for function _main
  2763                           
  2764     1CDA                     l5408:	
  2765                           ;incstack = 0
  2766                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2767                           
  2768                           
  2769                           ;main.c: 21:     SystemInit();
  2770     1CDA  3190  200D  319C   	fcall	_SystemInit
  2771     1CDD  2D02               	goto	l5430
  2772     1CDE                     l5410:
  2773     1CDE  3193  2398  319C   	fcall	_MenuPPAL
  2774     1CE1  2D29               	goto	l5432
  2775     1CE2                     l5412:
  2776     1CE2  3194  248A  319C   	fcall	_MenuSensores
  2777     1CE5  2D29               	goto	l5432
  2778     1CE6                     l5414:
  2779     1CE6  3195  259D  319C   	fcall	_MenuLeds
  2780     1CE9  2D29               	goto	l5432
  2781     1CEA                     l5416:
  2782     1CEA  3192  22AA  319C   	fcall	_MenuMotores
  2783     1CED  2D29               	goto	l5432
  2784     1CEE                     l5418:
  2785     1CEE  319F  2713  319C   	fcall	_MenuL1
  2786     1CF1  2D29               	goto	l5432
  2787     1CF2                     l5420:
  2788     1CF2  3190  20D0  319C   	fcall	_MenuL2
  2789     1CF5  2D29               	goto	l5432
  2790     1CF6                     l5422:
  2791     1CF6  3191  21BD  319C   	fcall	_MenuL3
  2792     1CF9  2D29               	goto	l5432
  2793     1CFA                     l5424:
  2794     1CFA  3196  26CE  319C   	fcall	_MenuMOTORA
  2795     1CFD  2D29               	goto	l5432
  2796     1CFE                     l5426:
  2797     1CFE  3188  20DD  319C   	fcall	_MenuMOTORB
  2798     1D01  2D29               	goto	l5432
  2799     1D02                     l5430:
  2800     1D02  0022               	movlb	2	; select bank2
  2801     1D03  0836               	movf	_cMenu^(0+256),w
  2802     1D04  0021               	movlb	1	; select bank1
  2803     1D05  00EC               	movwf	??_main^(0+128)
  2804     1D06  01ED               	clrf	(??_main^(0+128)+1)
  2805                           
  2806                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2807                           ; Switch size 1, requested type "simple"
  2808                           ; Number of cases is 1, Range of values is 0 to 0
  2809                           ; switch strategies available:
  2810                           ; Name         Instructions Cycles
  2811                           ; simple_byte            4     3 (average)
  2812                           ; direct_byte            8     6 (fixed)
  2813                           ; jumptable            260     6 (fixed)
  2814                           ;	Chosen strategy is simple_byte
  2815     1D07  086D               	movf	(??_main+1)^(0+128),w
  2816     1D08  3A00               	xorlw	0	; case 0
  2817     1D09  1903               	skipnz
  2818     1D0A  2D0C               	goto	l5878
  2819     1D0B  2D29               	goto	l5432
  2820     1D0C                     l5878:
  2821                           
  2822                           ; Switch size 1, requested type "simple"
  2823                           ; Number of cases is 9, Range of values is 0 to 8
  2824                           ; switch strategies available:
  2825                           ; Name         Instructions Cycles
  2826                           ; direct_byte           24     6 (fixed)
  2827                           ; simple_byte           28    15 (average)
  2828                           ; jumptable            260     6 (fixed)
  2829                           ;	Chosen strategy is simple_byte
  2830     1D0C  086C               	movf	??_main^(0+128),w
  2831     1D0D  3A00               	xorlw	0	; case 0
  2832     1D0E  1903               	skipnz
  2833     1D0F  2CDE               	goto	l5410
  2834     1D10  3A01               	xorlw	1	; case 1
  2835     1D11  1903               	skipnz
  2836     1D12  2CE2               	goto	l5412
  2837     1D13  3A03               	xorlw	3	; case 2
  2838     1D14  1903               	skipnz
  2839     1D15  2CE6               	goto	l5414
  2840     1D16  3A01               	xorlw	1	; case 3
  2841     1D17  1903               	skipnz
  2842     1D18  2CEA               	goto	l5416
  2843     1D19  3A07               	xorlw	7	; case 4
  2844     1D1A  1903               	skipnz
  2845     1D1B  2CEE               	goto	l5418
  2846     1D1C  3A01               	xorlw	1	; case 5
  2847     1D1D  1903               	skipnz
  2848     1D1E  2CF2               	goto	l5420
  2849     1D1F  3A03               	xorlw	3	; case 6
  2850     1D20  1903               	skipnz
  2851     1D21  2CF6               	goto	l5422
  2852     1D22  3A01               	xorlw	1	; case 7
  2853     1D23  1903               	skipnz
  2854     1D24  2CFA               	goto	l5424
  2855     1D25  3A0F               	xorlw	15	; case 8
  2856     1D26  1903               	skipnz
  2857     1D27  2CFE               	goto	l5426
  2858     1D28  2D29               	goto	l5432
  2859     1D29                     l5432:
  2860                           
  2861                           ;main.c: 37:         _delay((unsigned long)((50)*(20000000UL/4000.0)));
  2862     1D29  3002               	movlw	2
  2863     1D2A  0021               	movlb	1	; select bank1
  2864     1D2B  00ED               	movwf	(??_main^(0+128)+1)
  2865     1D2C  3045               	movlw	69
  2866     1D2D  00EC               	movwf	??_main^(0+128)
  2867     1D2E  30A9               	movlw	169
  2868     1D2F                     u5757:
  2869     1D2F  0B89               	decfsz	9,f
  2870     1D30  2D2F               	goto	u5757
  2871     1D31  0BEC               	decfsz	??_main^(0+128),f
  2872     1D32  2D2F               	goto	u5757
  2873     1D33  0BED               	decfsz	(??_main^(0+128)+1),f
  2874     1D34  2D2F               	goto	u5757
  2875     1D35  3200               	nop2
  2876     1D36  2D02               	goto	l5430
  2877     1D37  3180  2802         	ljmp	start
  2878     1D39                     __end_of_main:
  2879                           
  2880                           	psect	text1
  2881     100D                     __ptext1:	
  2882 ;; *************** function _SystemInit *****************
  2883 ;; Defined at:
  2884 ;;		line 24 in file "Menu.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;		None
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;		None
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      void 
  2891 ;; Registers used:
  2892 ;;		wreg, status,2, status,0, pclath, cstack
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2902 ;;Total ram usage:        0 bytes
  2903 ;; Hardware stack levels used: 1
  2904 ;; Hardware stack levels required when called: 2
  2905 ;; This function calls:
  2906 ;;		_ADC_Init
  2907 ;;		_LCD_Cmd
  2908 ;;		_LCD_Init
  2909 ;; This function is called by:
  2910 ;;		_main
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914     100D                     _SystemInit:	
  2915                           ;psect for function _SystemInit
  2916                           
  2917     100D                     l4886:	
  2918                           ;incstack = 0
  2919                           ; Regs used in _SystemInit: [wreg+status,2+status,0+pclath+cstack]
  2920                           
  2921                           
  2922                           ;Menu.c: 25:     OSCCON = 0x38;
  2923     100D  3038               	movlw	56
  2924     100E  0021               	movlb	1	; select bank1
  2925     100F  0099               	movwf	25	;volatile
  2926     1010                     l4888:
  2927                           
  2928                           ;Menu.c: 26:     OSCTUNE = 0x00;
  2929     1010  0198               	clrf	24	;volatile
  2930     1011                     l4890:
  2931                           
  2932                           ;Menu.c: 27:     BORCON = 0x00;
  2933     1011  0022               	movlb	2	; select bank2
  2934     1012  0196               	clrf	22	;volatile
  2935     1013                     l4892:
  2936                           
  2937                           ;Menu.c: 29:     ANSELAbits.ANSA2 = 0;
  2938     1013  0023               	movlb	3	; select bank3
  2939     1014  110C               	bcf	12,2	;volatile
  2940     1015                     l4894:
  2941                           
  2942                           ;Menu.c: 30:     ANSELAbits.ANSA3 = 0;
  2943     1015  118C               	bcf	12,3	;volatile
  2944     1016                     l4896:
  2945                           
  2946                           ;Menu.c: 31:     ANSELAbits.ANSA4 = 0;
  2947     1016  120C               	bcf	12,4	;volatile
  2948     1017                     l4898:
  2949                           
  2950                           ;Menu.c: 33:     TRISAbits.TRISA2 = 0;
  2951     1017  0021               	movlb	1	; select bank1
  2952     1018  110C               	bcf	12,2	;volatile
  2953     1019                     l4900:
  2954                           
  2955                           ;Menu.c: 34:     TRISAbits.TRISA3 = 0;
  2956     1019  118C               	bcf	12,3	;volatile
  2957     101A                     l4902:
  2958                           
  2959                           ;Menu.c: 35:     TRISAbits.TRISA4 = 0;
  2960     101A  120C               	bcf	12,4	;volatile
  2961     101B                     l4904:
  2962                           
  2963                           ;Menu.c: 37:     ANSELBbits.ANSB3 = 0;
  2964     101B  0023               	movlb	3	; select bank3
  2965     101C  118D               	bcf	13,3	;volatile
  2966     101D                     l4906:
  2967                           
  2968                           ;Menu.c: 38:     ANSELBbits.ANSB4 = 0;
  2969     101D  120D               	bcf	13,4	;volatile
  2970     101E                     l4908:
  2971                           
  2972                           ;Menu.c: 39:     ANSELBbits.ANSB2 = 0;
  2973     101E  110D               	bcf	13,2	;volatile
  2974     101F                     l4910:
  2975                           
  2976                           ;Menu.c: 41:     TRISBbits.TRISB3 = 0;
  2977     101F  0021               	movlb	1	; select bank1
  2978     1020  118D               	bcf	13,3	;volatile
  2979     1021                     l4912:
  2980                           
  2981                           ;Menu.c: 42:     TRISBbits.TRISB4 = 0;
  2982     1021  120D               	bcf	13,4	;volatile
  2983     1022                     l4914:
  2984                           
  2985                           ;Menu.c: 43:     TRISBbits.TRISB5 = 0;
  2986     1022  128D               	bcf	13,5	;volatile
  2987     1023                     l4916:
  2988                           
  2989                           ;Menu.c: 44:     TRISBbits.TRISB6 = 0;
  2990     1023  130D               	bcf	13,6	;volatile
  2991     1024                     l4918:
  2992                           
  2993                           ;Menu.c: 46:     ANSELAbits.ANSA0 = 1;
  2994     1024  0023               	movlb	3	; select bank3
  2995     1025  140C               	bsf	12,0	;volatile
  2996     1026                     l4920:
  2997                           
  2998                           ;Menu.c: 47:     ANSELAbits.ANSA1 = 1;
  2999     1026  148C               	bsf	12,1	;volatile
  3000     1027                     l4922:
  3001                           
  3002                           ;Menu.c: 49:     TRISAbits.TRISA0 = 1;
  3003     1027  0021               	movlb	1	; select bank1
  3004     1028  140C               	bsf	12,0	;volatile
  3005     1029                     l4924:
  3006                           
  3007                           ;Menu.c: 50:     TRISAbits.TRISA1 = 1;
  3008     1029  148C               	bsf	12,1	;volatile
  3009     102A                     l4926:
  3010                           
  3011                           ;Menu.c: 52:     ANSELBbits.ANSB0 = 0;
  3012     102A  0023               	movlb	3	; select bank3
  3013     102B  100D               	bcf	13,0	;volatile
  3014     102C                     l4928:
  3015                           
  3016                           ;Menu.c: 53:     ANSELBbits.ANSB1 = 0;
  3017     102C  108D               	bcf	13,1	;volatile
  3018     102D                     l4930:
  3019                           
  3020                           ;Menu.c: 54:     ANSELBbits.ANSB2 = 0;
  3021     102D  110D               	bcf	13,2	;volatile
  3022     102E                     l4932:
  3023                           
  3024                           ;Menu.c: 56:     TRISBbits.TRISB0 = 1;
  3025     102E  0021               	movlb	1	; select bank1
  3026     102F  140D               	bsf	13,0	;volatile
  3027     1030                     l4934:
  3028                           
  3029                           ;Menu.c: 57:     TRISBbits.TRISB1 = 1;
  3030     1030  148D               	bsf	13,1	;volatile
  3031     1031                     l4936:
  3032                           
  3033                           ;Menu.c: 58:     TRISBbits.TRISB2 = 1;
  3034     1031  150D               	bsf	13,2	;volatile
  3035     1032                     l4938:
  3036                           
  3037                           ;Menu.c: 60:     LATAbits.LATA2 = 0;
  3038     1032  0022               	movlb	2	; select bank2
  3039     1033  110C               	bcf	12,2	;volatile
  3040     1034                     l4940:
  3041                           
  3042                           ;Menu.c: 61:     LATAbits.LATA3 = 0;
  3043     1034  118C               	bcf	12,3	;volatile
  3044     1035                     l4942:
  3045                           
  3046                           ;Menu.c: 62:     LATAbits.LATA4 = 0;
  3047     1035  120C               	bcf	12,4	;volatile
  3048     1036                     l4944:
  3049                           
  3050                           ;Menu.c: 64:     LATBbits.LATB3 = 0;
  3051     1036  118D               	bcf	13,3	;volatile
  3052     1037                     l4946:
  3053                           
  3054                           ;Menu.c: 65:     LATBbits.LATB4 = 0;
  3055     1037  120D               	bcf	13,4	;volatile
  3056     1038                     l4948:
  3057                           
  3058                           ;Menu.c: 66:     LATBbits.LATB5 = 0;
  3059     1038  128D               	bcf	13,5	;volatile
  3060     1039                     l4950:
  3061                           
  3062                           ;Menu.c: 67:     LATBbits.LATB6 = 0;
  3063     1039  130D               	bcf	13,6	;volatile
  3064     103A                     l4952:
  3065                           
  3066                           ;Menu.c: 69:     LCD_Init();
  3067     103A  319C  2433  3190   	fcall	_LCD_Init
  3068     103D                     l4954:
  3069                           
  3070                           ;Menu.c: 70:     LCD_Cmd(12);
  3071     103D  300C               	movlw	12
  3072     103E  3199  21E1  3190   	fcall	_LCD_Cmd
  3073     1041                     l4956:
  3074                           
  3075                           ;Menu.c: 72:     ADC_Init();
  3076     1041  3199  2197  3190   	fcall	_ADC_Init
  3077     1044                     l172:
  3078     1044  0008               	return
  3079     1045                     __end_of_SystemInit:
  3080                           
  3081                           	psect	text2
  3082     1C33                     __ptext2:	
  3083 ;; *************** function _LCD_Init *****************
  3084 ;; Defined at:
  3085 ;;		line 37 in file "LCD_LIB.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;		None
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;		None
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1    wreg      void 
  3092 ;; Registers used:
  3093 ;;		wreg, status,2, status,0, pclath, cstack
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3101 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3102 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3103 ;;Total ram usage:        1 bytes
  3104 ;; Hardware stack levels used: 1
  3105 ;; Hardware stack levels required when called: 1
  3106 ;; This function calls:
  3107 ;;		_Load_Cmd
  3108 ;; This function is called by:
  3109 ;;		_SystemInit
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113     1C33                     _LCD_Init:	
  3114                           ;psect for function _LCD_Init
  3115                           
  3116     1C33                     l4778:	
  3117                           ;incstack = 0
  3118                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3119                           
  3120                           
  3121                           ;LCD_LIB.c: 39:     TRISDbits.TRISD0 = 0; TRISDbits.TRISD1 = 0; TRISDbits.TRISD4 = 0;
  3122     1C33  0021               	movlb	1	; select bank1
  3123     1C34  100F               	bcf	15,0	;volatile
  3124     1C35  108F               	bcf	15,1	;volatile
  3125     1C36  120F               	bcf	15,4	;volatile
  3126                           
  3127                           ;LCD_LIB.c: 40:     TRISDbits.TRISD5 = 0; TRISDbits.TRISD6 = 0; TRISDbits.TRISD7 = 0;
  3128     1C37  128F               	bcf	15,5	;volatile
  3129     1C38  130F               	bcf	15,6	;volatile
  3130     1C39  138F               	bcf	15,7	;volatile
  3131                           
  3132                           ;LCD_LIB.c: 42:     LATDbits.LATD1 = 0; LATDbits.LATD4 = 0; LATDbits.LATD5 = 0;
  3133     1C3A  0022               	movlb	2	; select bank2
  3134     1C3B  108F               	bcf	15,1	;volatile
  3135     1C3C  120F               	bcf	15,4	;volatile
  3136     1C3D  128F               	bcf	15,5	;volatile
  3137                           
  3138                           ;LCD_LIB.c: 43:     LATDbits.LATD6 = 0; LATDbits.LATD7 = 0;
  3139     1C3E  130F               	bcf	15,6	;volatile
  3140     1C3F  138F               	bcf	15,7	;volatile
  3141     1C40                     l4780:
  3142                           
  3143                           ;LCD_LIB.c: 45:     _delay((unsigned long)((15)*(20000000UL/4000.0)));
  3144     1C40  3062               	movlw	98
  3145     1C41  00F1               	movwf	??_LCD_Init
  3146     1C42  3066               	movlw	102
  3147     1C43                     u5767:
  3148     1C43  0B89               	decfsz	9,f
  3149     1C44  2C43               	goto	u5767
  3150     1C45  0BF1               	decfsz	??_LCD_Init,f
  3151     1C46  2C43               	goto	u5767
  3152     1C47                     l4782:
  3153                           
  3154                           ;LCD_LIB.c: 46:     Load_Cmd(0x03);
  3155     1C47  3003               	movlw	3
  3156     1C48  319B  234B  319C   	fcall	_Load_Cmd
  3157     1C4B                     l4784:
  3158                           
  3159                           ;LCD_LIB.c: 47:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  3160     1C4B  3021               	movlw	33
  3161     1C4C  00F1               	movwf	??_LCD_Init
  3162     1C4D  3076               	movlw	118
  3163     1C4E                     u5777:
  3164     1C4E  0B89               	decfsz	9,f
  3165     1C4F  2C4E               	goto	u5777
  3166     1C50  0BF1               	decfsz	??_LCD_Init,f
  3167     1C51  2C4E               	goto	u5777
  3168     1C52  3200               	nop2
  3169                           
  3170                           ;LCD_LIB.c: 48:     Load_Cmd(0x03);
  3171     1C53  3003               	movlw	3
  3172     1C54  319B  234B  319C   	fcall	_Load_Cmd
  3173     1C57                     l4786:
  3174                           
  3175                           ;LCD_LIB.c: 49:     _delay((unsigned long)((100)*(20000000UL/4000000.0)));
  3176     1C57  30A6               	movlw	166
  3177     1C58                     u5787:
  3178     1C58  0B89               	decfsz	9,f
  3179     1C59  2C58               	goto	u5787
  3180     1C5A  3200               	nop2
  3181     1C5B                     l4788:
  3182                           
  3183                           ;LCD_LIB.c: 50:     Load_Cmd(0x03);
  3184     1C5B  3003               	movlw	3
  3185     1C5C  319B  234B  319C   	fcall	_Load_Cmd
  3186     1C5F                     l4790:
  3187                           
  3188                           ;LCD_LIB.c: 51:     Load_Cmd(0x02);
  3189     1C5F  3002               	movlw	2
  3190     1C60  319B  234B  319C   	fcall	_Load_Cmd
  3191     1C63                     l4792:
  3192                           
  3193                           ;LCD_LIB.c: 53:     Load_Cmd(0x02);
  3194     1C63  3002               	movlw	2
  3195     1C64  319B  234B  319C   	fcall	_Load_Cmd
  3196     1C67                     l4794:
  3197                           
  3198                           ;LCD_LIB.c: 54:     Load_Cmd(0x08);
  3199     1C67  3008               	movlw	8
  3200     1C68  319B  234B  319C   	fcall	_Load_Cmd
  3201     1C6B                     l4796:
  3202                           
  3203                           ;LCD_LIB.c: 56:     Load_Cmd(0x00);
  3204     1C6B  3000               	movlw	0
  3205     1C6C  319B  234B  319C   	fcall	_Load_Cmd
  3206     1C6F                     l4798:
  3207                           
  3208                           ;LCD_LIB.c: 57:     Load_Cmd(0x0F);
  3209     1C6F  300F               	movlw	15
  3210     1C70  319B  234B  319C   	fcall	_Load_Cmd
  3211     1C73                     l4800:
  3212                           
  3213                           ;LCD_LIB.c: 59:     Load_Cmd(0x00);
  3214     1C73  3000               	movlw	0
  3215     1C74  319B  234B  319C   	fcall	_Load_Cmd
  3216     1C77                     l4802:
  3217                           
  3218                           ;LCD_LIB.c: 60:     Load_Cmd(0x01);
  3219     1C77  3001               	movlw	1
  3220     1C78  319B  234B  319C   	fcall	_Load_Cmd
  3221     1C7B                     l4804:
  3222                           
  3223                           ;LCD_LIB.c: 61:     _delay((unsigned long)((2)*(20000000UL/4000.0)));
  3224     1C7B  300D               	movlw	13
  3225     1C7C  00F1               	movwf	??_LCD_Init
  3226     1C7D  30FC               	movlw	252
  3227     1C7E                     u5797:
  3228     1C7E  0B89               	decfsz	9,f
  3229     1C7F  2C7E               	goto	u5797
  3230     1C80  0BF1               	decfsz	??_LCD_Init,f
  3231     1C81  2C7E               	goto	u5797
  3232     1C82                     l91:
  3233     1C82  0008               	return
  3234     1C83                     __end_of_LCD_Init:
  3235                           
  3236                           	psect	text3
  3237     1997                     __ptext3:	
  3238 ;; *************** function _ADC_Init *****************
  3239 ;; Defined at:
  3240 ;;		line 4 in file "ADC.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;		None
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;		None
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  1    wreg      void 
  3247 ;; Registers used:
  3248 ;;		wreg, status,2, status,0
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3258 ;;Total ram usage:        0 bytes
  3259 ;; Hardware stack levels used: 1
  3260 ;; This function calls:
  3261 ;;		Nothing
  3262 ;; This function is called by:
  3263 ;;		_SystemInit
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267     1997                     _ADC_Init:	
  3268                           ;psect for function _ADC_Init
  3269                           
  3270     1997                     l4762:	
  3271                           ;incstack = 0
  3272                           ; Regs used in _ADC_Init: [wreg+status,2+status,0]
  3273                           
  3274                           
  3275                           ;ADC.c: 5:     ADCON1bits.ADFM = 1;
  3276     1997  0021               	movlb	1	; select bank1
  3277     1998  179E               	bsf	30,7	;volatile
  3278     1999                     l4764:
  3279                           
  3280                           ;ADC.c: 6:     ADCON1bits.ADCS = 0b110;
  3281     1999  081E               	movf	30,w	;volatile
  3282     199A  398F               	andlw	-113
  3283     199B  3860               	iorlw	96
  3284     199C  009E               	movwf	30	;volatile
  3285     199D                     l4766:
  3286                           
  3287                           ;ADC.c: 7:     ADCON1bits.ADNREF = 0;
  3288     199D  111E               	bcf	30,2	;volatile
  3289                           
  3290                           ;ADC.c: 8:     ADCON1bits.ADPREF = 0b00;
  3291     199E  30FC               	movlw	-4
  3292     199F  059E               	andwf	30,f	;volatile
  3293     19A0                     l4768:
  3294                           
  3295                           ;ADC.c: 9:     ADCON0bits.ADON = 1;
  3296     19A0  141D               	bsf	29,0	;volatile
  3297     19A1                     l54:
  3298     19A1  0008               	return
  3299     19A2                     __end_of_ADC_Init:
  3300                           
  3301                           	psect	text4
  3302     148A                     __ptext4:	
  3303 ;; *************** function _MenuSensores *****************
  3304 ;; Defined at:
  3305 ;;		line 155 in file "Menu.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;		None
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;		None
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  1    wreg      void 
  3312 ;; Registers used:
  3313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3321 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3322 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3323 ;;Total ram usage:        2 bytes
  3324 ;; Hardware stack levels used: 1
  3325 ;; Hardware stack levels required when called: 8
  3326 ;; This function calls:
  3327 ;;		_ADC_Get_Value
  3328 ;;		_LCD_Write_Text
  3329 ;;		___fldiv
  3330 ;;		___flmul
  3331 ;;		___xxtofl
  3332 ;;		_sprintf
  3333 ;; This function is called by:
  3334 ;;		_main
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338     148A                     _MenuSensores:	
  3339                           ;psect for function _MenuSensores
  3340                           
  3341     148A                     l5010:	
  3342                           ;incstack = 0
  3343                           ; Regs used in _MenuSensores: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3344                           
  3345                           
  3346                           ;Menu.c: 159:     LCD_Write_Text(1,1,"   MENU SENSORES    ");
  3347     148A  01FA               	clrf	LCD_Write_Text@col
  3348     148B  0AFA               	incf	LCD_Write_Text@col,f
  3349     148C  3065               	movlw	low (STR_5| (0+32768))
  3350     148D  00FB               	movwf	LCD_Write_Text@text
  3351     148E  30A1               	movlw	high (STR_5| (0+32768))
  3352     148F  00FC               	movwf	LCD_Write_Text@text+1
  3353     1490  3001               	movlw	1
  3354     1491  3199  21FD  3194   	fcall	_LCD_Write_Text
  3355                           
  3356                           ;Menu.c: 162:     LCD_Write_Text(4,1,"SEL TO BACK         ");
  3357     1494  01FA               	clrf	LCD_Write_Text@col
  3358     1495  0AFA               	incf	LCD_Write_Text@col,f
  3359     1496  3054               	movlw	low (STR_6| (0+32768))
  3360     1497  00FB               	movwf	LCD_Write_Text@text
  3361     1498  30A0               	movlw	high (STR_6| (0+32768))
  3362     1499  00FC               	movwf	LCD_Write_Text@text+1
  3363     149A  3004               	movlw	4
  3364     149B  3199  21FD  3194   	fcall	_LCD_Write_Text
  3365     149E                     l5012:
  3366                           
  3367                           ;Menu.c: 165:     conver = ADC_Get_Value(0);
  3368     149E  3000               	movlw	0
  3369     149F  3199  21CB  3194   	fcall	_ADC_Get_Value
  3370     14A2  0871               	movf	?_ADC_Get_Value+1,w
  3371     14A3  0022               	movlb	2	; select bank2
  3372     14A4  00B5               	movwf	(_conver+1)^(0+256)
  3373     14A5  0870               	movf	?_ADC_Get_Value,w
  3374     14A6  00B4               	movwf	_conver^(0+256)
  3375     14A7                     l5014:
  3376                           
  3377                           ;Menu.c: 166:     lm35 = conver*150.0/306.9;
  3378     14A7  3043               	movlw	67
  3379     14A8  0020               	movlb	0	; select bank0
  3380     14A9  00BD               	movwf	___fldiv@a+3
  3381     14AA  3099               	movlw	153
  3382     14AB  00BC               	movwf	___fldiv@a+2
  3383     14AC  3073               	movlw	115
  3384     14AD  00BB               	movwf	___fldiv@a+1
  3385     14AE  3033               	movlw	51
  3386     14AF  00BA               	movwf	___fldiv@a
  3387     14B0  3043               	movlw	67
  3388     14B1  00A3               	movwf	___flmul@b+3
  3389     14B2  3016               	movlw	22
  3390     14B3  00A2               	movwf	___flmul@b+2
  3391     14B4  3000               	movlw	0
  3392     14B5  00A1               	movwf	___flmul@b+1
  3393     14B6  3000               	movlw	0
  3394     14B7  00A0               	movwf	___flmul@b
  3395     14B8  0022               	movlb	2	; select bank2
  3396     14B9  0834               	movf	_conver^(0+256),w
  3397     14BA  00F0               	movwf	___xxtofl@val
  3398     14BB  0835               	movf	(_conver+1)^(0+256),w
  3399     14BC  00F1               	movwf	___xxtofl@val+1
  3400     14BD  0D89               	rlf	9,f
  3401     14BE  3B89               	subwfb	9,f
  3402     14BF  0989               	comf	9,f
  3403     14C0  00F2               	movwf	___xxtofl@val+2
  3404     14C1  00F3               	movwf	___xxtofl@val+3
  3405     14C2  3001               	movlw	1
  3406     14C3  3188  2033  3194   	fcall	___xxtofl
  3407     14C6  0873               	movf	?___xxtofl+3,w
  3408     14C7  0020               	movlb	0	; select bank0
  3409     14C8  00A7               	movwf	___flmul@a+3
  3410     14C9  0872               	movf	?___xxtofl+2,w
  3411     14CA  00A6               	movwf	___flmul@a+2
  3412     14CB  0871               	movf	?___xxtofl+1,w
  3413     14CC  00A5               	movwf	___flmul@a+1
  3414     14CD  0870               	movf	?___xxtofl,w
  3415     14CE  00A4               	movwf	___flmul@a
  3416     14CF  318D  25C5  3194   	fcall	___flmul
  3417     14D2  0020               	movlb	0	; select bank0
  3418     14D3  0823               	movf	?___flmul+3,w
  3419     14D4  00C1               	movwf	___fldiv@b+3
  3420     14D5  0822               	movf	?___flmul+2,w
  3421     14D6  00C0               	movwf	___fldiv@b+2
  3422     14D7  0821               	movf	?___flmul+1,w
  3423     14D8  00BF               	movwf	___fldiv@b+1
  3424     14D9  0820               	movf	?___flmul,w
  3425     14DA  00BE               	movwf	___fldiv@b
  3426     14DB  318A  220F  3194   	fcall	___fldiv
  3427     14DE  0020               	movlb	0	; select bank0
  3428     14DF  083D               	movf	?___fldiv+3,w
  3429     14E0  0022               	movlb	2	; select bank2
  3430     14E1  00AF               	movwf	(_lm35+3)^(0+256)
  3431     14E2  0020               	movlb	0	; select bank0
  3432     14E3  083C               	movf	?___fldiv+2,w
  3433     14E4  0022               	movlb	2	; select bank2
  3434     14E5  00AE               	movwf	(_lm35+2)^(0+256)
  3435     14E6  0020               	movlb	0	; select bank0
  3436     14E7  083B               	movf	?___fldiv+1,w
  3437     14E8  0022               	movlb	2	; select bank2
  3438     14E9  00AD               	movwf	(_lm35+1)^(0+256)
  3439     14EA  0020               	movlb	0	; select bank0
  3440     14EB  083A               	movf	?___fldiv,w
  3441     14EC  0022               	movlb	2	; select bank2
  3442     14ED  00AC               	movwf	_lm35^(0+256)
  3443     14EE                     l5016:
  3444                           
  3445                           ;Menu.c: 167:     sprintf(strLCD,"LM35: %6.1f",lm35);
  3446     14EE  30B9               	movlw	low (STR_7| (0+32768))
  3447     14EF  0021               	movlb	1	; select bank1
  3448     14F0  00E3               	movwf	sprintf@fmt^(0+128)
  3449     14F1  30A1               	movlw	high (STR_7| (0+32768))
  3450     14F2  00E4               	movwf	(sprintf@fmt^(0+128)+1)
  3451     14F3  0022               	movlb	2	; select bank2
  3452     14F4  082F               	movf	(_lm35+3)^(0+256),w
  3453     14F5  0021               	movlb	1	; select bank1
  3454     14F6  00E8               	movwf	((?_sprintf+3)^(0+128)+2)
  3455     14F7  0022               	movlb	2	; select bank2
  3456     14F8  082E               	movf	(_lm35+2)^(0+256),w
  3457     14F9  0021               	movlb	1	; select bank1
  3458     14FA  00E7               	movwf	((?_sprintf+2)^(0+128)+2)
  3459     14FB  0022               	movlb	2	; select bank2
  3460     14FC  082D               	movf	(_lm35+1)^(0+256),w
  3461     14FD  0021               	movlb	1	; select bank1
  3462     14FE  00E6               	movwf	((?_sprintf+1)^(0+128)+2)
  3463     14FF  0022               	movlb	2	; select bank2
  3464     1500  082C               	movf	_lm35^(0+256),w
  3465     1501  0021               	movlb	1	; select bank1
  3466     1502  00E5               	movwf	(?_sprintf^(0+128)+2)
  3467     1503  3037               	movlw	(low (_strLCD| (0+256)))& (0+255)
  3468     1504  319A  229A  3194   	fcall	_sprintf
  3469     1507                     l5018:
  3470                           
  3471                           ;Menu.c: 168:     LCD_Write_Text(2,1,strLCD);
  3472     1507  01FA               	clrf	LCD_Write_Text@col
  3473     1508  0AFA               	incf	LCD_Write_Text@col,f
  3474     1509  3037               	movlw	low _strLCD
  3475     150A  00FB               	movwf	LCD_Write_Text@text
  3476     150B  3001               	movlw	high _strLCD
  3477     150C  00FC               	movwf	LCD_Write_Text@text+1
  3478     150D  3002               	movlw	2
  3479     150E  3199  21FD  3194   	fcall	_LCD_Write_Text
  3480     1511                     l5020:
  3481                           
  3482                           ;Menu.c: 170:     conver = ADC_Get_Value(1);
  3483     1511  3001               	movlw	1
  3484     1512  3199  21CB  3194   	fcall	_ADC_Get_Value
  3485     1515  0871               	movf	?_ADC_Get_Value+1,w
  3486     1516  0022               	movlb	2	; select bank2
  3487     1517  00B5               	movwf	(_conver+1)^(0+256)
  3488     1518  0870               	movf	?_ADC_Get_Value,w
  3489     1519  00B4               	movwf	_conver^(0+256)
  3490     151A                     l5022:
  3491                           
  3492                           ;Menu.c: 171:     ldr = (conver/1023.0)*100.0;
  3493     151A  3042               	movlw	66
  3494     151B  0020               	movlb	0	; select bank0
  3495     151C  00A3               	movwf	___flmul@b+3
  3496     151D  30C8               	movlw	200
  3497     151E  00A2               	movwf	___flmul@b+2
  3498     151F  3000               	movlw	0
  3499     1520  00A1               	movwf	___flmul@b+1
  3500     1521  3000               	movlw	0
  3501     1522  00A0               	movwf	___flmul@b
  3502     1523  3044               	movlw	68
  3503     1524  00BD               	movwf	___fldiv@a+3
  3504     1525  307F               	movlw	127
  3505     1526  00BC               	movwf	___fldiv@a+2
  3506     1527  30C0               	movlw	192
  3507     1528  00BB               	movwf	___fldiv@a+1
  3508     1529  3000               	movlw	0
  3509     152A  00BA               	movwf	___fldiv@a
  3510     152B  0022               	movlb	2	; select bank2
  3511     152C  0834               	movf	_conver^(0+256),w
  3512     152D  00F0               	movwf	___xxtofl@val
  3513     152E  0835               	movf	(_conver+1)^(0+256),w
  3514     152F  00F1               	movwf	___xxtofl@val+1
  3515     1530  0D89               	rlf	9,f
  3516     1531  3B89               	subwfb	9,f
  3517     1532  0989               	comf	9,f
  3518     1533  00F2               	movwf	___xxtofl@val+2
  3519     1534  00F3               	movwf	___xxtofl@val+3
  3520     1535  3001               	movlw	1
  3521     1536  3188  2033  3194   	fcall	___xxtofl
  3522     1539  0873               	movf	?___xxtofl+3,w
  3523     153A  0020               	movlb	0	; select bank0
  3524     153B  00C1               	movwf	___fldiv@b+3
  3525     153C  0872               	movf	?___xxtofl+2,w
  3526     153D  00C0               	movwf	___fldiv@b+2
  3527     153E  0871               	movf	?___xxtofl+1,w
  3528     153F  00BF               	movwf	___fldiv@b+1
  3529     1540  0870               	movf	?___xxtofl,w
  3530     1541  00BE               	movwf	___fldiv@b
  3531     1542  318A  220F  3194   	fcall	___fldiv
  3532     1545  0020               	movlb	0	; select bank0
  3533     1546  083D               	movf	?___fldiv+3,w
  3534     1547  00A7               	movwf	___flmul@a+3
  3535     1548  083C               	movf	?___fldiv+2,w
  3536     1549  00A6               	movwf	___flmul@a+2
  3537     154A  083B               	movf	?___fldiv+1,w
  3538     154B  00A5               	movwf	___flmul@a+1
  3539     154C  083A               	movf	?___fldiv,w
  3540     154D  00A4               	movwf	___flmul@a
  3541     154E  318D  25C5  3194   	fcall	___flmul
  3542     1551  0020               	movlb	0	; select bank0
  3543     1552  0823               	movf	?___flmul+3,w
  3544     1553  0022               	movlb	2	; select bank2
  3545     1554  00AB               	movwf	(_ldr+3)^(0+256)
  3546     1555  0020               	movlb	0	; select bank0
  3547     1556  0822               	movf	?___flmul+2,w
  3548     1557  0022               	movlb	2	; select bank2
  3549     1558  00AA               	movwf	(_ldr+2)^(0+256)
  3550     1559  0020               	movlb	0	; select bank0
  3551     155A  0821               	movf	?___flmul+1,w
  3552     155B  0022               	movlb	2	; select bank2
  3553     155C  00A9               	movwf	(_ldr+1)^(0+256)
  3554     155D  0020               	movlb	0	; select bank0
  3555     155E  0820               	movf	?___flmul,w
  3556     155F  0022               	movlb	2	; select bank2
  3557     1560  00A8               	movwf	_ldr^(0+256)
  3558                           
  3559                           ;Menu.c: 172:     sprintf(strLCD,"LDR: %6.1f",ldr);
  3560     1561  30C5               	movlw	low (STR_8| (0+32768))
  3561     1562  0021               	movlb	1	; select bank1
  3562     1563  00E3               	movwf	sprintf@fmt^(0+128)
  3563     1564  30A1               	movlw	high (STR_8| (0+32768))
  3564     1565  00E4               	movwf	(sprintf@fmt^(0+128)+1)
  3565     1566  0022               	movlb	2	; select bank2
  3566     1567  082B               	movf	(_ldr+3)^(0+256),w
  3567     1568  0021               	movlb	1	; select bank1
  3568     1569  00E8               	movwf	((?_sprintf+3)^(0+128)+2)
  3569     156A  0022               	movlb	2	; select bank2
  3570     156B  082A               	movf	(_ldr+2)^(0+256),w
  3571     156C  0021               	movlb	1	; select bank1
  3572     156D  00E7               	movwf	((?_sprintf+2)^(0+128)+2)
  3573     156E  0022               	movlb	2	; select bank2
  3574     156F  0829               	movf	(_ldr+1)^(0+256),w
  3575     1570  0021               	movlb	1	; select bank1
  3576     1571  00E6               	movwf	((?_sprintf+1)^(0+128)+2)
  3577     1572  0022               	movlb	2	; select bank2
  3578     1573  0828               	movf	_ldr^(0+256),w
  3579     1574  0021               	movlb	1	; select bank1
  3580     1575  00E5               	movwf	(?_sprintf^(0+128)+2)
  3581     1576  3037               	movlw	(low (_strLCD| (0+256)))& (0+255)
  3582     1577  319A  229A  3194   	fcall	_sprintf
  3583     157A                     l5024:
  3584                           
  3585                           ;Menu.c: 173:     LCD_Write_Text(3,1,strLCD);
  3586     157A  01FA               	clrf	LCD_Write_Text@col
  3587     157B  0AFA               	incf	LCD_Write_Text@col,f
  3588     157C  3037               	movlw	low _strLCD
  3589     157D  00FB               	movwf	LCD_Write_Text@text
  3590     157E  3001               	movlw	high _strLCD
  3591     157F  00FC               	movwf	LCD_Write_Text@text+1
  3592     1580  3003               	movlw	3
  3593     1581  3199  21FD  3194   	fcall	_LCD_Write_Text
  3594     1584                     l5026:
  3595                           
  3596                           ;Menu.c: 177:     if(PORTBbits.RB2 == 1){
  3597     1584  0020               	movlb	0	; select bank0
  3598     1585  1D0D               	btfss	13,2	;volatile
  3599     1586  2D88               	goto	u5161
  3600     1587  2D89               	goto	u5160
  3601     1588                     u5161:
  3602     1588  2D8F               	goto	l5032
  3603     1589                     u5160:
  3604     1589                     l227:
  3605     1589  190D               	btfsc	13,2	;volatile
  3606     158A  2D8C               	goto	u5171
  3607     158B  2D8D               	goto	u5170
  3608     158C                     u5171:
  3609     158C  2D89               	goto	l227
  3610     158D                     u5170:
  3611     158D                     l5030:
  3612                           
  3613                           ;Menu.c: 179:         cMenu = MPPAL;
  3614     158D  0022               	movlb	2	; select bank2
  3615     158E  01B6               	clrf	_cMenu^(0+256)
  3616     158F                     l5032:
  3617                           
  3618                           ;Menu.c: 182:     _delay((unsigned long)((100)*(20000000UL/4000.0)));
  3619     158F  3003               	movlw	3
  3620     1590  0021               	movlb	1	; select bank1
  3621     1591  00EB               	movwf	(??_MenuSensores^(0+128)+1)
  3622     1592  308A               	movlw	138
  3623     1593  00EA               	movwf	??_MenuSensores^(0+128)
  3624     1594  3055               	movlw	85
  3625     1595                     u5807:
  3626     1595  0B89               	decfsz	9,f
  3627     1596  2D95               	goto	u5807
  3628     1597  0BEA               	decfsz	??_MenuSensores^(0+128),f
  3629     1598  2D95               	goto	u5807
  3630     1599  0BEB               	decfsz	(??_MenuSensores^(0+128)+1),f
  3631     159A  2D95               	goto	u5807
  3632     159B  3200               	nop2
  3633     159C                     l230:
  3634     159C  0008               	return
  3635     159D                     __end_of_MenuSensores:
  3636                           
  3637                           	psect	text5
  3638     1A9A                     __ptext5:	
  3639 ;; *************** function _sprintf *****************
  3640 ;; Defined at:
  3641 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;  s               1    wreg     PTR unsigned char 
  3644 ;;		 -> strLCD(20), 
  3645 ;;  fmt             2   67[BANK1 ] PTR const unsigned char 
  3646 ;;		 -> STR_8(11), STR_7(12), 
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;  s               1    0[BANK2 ] PTR unsigned char 
  3649 ;;		 -> strLCD(20), 
  3650 ;;  f              11    2[BANK2 ] struct _IO_FILE
  3651 ;;  ret             2    0        int 
  3652 ;;  ap              1    1[BANK2 ] PTR void [1]
  3653 ;;		 -> ?_sprintf(2), 
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  2   67[BANK1 ] int 
  3656 ;; Registers used:
  3657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3663 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3664 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0
  3665 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3666 ;;      Totals:         0       0       7      13       0       0       0       0       0       0       0       0       
      +0       0
  3667 ;;Total ram usage:       20 bytes
  3668 ;; Hardware stack levels used: 1
  3669 ;; Hardware stack levels required when called: 7
  3670 ;; This function calls:
  3671 ;;		_vfprintf
  3672 ;; This function is called by:
  3673 ;;		_MenuSensores
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677     1A9A                     _sprintf:	
  3678                           ;psect for function _sprintf
  3679                           
  3680                           
  3681                           ;incstack = 0
  3682                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3683                           ;sprintf@s stored from wreg
  3684     1A9A  0022               	movlb	2	; select bank2
  3685     1A9B  00CB               	movwf	sprintf@s^(0+256)
  3686     1A9C                     l4830:
  3687     1A9C  30E5               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3688     1A9D  00CC               	movwf	sprintf@ap^(0+256)
  3689     1A9E  084B               	movf	sprintf@s^(0+256),w
  3690     1A9F  00CD               	movwf	sprintf@f^(0+256)
  3691     1AA0                     l4832:
  3692     1AA0  01CF               	clrf	(sprintf@f^(0+256)+2)
  3693     1AA1  01D0               	clrf	((sprintf@f+1)^(0+256)+2)
  3694     1AA2                     l4834:
  3695     1AA2  01D6               	clrf	(sprintf@f^(0+256)+9)
  3696     1AA3  01D7               	clrf	((sprintf@f+1)^(0+256)+9)
  3697     1AA4                     l4836:
  3698     1AA4  0021               	movlb	1	; select bank1
  3699     1AA5  0864               	movf	(sprintf@fmt+1)^(0+128),w
  3700     1AA6  00DE               	movwf	(vfprintf@fmt+1)^(0+128)
  3701     1AA7  0863               	movf	sprintf@fmt^(0+128),w
  3702     1AA8  00DD               	movwf	vfprintf@fmt^(0+128)
  3703     1AA9  304C               	movlw	(low (sprintf@ap| (0+256)))& (0+255)
  3704     1AAA  00DF               	movwf	vfprintf@ap^(0+128)
  3705     1AAB  304D               	movlw	(low (sprintf@f| (0+256)))& (0+255)
  3706     1AAC  319A  227A  319A   	fcall	_vfprintf
  3707     1AAF                     l4838:
  3708     1AAF  0022               	movlb	2	; select bank2
  3709     1AB0  084F               	movf	(sprintf@f^(0+256)+2),w
  3710     1AB1  074B               	addwf	sprintf@s^(0+256),w
  3711     1AB2  0021               	movlb	1	; select bank1
  3712     1AB3  00E9               	movwf	??_sprintf^(0+128)
  3713     1AB4  0869               	movf	??_sprintf^(0+128),w
  3714     1AB5  0086               	movwf	6
  3715     1AB6  3001               	movlw	1	; select bank2/3
  3716     1AB7  0087               	movwf	7
  3717     1AB8  0181               	clrf	1
  3718     1AB9                     l1038:
  3719     1AB9  0008               	return
  3720     1ABA                     __end_of_sprintf:
  3721                           
  3722                           	psect	text6
  3723     1A7A                     __ptext6:	
  3724 ;; *************** function _vfprintf *****************
  3725 ;; Defined at:
  3726 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;  fp              1    wreg     PTR struct _IO_FILE
  3729 ;;		 -> sprintf@f(11), 
  3730 ;;  fmt             2   61[BANK1 ] PTR const unsigned char 
  3731 ;;		 -> STR_8(11), STR_7(12), 
  3732 ;;  ap              1   63[BANK1 ] PTR PTR void 
  3733 ;;		 -> sprintf@ap(1), 
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;  fp              1   64[BANK1 ] PTR struct _IO_FILE
  3736 ;;		 -> sprintf@f(11), 
  3737 ;;  cfmt            2   65[BANK1 ] PTR unsigned char 
  3738 ;;		 -> STR_8(11), STR_7(12), 
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  2   61[BANK1 ] int 
  3741 ;; Registers used:
  3742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3748 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3749 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3750 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3751 ;;      Totals:         0       1       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3752 ;;Total ram usage:        7 bytes
  3753 ;; Hardware stack levels used: 1
  3754 ;; Hardware stack levels required when called: 6
  3755 ;; This function calls:
  3756 ;;		_vfpfcnvrt
  3757 ;; This function is called by:
  3758 ;;		_sprintf
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           
  3762     1A7A                     _vfprintf:	
  3763                           ;psect for function _vfprintf
  3764                           
  3765                           
  3766                           ;incstack = 0
  3767                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3768                           ;vfprintf@fp stored from wreg
  3769     1A7A  0021               	movlb	1	; select bank1
  3770     1A7B  00E0               	movwf	vfprintf@fp^(0+128)
  3771     1A7C                     l4752:
  3772                           
  3773                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  3774     1A7C  085E               	movf	(vfprintf@fmt+1)^(0+128),w
  3775     1A7D  00E2               	movwf	(vfprintf@cfmt+1)^(0+128)
  3776     1A7E  085D               	movf	vfprintf@fmt^(0+128),w
  3777     1A7F  00E1               	movwf	vfprintf@cfmt^(0+128)
  3778                           
  3779                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  3780     1A80  2A8D               	goto	l4756
  3781     1A81                     l4754:
  3782                           
  3783                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3784     1A81  30E1               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3785     1A82  0020               	movlb	0	; select bank0
  3786     1A83  00ED               	movwf	vfpfcnvrt@fmt
  3787     1A84  0021               	movlb	1	; select bank1
  3788     1A85  085F               	movf	vfprintf@ap^(0+128),w
  3789     1A86  0020               	movlb	0	; select bank0
  3790     1A87  00EE               	movwf	vfpfcnvrt@ap
  3791     1A88  0021               	movlb	1	; select bank1
  3792     1A89  0860               	movf	vfprintf@fp^(0+128),w
  3793     1A8A  3180  206E  319A   	fcall	_vfpfcnvrt
  3794     1A8D                     l4756:
  3795                           
  3796                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  3797     1A8D  0021               	movlb	1	; select bank1
  3798     1A8E  0861               	movf	vfprintf@cfmt^(0+128),w
  3799     1A8F  0084               	movwf	4
  3800     1A90  0862               	movf	(vfprintf@cfmt+1)^(0+128),w
  3801     1A91  0085               	movwf	5
  3802     1A92  0012               	moviw fsr0++
  3803     1A93  1D03               	btfss	3,2
  3804     1A94  2A96               	goto	u4911
  3805     1A95  2A97               	goto	u4910
  3806     1A96                     u4911:
  3807     1A96  2A81               	goto	l4754
  3808     1A97                     u4910:
  3809     1A97                     l4758:
  3810                           
  3811                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  3812     1A97  01DD               	clrf	?_vfprintf^(0+128)
  3813     1A98  01DE               	clrf	(?_vfprintf+1)^(0+128)
  3814     1A99                     l1162:
  3815     1A99  0008               	return
  3816     1A9A                     __end_of_vfprintf:
  3817                           
  3818                           	psect	text7
  3819     006E                     __ptext7:	
  3820 ;; *************** function _vfpfcnvrt *****************
  3821 ;; Defined at:
  3822 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;  fp              1    wreg     PTR struct _IO_FILE
  3825 ;;		 -> sprintf@f(11), 
  3826 ;;  fmt             1   77[BANK0 ] PTR PTR unsigned char 
  3827 ;;		 -> vfprintf@cfmt(2), 
  3828 ;;  ap              1   78[BANK0 ] PTR PTR void 
  3829 ;;		 -> sprintf@ap(1), 
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;  fp              1   57[BANK1 ] PTR struct _IO_FILE
  3832 ;;		 -> sprintf@f(11), 
  3833 ;;  convarg         4   53[BANK1 ] struct .
  3834 ;;  cp              2   59[BANK1 ] PTR unsigned char 
  3835 ;;		 -> STR_8(11), STR_7(12), 
  3836 ;;  i               2    0        int 
  3837 ;;  done            2    0        int 
  3838 ;;  c               1   58[BANK1 ] unsigned char 
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  1    wreg      void 
  3841 ;; Registers used:
  3842 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3848 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3849 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3850 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3851 ;;      Totals:         0       2      12       0       0       0       0       0       0       0       0       0       
      +0       0
  3852 ;;Total ram usage:       14 bytes
  3853 ;; Hardware stack levels used: 1
  3854 ;; Hardware stack levels required when called: 5
  3855 ;; This function calls:
  3856 ;;		_efgtoa
  3857 ;;		_fputc
  3858 ;;		_read_prec_or_width
  3859 ;; This function is called by:
  3860 ;;		_vfprintf
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864     006E                     _vfpfcnvrt:	
  3865                           ;psect for function _vfpfcnvrt
  3866                           
  3867                           
  3868                           ;incstack = 0
  3869                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3870                           ;vfpfcnvrt@fp stored from wreg
  3871     006E  0021               	movlb	1	; select bank1
  3872     006F  00D9               	movwf	vfpfcnvrt@fp^(0+128)
  3873     0070                     l4646:
  3874                           
  3875                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  3876     0070  0020               	movlb	0	; select bank0
  3877     0071  086D               	movf	vfpfcnvrt@fmt,w
  3878     0072  0086               	movwf	6
  3879     0073  0187               	clrf	7
  3880     0074  3F40               	moviw [0]fsr1
  3881     0075  0021               	movlb	1	; select bank1
  3882     0076  00D1               	movwf	??_vfpfcnvrt^(0+128)
  3883     0077  3F41               	moviw [1]fsr1
  3884     0078  00D2               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3885     0079  0851               	movf	??_vfpfcnvrt^(0+128),w
  3886     007A  0084               	movwf	4
  3887     007B  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3888     007C  0085               	movwf	5
  3889     007D  0012               	moviw fsr0++
  3890     007E  3A25               	xorlw	37
  3891     007F  1D03               	btfss	3,2
  3892     0080  2882               	goto	u4861
  3893     0081  2883               	goto	u4860
  3894     0082                     u4861:
  3895     0082  2991               	goto	l4706
  3896     0083                     u4860:
  3897     0083                     l4648:
  3898                           
  3899                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  3900     0083  0020               	movlb	0	; select bank0
  3901     0084  086D               	movf	vfpfcnvrt@fmt,w
  3902     0085  0086               	movwf	6
  3903     0086  0187               	clrf	7
  3904     0087  3001               	movlw	1
  3905     0088  0781               	addwf	1,f
  3906     0089  3141               	addfsr 1,1
  3907     008A  1803               	skipnc
  3908     008B  0A81               	incf	1,f
  3909     008C                     l4650:
  3910                           
  3911                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  3912     008C  0022               	movlb	2	; select bank2
  3913     008D  01B0               	clrf	_width^(0+256)
  3914     008E  01B1               	clrf	(_width+1)^(0+256)
  3915     008F  1003               	clrc
  3916     0090  3000               	movlw	0
  3917     0091  1803               	btfsc	3,0
  3918     0092  3001               	movlw	1
  3919     0093  0021               	movlb	1	; select bank1
  3920     0094  00EE               	movwf	_flags^(0+128)
  3921     0095                     l4652:
  3922                           
  3923                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  3924     0095  30FF               	movlw	255
  3925     0096  0022               	movlb	2	; select bank2
  3926     0097  00B2               	movwf	_prec^(0+256)
  3927     0098  30FF               	movlw	255
  3928     0099  00B3               	movwf	(_prec^(0+256)+1)
  3929     009A                     l4654:
  3930                           
  3931                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1117:   width = r
      +                          ead_prec_or_width(fmt, ap);
  3932     009A  0020               	movlb	0	; select bank0
  3933     009B  086E               	movf	vfpfcnvrt@ap,w
  3934     009C  00F6               	movwf	read_prec_or_width@ap
  3935     009D  086D               	movf	vfpfcnvrt@fmt,w
  3936     009E  3180  200D  3180   	fcall	_read_prec_or_width
  3937     00A1  0877               	movf	?_read_prec_or_width+1,w
  3938     00A2  0022               	movlb	2	; select bank2
  3939     00A3  00B1               	movwf	(_width+1)^(0+256)
  3940     00A4  0876               	movf	?_read_prec_or_width,w
  3941     00A5  00B0               	movwf	_width^(0+256)
  3942     00A6                     l4656:
  3943                           
  3944                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1118:   if (width
      +                           < 0) {
  3945     00A6  1FB1               	btfss	(_width+1)^(0+256),7
  3946     00A7  28A9               	goto	u4871
  3947     00A8  28AA               	goto	u4870
  3948     00A9                     u4871:
  3949     00A9  28B2               	goto	l4662
  3950     00AA                     u4870:
  3951     00AA                     l4658:
  3952                           
  3953                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1119:    flags |=
      +                           (1 << 0);
  3954     00AA  0021               	movlb	1	; select bank1
  3955     00AB  146E               	bsf	_flags^(0+128),0
  3956     00AC                     l4660:
  3957                           
  3958                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1120:    width = 
      +                          -width;
  3959     00AC  0022               	movlb	2	; select bank2
  3960     00AD  09B0               	comf	_width^(0+256),f
  3961     00AE  09B1               	comf	(_width+1)^(0+256),f
  3962     00AF  0AB0               	incf	_width^(0+256),f
  3963     00B0  1903               	skipnz
  3964     00B1  0AB1               	incf	(_width+1)^(0+256),f
  3965     00B2                     l4662:
  3966                           
  3967                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1126:         if 
      +                          ((*fmt)[0] == '.') {
  3968     00B2  0020               	movlb	0	; select bank0
  3969     00B3  086D               	movf	vfpfcnvrt@fmt,w
  3970     00B4  0086               	movwf	6
  3971     00B5  0187               	clrf	7
  3972     00B6  3F40               	moviw [0]fsr1
  3973     00B7  0021               	movlb	1	; select bank1
  3974     00B8  00D1               	movwf	??_vfpfcnvrt^(0+128)
  3975     00B9  3F41               	moviw [1]fsr1
  3976     00BA  00D2               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3977     00BB  0851               	movf	??_vfpfcnvrt^(0+128),w
  3978     00BC  0084               	movwf	4
  3979     00BD  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3980     00BE  0085               	movwf	5
  3981     00BF  0012               	moviw fsr0++
  3982     00C0  3A2E               	xorlw	46
  3983     00C1  1D03               	btfss	3,2
  3984     00C2  28C4               	goto	u4881
  3985     00C3  28C5               	goto	u4880
  3986     00C4                     u4881:
  3987     00C4  28D9               	goto	l4668
  3988     00C5                     u4880:
  3989     00C5                     l4664:
  3990                           
  3991                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1127:            
      +                           ++*fmt;
  3992     00C5  0020               	movlb	0	; select bank0
  3993     00C6  086D               	movf	vfpfcnvrt@fmt,w
  3994     00C7  0086               	movwf	6
  3995     00C8  0187               	clrf	7
  3996     00C9  3001               	movlw	1
  3997     00CA  0781               	addwf	1,f
  3998     00CB  3141               	addfsr 1,1
  3999     00CC  1803               	skipnc
  4000     00CD  0A81               	incf	1,f
  4001     00CE                     l4666:
  4002                           
  4003                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1128:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  4004     00CE  086E               	movf	vfpfcnvrt@ap,w
  4005     00CF  00F6               	movwf	read_prec_or_width@ap
  4006     00D0  086D               	movf	vfpfcnvrt@fmt,w
  4007     00D1  3180  200D  3180   	fcall	_read_prec_or_width
  4008     00D4  0877               	movf	?_read_prec_or_width+1,w
  4009     00D5  0022               	movlb	2	; select bank2
  4010     00D6  00B3               	movwf	(_prec+1)^(0+256)
  4011     00D7  0876               	movf	?_read_prec_or_width,w
  4012     00D8  00B2               	movwf	_prec^(0+256)
  4013     00D9                     l4668:
  4014                           
  4015                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1418:   cp = *fmt
      +                          ;
  4016     00D9  0020               	movlb	0	; select bank0
  4017     00DA  086D               	movf	vfpfcnvrt@fmt,w
  4018     00DB  0086               	movwf	6
  4019     00DC  0187               	clrf	7
  4020     00DD  3F40               	moviw [0]fsr1
  4021     00DE  0021               	movlb	1	; select bank1
  4022     00DF  00DB               	movwf	vfpfcnvrt@cp^(0+128)
  4023     00E0  3F41               	moviw [1]fsr1
  4024     00E1  00DC               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  4025     00E2                     l4670:
  4026                           
  4027                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1419:   c = *cp;
  4028     00E2  085B               	movf	vfpfcnvrt@cp^(0+128),w
  4029     00E3  0084               	movwf	4
  4030     00E4  085C               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4031     00E5  0085               	movwf	5
  4032     00E6  0800               	movf	0,w	;code access
  4033     00E7  00DA               	movwf	vfpfcnvrt@c^(0+128)
  4034                           
  4035                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1420:   switch(c)
      +                           {
  4036     00E8  28F3               	goto	l4680
  4037     00E9                     l4672:
  4038                           
  4039                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1424:     cp++;
  4040     00E9  3001               	movlw	1
  4041     00EA  07DB               	addwf	vfpfcnvrt@cp^(0+128),f
  4042     00EB  3000               	movlw	0
  4043     00EC  3DDC               	addwfc	(vfpfcnvrt@cp+1)^(0+128),f
  4044                           
  4045                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1425:     break;
  4046     00ED  2906               	goto	l4682
  4047     00EE                     l4674:
  4048                           
  4049                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1450:     c = 'l'
      +                          ;
  4050     00EE  306C               	movlw	108
  4051     00EF  00DA               	movwf	vfpfcnvrt@c^(0+128)
  4052                           
  4053                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1451:     break;
  4054     00F0  2906               	goto	l4682
  4055     00F1                     l4676:
  4056                           
  4057                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1453:     c = 0;
  4058     00F1  01DA               	clrf	vfpfcnvrt@c^(0+128)
  4059                           
  4060                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1454:     break;
  4061     00F2  2906               	goto	l4682
  4062     00F3                     l4680:
  4063     00F3  085A               	movf	vfpfcnvrt@c^(0+128),w
  4064     00F4  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4065     00F5  01D2               	clrf	(??_vfpfcnvrt^(0+128)+1)
  4066                           
  4067                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4068                           ; Switch size 1, requested type "simple"
  4069                           ; Number of cases is 1, Range of values is 0 to 0
  4070                           ; switch strategies available:
  4071                           ; Name         Instructions Cycles
  4072                           ; simple_byte            4     3 (average)
  4073                           ; direct_byte            8     6 (fixed)
  4074                           ; jumptable            260     6 (fixed)
  4075                           ;	Chosen strategy is simple_byte
  4076     00F6  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4077     00F7  3A00               	xorlw	0	; case 0
  4078     00F8  1903               	skipnz
  4079     00F9  28FB               	goto	l5880
  4080     00FA  28F1               	goto	l4676
  4081     00FB                     l5880:
  4082                           
  4083                           ; Switch size 1, requested type "simple"
  4084                           ; Number of cases is 3, Range of values is 76 to 108
  4085                           ; switch strategies available:
  4086                           ; Name         Instructions Cycles
  4087                           ; simple_byte           10     6 (average)
  4088                           ; direct_byte           75     9 (fixed)
  4089                           ; jumptable            263     9 (fixed)
  4090                           ;	Chosen strategy is simple_byte
  4091     00FB  0851               	movf	??_vfpfcnvrt^(0+128),w
  4092     00FC  3A4C               	xorlw	76	; case 76
  4093     00FD  1903               	skipnz
  4094     00FE  28E9               	goto	l4672
  4095     00FF  3A2A               	xorlw	42	; case 102
  4096     0100  1903               	skipnz
  4097     0101  28EE               	goto	l4674
  4098     0102  3A0A               	xorlw	10	; case 108
  4099     0103  1903               	skipnz
  4100     0104  28E9               	goto	l4672
  4101     0105  28F1               	goto	l4676
  4102     0106                     l4682:
  4103     0106  085B               	movf	vfpfcnvrt@cp^(0+128),w
  4104     0107  0084               	movwf	4
  4105     0108  085C               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4106     0109  0085               	movwf	5
  4107     010A  0012               	moviw fsr0++
  4108     010B  3A66               	xorlw	102
  4109     010C  1D03               	btfss	3,2
  4110     010D  290F               	goto	u4891
  4111     010E  2910               	goto	u4890
  4112     010F                     u4891:
  4113     010F  2987               	goto	l4702
  4114     0110                     u4890:
  4115     0110  2939               	goto	l4690
  4116     0111                     l4684:
  4117                           
  4118                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1485:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4119     0111  0020               	movlb	0	; select bank0
  4120     0112  086E               	movf	vfpfcnvrt@ap,w
  4121     0113  0086               	movwf	6
  4122     0114  3001               	movlw	1	; select bank2/3
  4123     0115  0087               	movwf	7
  4124     0116  0801               	movf	1,w
  4125     0117  0084               	movwf	4
  4126     0118  0185               	clrf	5
  4127     0119  3004               	movlw	4
  4128     011A  0781               	addwf	1,f
  4129     011B  3F00               	moviw [0]fsr0
  4130     011C  0021               	movlb	1	; select bank1
  4131     011D  00D5               	movwf	vfpfcnvrt@convarg^(0+128)
  4132     011E  3F01               	moviw [1]fsr0
  4133     011F  00D6               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4134     0120  3F02               	moviw [2]fsr0
  4135     0121  00D7               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  4136     0122  3F03               	moviw [3]fsr0
  4137     0123  00D8               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
  4138                           
  4139                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1486:      break;
  4140     0124  2949               	goto	l4692
  4141     0125                     l4686:
  4142                           
  4143                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1488:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4144     0125  0020               	movlb	0	; select bank0
  4145     0126  086E               	movf	vfpfcnvrt@ap,w
  4146     0127  0086               	movwf	6
  4147     0128  3001               	movlw	1	; select bank2/3
  4148     0129  0087               	movwf	7
  4149     012A  0801               	movf	1,w
  4150     012B  0084               	movwf	4
  4151     012C  0185               	clrf	5
  4152     012D  3004               	movlw	4
  4153     012E  0781               	addwf	1,f
  4154     012F  3F00               	moviw [0]fsr0
  4155     0130  0021               	movlb	1	; select bank1
  4156     0131  00D5               	movwf	vfpfcnvrt@convarg^(0+128)
  4157     0132  3F01               	moviw [1]fsr0
  4158     0133  00D6               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4159     0134  3F02               	moviw [2]fsr0
  4160     0135  00D7               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  4161     0136  3F03               	moviw [3]fsr0
  4162     0137  00D8               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
  4163                           
  4164                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1489:      break;
  4165     0138  2949               	goto	l4692
  4166     0139                     l4690:
  4167     0139  085A               	movf	vfpfcnvrt@c^(0+128),w
  4168     013A  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4169     013B  01D2               	clrf	(??_vfpfcnvrt^(0+128)+1)
  4170                           
  4171                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4172                           ; Switch size 1, requested type "simple"
  4173                           ; Number of cases is 1, Range of values is 0 to 0
  4174                           ; switch strategies available:
  4175                           ; Name         Instructions Cycles
  4176                           ; simple_byte            4     3 (average)
  4177                           ; direct_byte            8     6 (fixed)
  4178                           ; jumptable            260     6 (fixed)
  4179                           ;	Chosen strategy is simple_byte
  4180     013C  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4181     013D  3A00               	xorlw	0	; case 0
  4182     013E  1903               	skipnz
  4183     013F  2941               	goto	l5882
  4184     0140  2949               	goto	l4692
  4185     0141                     l5882:
  4186                           
  4187                           ; Switch size 1, requested type "simple"
  4188                           ; Number of cases is 2, Range of values is 76 to 108
  4189                           ; switch strategies available:
  4190                           ; Name         Instructions Cycles
  4191                           ; simple_byte            7     4 (average)
  4192                           ; direct_byte           75     9 (fixed)
  4193                           ; jumptable            263     9 (fixed)
  4194                           ;	Chosen strategy is simple_byte
  4195     0141  0851               	movf	??_vfpfcnvrt^(0+128),w
  4196     0142  3A4C               	xorlw	76	; case 76
  4197     0143  1903               	skipnz
  4198     0144  2925               	goto	l4686
  4199     0145  3A20               	xorlw	32	; case 108
  4200     0146  1903               	skipnz
  4201     0147  2911               	goto	l4684
  4202     0148  2949               	goto	l4692
  4203     0149                     l4692:
  4204                           
  4205                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1491:    *fmt = c
      +                          p+1;
  4206     0149  085B               	movf	vfpfcnvrt@cp^(0+128),w
  4207     014A  3E01               	addlw	1
  4208     014B  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4209     014C  3000               	movlw	0
  4210     014D  3D5C               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  4211     014E  00D2               	movwf	(??_vfpfcnvrt+1)^(0+128)
  4212     014F  0020               	movlb	0	; select bank0
  4213     0150  086D               	movf	vfpfcnvrt@fmt,w
  4214     0151  0086               	movwf	6
  4215     0152  0187               	clrf	7
  4216     0153  0021               	movlb	1	; select bank1
  4217     0154  0851               	movf	??_vfpfcnvrt^(0+128),w
  4218     0155  3FC0               	movwi [0]fsr1
  4219     0156  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4220     0157  3FC1               	movwi [1]fsr1
  4221                           
  4222                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1492:    switch (
      +                          *cp) {
  4223     0158  2976               	goto	l4700
  4224     0159                     l4694:
  4225                           
  4226                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1519:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  4227     0159  0858               	movf	(vfpfcnvrt@convarg+3)^(0+128),w
  4228     015A  0020               	movlb	0	; select bank0
  4229     015B  00EB               	movwf	efgtoa@f+3
  4230     015C  0021               	movlb	1	; select bank1
  4231     015D  0857               	movf	(vfpfcnvrt@convarg+2)^(0+128),w
  4232     015E  0020               	movlb	0	; select bank0
  4233     015F  00EA               	movwf	efgtoa@f+2
  4234     0160  0021               	movlb	1	; select bank1
  4235     0161  0856               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  4236     0162  0020               	movlb	0	; select bank0
  4237     0163  00E9               	movwf	efgtoa@f+1
  4238     0164  0021               	movlb	1	; select bank1
  4239     0165  0855               	movf	vfpfcnvrt@convarg^(0+128),w
  4240     0166  0020               	movlb	0	; select bank0
  4241     0167  00E8               	movwf	efgtoa@f
  4242     0168  0021               	movlb	1	; select bank1
  4243     0169  085B               	movf	vfpfcnvrt@cp^(0+128),w
  4244     016A  0084               	movwf	4
  4245     016B  085C               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4246     016C  0085               	movwf	5
  4247     016D  0800               	movf	0,w	;code access
  4248     016E  0020               	movlb	0	; select bank0
  4249     016F  00EC               	movwf	efgtoa@c
  4250     0170  0021               	movlb	1	; select bank1
  4251     0171  0859               	movf	vfpfcnvrt@fp^(0+128),w
  4252     0172  3181  21AC  3180   	fcall	_efgtoa
  4253     0175  29AB               	goto	l1155
  4254     0176                     l4700:
  4255     0176  085B               	movf	vfpfcnvrt@cp^(0+128),w
  4256     0177  0084               	movwf	4
  4257     0178  085C               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4258     0179  0085               	movwf	5
  4259     017A  0800               	movf	0,w	;code access
  4260     017B  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4261     017C  01D2               	clrf	(??_vfpfcnvrt^(0+128)+1)
  4262                           
  4263                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4264                           ; Switch size 1, requested type "simple"
  4265                           ; Number of cases is 1, Range of values is 0 to 0
  4266                           ; switch strategies available:
  4267                           ; Name         Instructions Cycles
  4268                           ; simple_byte            4     3 (average)
  4269                           ; direct_byte            8     6 (fixed)
  4270                           ; jumptable            260     6 (fixed)
  4271                           ;	Chosen strategy is simple_byte
  4272     017D  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4273     017E  3A00               	xorlw	0	; case 0
  4274     017F  1903               	skipnz
  4275     0180  2982               	goto	l5884
  4276     0181  2987               	goto	l4702
  4277     0182                     l5884:
  4278                           
  4279                           ; Switch size 1, requested type "simple"
  4280                           ; Number of cases is 1, Range of values is 102 to 102
  4281                           ; switch strategies available:
  4282                           ; Name         Instructions Cycles
  4283                           ; simple_byte            4     3 (average)
  4284                           ; direct_byte           11     9 (fixed)
  4285                           ; jumptable            263     9 (fixed)
  4286                           ;	Chosen strategy is simple_byte
  4287     0182  0851               	movf	??_vfpfcnvrt^(0+128),w
  4288     0183  3A66               	xorlw	102	; case 102
  4289     0184  1903               	skipnz
  4290     0185  2959               	goto	l4694
  4291     0186  2987               	goto	l4702
  4292     0187                     l4702:
  4293                           
  4294                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  4295     0187  0020               	movlb	0	; select bank0
  4296     0188  086D               	movf	vfpfcnvrt@fmt,w
  4297     0189  0086               	movwf	6
  4298     018A  0187               	clrf	7
  4299     018B  3001               	movlw	1
  4300     018C  0781               	addwf	1,f
  4301     018D  3141               	addfsr 1,1
  4302     018E  1803               	skipnc
  4303     018F  0A81               	incf	1,f
  4304     0190  29AB               	goto	l1155
  4305     0191                     l4706:
  4306                           
  4307                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  4308     0191  0020               	movlb	0	; select bank0
  4309     0192  086D               	movf	vfpfcnvrt@fmt,w
  4310     0193  0086               	movwf	6
  4311     0194  0187               	clrf	7
  4312     0195  3F40               	moviw [0]fsr1
  4313     0196  0021               	movlb	1	; select bank1
  4314     0197  00D1               	movwf	??_vfpfcnvrt^(0+128)
  4315     0198  3F41               	moviw [1]fsr1
  4316     0199  00D2               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4317     019A  0851               	movf	??_vfpfcnvrt^(0+128),w
  4318     019B  0084               	movwf	4
  4319     019C  0852               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4320     019D  0085               	movwf	5
  4321     019E  0800               	movf	0,w	;code access
  4322     019F  00D3               	movwf	(??_vfpfcnvrt+2)^(0+128)
  4323     01A0  01D4               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  4324     01A1  0853               	movf	(??_vfpfcnvrt+2)^(0+128),w
  4325     01A2  00F0               	movwf	fputc@c
  4326     01A3  0854               	movf	(??_vfpfcnvrt+3)^(0+128),w
  4327     01A4  00F1               	movwf	fputc@c+1
  4328     01A5  0859               	movf	vfpfcnvrt@fp^(0+128),w
  4329     01A6  00F2               	movwf	fputc@fp
  4330     01A7  319C  2483  3180   	fcall	_fputc
  4331     01AA  2987               	goto	l4702
  4332     01AB                     l1155:
  4333     01AB  0008               	return
  4334     01AC                     __end_of_vfpfcnvrt:
  4335                           
  4336                           	psect	text8
  4337     000D                     __ptext8:	
  4338 ;; *************** function _read_prec_or_width *****************
  4339 ;; Defined at:
  4340 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  fmt             1    wreg     PTR PTR const unsigned c
  4343 ;;		 -> vfprintf@cfmt(2), 
  4344 ;;  ap              1    6[COMMON] PTR PTR void [1]
  4345 ;;		 -> sprintf@ap(1), 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  fmt             1    3[BANK0 ] PTR PTR const unsigned c
  4348 ;;		 -> vfprintf@cfmt(2), 
  4349 ;;  c               1    0[BANK0 ] unsigned char 
  4350 ;;  n               2    1[BANK0 ] int 
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  2    6[COMMON] int 
  4353 ;; Registers used:
  4354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4361 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4362 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4363 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4364 ;;Total ram usage:        9 bytes
  4365 ;; Hardware stack levels used: 1
  4366 ;; Hardware stack levels required when called: 1
  4367 ;; This function calls:
  4368 ;;		___wmul
  4369 ;; This function is called by:
  4370 ;;		_vfpfcnvrt
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374     000D                     _read_prec_or_width:	
  4375                           ;psect for function _read_prec_or_width
  4376                           
  4377                           
  4378                           ;incstack = 0
  4379                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4380                           ;read_prec_or_width@fmt stored from wreg
  4381     000D  0020               	movlb	0	; select bank0
  4382     000E  00A3               	movwf	read_prec_or_width@fmt
  4383     000F                     l4598:
  4384                           
  4385                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  4386     000F  01A1               	clrf	read_prec_or_width@n
  4387     0010  01A2               	clrf	read_prec_or_width@n+1
  4388     0011                     l4600:
  4389                           
  4390                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  4391     0011  0823               	movf	read_prec_or_width@fmt,w
  4392     0012  0086               	movwf	6
  4393     0013  0187               	clrf	7
  4394     0014  3F40               	moviw [0]fsr1
  4395     0015  00F8               	movwf	??_read_prec_or_width
  4396     0016  3F41               	moviw [1]fsr1
  4397     0017  00F9               	movwf	??_read_prec_or_width+1
  4398     0018  0878               	movf	??_read_prec_or_width,w
  4399     0019  0084               	movwf	4
  4400     001A  0879               	movf	??_read_prec_or_width+1,w
  4401     001B  0085               	movwf	5
  4402     001C  0012               	moviw fsr0++
  4403     001D  3A2A               	xorlw	42
  4404     001E  1D03               	btfss	3,2
  4405     001F  2821               	goto	u4791
  4406     0020  2822               	goto	u4790
  4407     0021                     u4791:
  4408     0021  2855               	goto	l4610
  4409     0022                     u4790:
  4410     0022                     l4602:
  4411                           
  4412                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  4413     0022  0823               	movf	read_prec_or_width@fmt,w
  4414     0023  0086               	movwf	6
  4415     0024  0187               	clrf	7
  4416     0025  3001               	movlw	1
  4417     0026  0781               	addwf	1,f
  4418     0027  3141               	addfsr 1,1
  4419     0028  1803               	skipnc
  4420     0029  0A81               	incf	1,f
  4421     002A                     l4604:
  4422                           
  4423                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  4424     002A  0876               	movf	read_prec_or_width@ap,w
  4425     002B  0086               	movwf	6
  4426     002C  3001               	movlw	1	; select bank2/3
  4427     002D  0087               	movwf	7
  4428     002E  0801               	movf	1,w
  4429     002F  0084               	movwf	4
  4430     0030  0185               	clrf	5
  4431     0031  3002               	movlw	2
  4432     0032  0781               	addwf	1,f
  4433     0033  3F00               	moviw [0]fsr0
  4434     0034  00A1               	movwf	read_prec_or_width@n
  4435     0035  3F01               	moviw [1]fsr0
  4436     0036  00A2               	movwf	read_prec_or_width@n+1
  4437                           
  4438                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  4439     0037  2869               	goto	l4612
  4440     0038                     l4606:
  4441                           
  4442                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  4443     0038  0820               	movf	read_prec_or_width@c,w
  4444     0039  00F8               	movwf	??_read_prec_or_width
  4445     003A  01F9               	clrf	??_read_prec_or_width+1
  4446     003B  0822               	movf	read_prec_or_width@n+1,w
  4447     003C  00F1               	movwf	___wmul@multiplier+1
  4448     003D  0821               	movf	read_prec_or_width@n,w
  4449     003E  00F0               	movwf	___wmul@multiplier
  4450     003F  300A               	movlw	10
  4451     0040  00F2               	movwf	___wmul@multiplicand
  4452     0041  3000               	movlw	0
  4453     0042  00F3               	movwf	___wmul@multiplicand+1
  4454     0043  319A  223B  3180   	fcall	___wmul
  4455     0046  0878               	movf	??_read_prec_or_width,w
  4456     0047  0770               	addwf	?___wmul,w
  4457     0048  0020               	movlb	0	; select bank0
  4458     0049  00A1               	movwf	read_prec_or_width@n
  4459     004A  0879               	movf	??_read_prec_or_width+1,w
  4460     004B  3D71               	addwfc	?___wmul+1,w
  4461     004C  00A2               	movwf	read_prec_or_width@n+1
  4462     004D                     l4608:
  4463                           
  4464                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  4465     004D  0823               	movf	read_prec_or_width@fmt,w
  4466     004E  0086               	movwf	6
  4467     004F  0187               	clrf	7
  4468     0050  3001               	movlw	1
  4469     0051  0781               	addwf	1,f
  4470     0052  3141               	addfsr 1,1
  4471     0053  1803               	skipnc
  4472     0054  0A81               	incf	1,f
  4473     0055                     l4610:
  4474                           
  4475                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  4476     0055  0823               	movf	read_prec_or_width@fmt,w
  4477     0056  0086               	movwf	6
  4478     0057  0187               	clrf	7
  4479     0058  3F40               	moviw [0]fsr1
  4480     0059  00F8               	movwf	??_read_prec_or_width
  4481     005A  3F41               	moviw [1]fsr1
  4482     005B  00F9               	movwf	??_read_prec_or_width+1
  4483     005C  0878               	movf	??_read_prec_or_width,w
  4484     005D  0084               	movwf	4
  4485     005E  0879               	movf	??_read_prec_or_width+1,w
  4486     005F  0085               	movwf	5
  4487     0060  0800               	movf	0,w	;code access
  4488     0061  3ED0               	addlw	208
  4489     0062  00A0               	movwf	read_prec_or_width@c
  4490     0063  300A               	movlw	10
  4491     0064  0220               	subwf	read_prec_or_width@c,w
  4492     0065  1C03               	skipc
  4493     0066  2868               	goto	u4801
  4494     0067  2869               	goto	u4800
  4495     0068                     u4801:
  4496     0068  2838               	goto	l4606
  4497     0069                     u4800:
  4498     0069                     l4612:
  4499                           
  4500                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  4501     0069  0822               	movf	read_prec_or_width@n+1,w
  4502     006A  00F7               	movwf	?_read_prec_or_width+1
  4503     006B  0821               	movf	read_prec_or_width@n,w
  4504     006C  00F6               	movwf	?_read_prec_or_width
  4505     006D                     l1134:
  4506     006D  0008               	return
  4507     006E                     __end_of_read_prec_or_width:
  4508                           
  4509                           	psect	text9
  4510     1A3B                     __ptext9:	
  4511 ;; *************** function ___wmul *****************
  4512 ;; Defined at:
  4513 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;  multiplier      2    0[COMMON] unsigned int 
  4516 ;;  multiplicand    2    2[COMMON] unsigned int 
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;  product         2    4[COMMON] unsigned int 
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  2    0[COMMON] unsigned int 
  4521 ;; Registers used:
  4522 ;;		wreg, status,2, status,0
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4528 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4529 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4531 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4532 ;;Total ram usage:        6 bytes
  4533 ;; Hardware stack levels used: 1
  4534 ;; This function calls:
  4535 ;;		Nothing
  4536 ;; This function is called by:
  4537 ;;		_read_prec_or_width
  4538 ;; This function uses a non-reentrant model
  4539 ;;
  4540                           
  4541     1A3B                     ___wmul:	
  4542                           ;psect for function ___wmul
  4543                           
  4544     1A3B                     l3912:	
  4545                           ;incstack = 0
  4546                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4547                           
  4548     1A3B  01F4               	clrf	___wmul@product
  4549     1A3C  01F5               	clrf	___wmul@product+1
  4550     1A3D                     l3914:
  4551     1A3D  1C70               	btfss	___wmul@multiplier,0
  4552     1A3E  2A40               	goto	u3391
  4553     1A3F  2A41               	goto	u3390
  4554     1A40                     u3391:
  4555     1A40  2A45               	goto	l575
  4556     1A41                     u3390:
  4557     1A41                     l3916:
  4558     1A41  0872               	movf	___wmul@multiplicand,w
  4559     1A42  07F4               	addwf	___wmul@product,f
  4560     1A43  0873               	movf	___wmul@multiplicand+1,w
  4561     1A44  3DF5               	addwfc	___wmul@product+1,f
  4562     1A45                     l575:
  4563     1A45  3001               	movlw	1
  4564     1A46                     u3405:
  4565     1A46  35F2               	lslf	___wmul@multiplicand,f
  4566     1A47  0DF3               	rlf	___wmul@multiplicand+1,f
  4567     1A48  0B89               	decfsz	9,f
  4568     1A49  2A46               	goto	u3405
  4569     1A4A                     l3918:
  4570     1A4A  3001               	movlw	1
  4571     1A4B                     u3415:
  4572     1A4B  36F1               	lsrf	___wmul@multiplier+1,f
  4573     1A4C  0CF0               	rrf	___wmul@multiplier,f
  4574     1A4D  0B89               	decfsz	9,f
  4575     1A4E  2A4B               	goto	u3415
  4576     1A4F                     l3920:
  4577     1A4F  0870               	movf	___wmul@multiplier,w
  4578     1A50  0471               	iorwf	___wmul@multiplier+1,w
  4579     1A51  1D03               	btfss	3,2
  4580     1A52  2A54               	goto	u3421
  4581     1A53  2A55               	goto	u3420
  4582     1A54                     u3421:
  4583     1A54  2A3D               	goto	l3914
  4584     1A55                     u3420:
  4585     1A55                     l3922:
  4586     1A55  0875               	movf	___wmul@product+1,w
  4587     1A56  00F1               	movwf	?___wmul+1
  4588     1A57  0874               	movf	___wmul@product,w
  4589     1A58  00F0               	movwf	?___wmul
  4590     1A59                     l577:
  4591     1A59  0008               	return
  4592     1A5A                     __end_of___wmul:
  4593                           
  4594                           	psect	text10
  4595     01AC                     __ptext10:	
  4596 ;; *************** function _efgtoa *****************
  4597 ;; Defined at:
  4598 ;;		line 531 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  fp              1    wreg     PTR struct _IO_FILE
  4601 ;;		 -> sprintf@f(11), 
  4602 ;;  f               4   72[BANK0 ] PTR struct _IO_FILE
  4603 ;;  c               1   76[BANK0 ] unsigned char 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;  fp              1   19[BANK1 ] PTR struct _IO_FILE
  4606 ;;		 -> sprintf@f(11), 
  4607 ;;  u               4   45[BANK1 ] struct flui
  4608 ;;  g               4   41[BANK1 ] struct flui
  4609 ;;  l               4   34[BANK1 ] struct flui
  4610 ;;  h               4   30[BANK1 ] struct flui
  4611 ;;  ou              4   24[BANK1 ] struct flui
  4612 ;;  n               2   39[BANK1 ] int 
  4613 ;;  i               2   28[BANK1 ] int 
  4614 ;;  w               2   22[BANK1 ] int 
  4615 ;;  e               2   20[BANK1 ] int 
  4616 ;;  m               2   17[BANK1 ] int 
  4617 ;;  d               2   15[BANK1 ] int 
  4618 ;;  t               2    8[BANK1 ] int 
  4619 ;;  p               2    6[BANK1 ] int 
  4620 ;;  ne              2    4[BANK1 ] int 
  4621 ;;  sign            1   38[BANK1 ] unsigned char 
  4622 ;;  nmode           1   14[BANK1 ] unsigned char 
  4623 ;;  mode            1   13[BANK1 ] unsigned char 
  4624 ;;  pp              1   12[BANK1 ] unsigned char 
  4625 ;;  esign           1    0        unsigned char 
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  1    wreg      void 
  4628 ;; Registers used:
  4629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4635 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4636 ;;      Locals:         0       0      45       0       0       0       0       0       0       0       0       0       
      +0       0
  4637 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4638 ;;      Totals:         0       5      49       0       0       0       0       0       0       0       0       0       
      +0       0
  4639 ;;Total ram usage:       54 bytes
  4640 ;; Hardware stack levels used: 1
  4641 ;; Hardware stack levels required when called: 4
  4642 ;; This function calls:
  4643 ;;		___fladd
  4644 ;;		___fldiv
  4645 ;;		___fleq
  4646 ;;		___flge
  4647 ;;		___flmul
  4648 ;;		___flneg
  4649 ;;		___flsub
  4650 ;;		___fltol
  4651 ;;		___fpclassifyf
  4652 ;;		_floorf
  4653 ;;		_labs
  4654 ;;		_memcpy
  4655 ;;		_pad
  4656 ;;		_strcpy
  4657 ;; This function is called by:
  4658 ;;		_vfpfcnvrt
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662     01AC                     _efgtoa:	
  4663                           ;psect for function _efgtoa
  4664                           
  4665                           
  4666                           ;incstack = 0
  4667                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4668                           ;efgtoa@fp stored from wreg
  4669     01AC  0021               	movlb	1	; select bank1
  4670     01AD  00B3               	movwf	efgtoa@fp^(0+128)
  4671     01AE                     l4396:
  4672                           
  4673                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 531: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.41\pic\sources
      +                          \c99\common\doprnt.c: 532: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 533:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .41\pic\sources\c99\common\doprnt.c: 534:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 535:     long double h, l;
  4674     01AE  01C6               	clrf	efgtoa@sign^(0+128)
  4675     01AF                     l4398:
  4676                           
  4677                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 540:     g.f = f;
  4678     01AF  0020               	movlb	0	; select bank0
  4679     01B0  086B               	movf	efgtoa@f+3,w
  4680     01B1  0021               	movlb	1	; select bank1
  4681     01B2  00CC               	movwf	(efgtoa@g+3)^(0+128)
  4682     01B3  0020               	movlb	0	; select bank0
  4683     01B4  086A               	movf	efgtoa@f+2,w
  4684     01B5  0021               	movlb	1	; select bank1
  4685     01B6  00CB               	movwf	(efgtoa@g+2)^(0+128)
  4686     01B7  0020               	movlb	0	; select bank0
  4687     01B8  0869               	movf	efgtoa@f+1,w
  4688     01B9  0021               	movlb	1	; select bank1
  4689     01BA  00CA               	movwf	(efgtoa@g+1)^(0+128)
  4690     01BB  0020               	movlb	0	; select bank0
  4691     01BC  0868               	movf	efgtoa@f,w
  4692     01BD  0021               	movlb	1	; select bank1
  4693     01BE  00C9               	movwf	efgtoa@g^(0+128)
  4694     01BF                     l4400:
  4695                           
  4696                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 541:     if (g.f 
      +                          < 0.0) {
  4697     01BF  084C               	movf	(efgtoa@g+3)^(0+128),w
  4698     01C0  0020               	movlb	0	; select bank0
  4699     01C1  00BD               	movwf	___flge@ff1+3
  4700     01C2  0021               	movlb	1	; select bank1
  4701     01C3  084B               	movf	(efgtoa@g+2)^(0+128),w
  4702     01C4  0020               	movlb	0	; select bank0
  4703     01C5  00BC               	movwf	___flge@ff1+2
  4704     01C6  0021               	movlb	1	; select bank1
  4705     01C7  084A               	movf	(efgtoa@g+1)^(0+128),w
  4706     01C8  0020               	movlb	0	; select bank0
  4707     01C9  00BB               	movwf	___flge@ff1+1
  4708     01CA  0021               	movlb	1	; select bank1
  4709     01CB  0849               	movf	efgtoa@g^(0+128),w
  4710     01CC  0020               	movlb	0	; select bank0
  4711     01CD  00BA               	movwf	___flge@ff1
  4712     01CE  3000               	movlw	0
  4713     01CF  00C1               	movwf	___flge@ff2+3
  4714     01D0  3000               	movlw	0
  4715     01D1  00C0               	movwf	___flge@ff2+2
  4716     01D2  3000               	movlw	0
  4717     01D3  00BF               	movwf	___flge@ff2+1
  4718     01D4  3000               	movlw	0
  4719     01D5  00BE               	movwf	___flge@ff2
  4720     01D6  3190  2045  3181   	fcall	___flge
  4721     01D9  1803               	btfsc	3,0
  4722     01DA  29DC               	goto	u4471
  4723     01DB  29DD               	goto	u4470
  4724     01DC                     u4471:
  4725     01DC  29F4               	goto	l4406
  4726     01DD                     u4470:
  4727     01DD                     l4402:
  4728                           
  4729                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 542:         sign
      +                           = 1;
  4730     01DD  0021               	movlb	1	; select bank1
  4731     01DE  01C6               	clrf	efgtoa@sign^(0+128)
  4732     01DF  0AC6               	incf	efgtoa@sign^(0+128),f
  4733     01E0                     l4404:
  4734                           
  4735                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 543:         g.f 
      +                          = -g.f;
  4736     01E0  084C               	movf	(efgtoa@g+3)^(0+128),w
  4737     01E1  00F3               	movwf	___flneg@f1+3
  4738     01E2  084B               	movf	(efgtoa@g+2)^(0+128),w
  4739     01E3  00F2               	movwf	___flneg@f1+2
  4740     01E4  084A               	movf	(efgtoa@g+1)^(0+128),w
  4741     01E5  00F1               	movwf	___flneg@f1+1
  4742     01E6  0849               	movf	efgtoa@g^(0+128),w
  4743     01E7  00F0               	movwf	___flneg@f1
  4744     01E8  3199  218C  3181   	fcall	___flneg
  4745     01EB  0873               	movf	?___flneg+3,w
  4746     01EC  0021               	movlb	1	; select bank1
  4747     01ED  00CC               	movwf	(efgtoa@g+3)^(0+128)
  4748     01EE  0872               	movf	?___flneg+2,w
  4749     01EF  00CB               	movwf	(efgtoa@g+2)^(0+128)
  4750     01F0  0871               	movf	?___flneg+1,w
  4751     01F1  00CA               	movwf	(efgtoa@g+1)^(0+128)
  4752     01F2  0870               	movf	?___flneg,w
  4753     01F3  00C9               	movwf	efgtoa@g^(0+128)
  4754     01F4                     l4406:
  4755                           
  4756                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 547:     n = 0;
  4757     01F4  0021               	movlb	1	; select bank1
  4758     01F5  01C7               	clrf	efgtoa@n^(0+128)
  4759     01F6  01C8               	clrf	(efgtoa@n+1)^(0+128)
  4760     01F7                     l4408:
  4761                           
  4762                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 548:     w = widt
      +                          h;
  4763     01F7  0022               	movlb	2	; select bank2
  4764     01F8  0831               	movf	(_width+1)^(0+256),w
  4765     01F9  0021               	movlb	1	; select bank1
  4766     01FA  00B7               	movwf	(efgtoa@w+1)^(0+128)
  4767     01FB  0022               	movlb	2	; select bank2
  4768     01FC  0830               	movf	_width^(0+256),w
  4769     01FD  0021               	movlb	1	; select bank1
  4770     01FE  00B6               	movwf	efgtoa@w^(0+128)
  4771     01FF                     l4410:
  4772                           
  4773                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 549:     if (sign
  4774     01FF  0846               	movf	efgtoa@sign^(0+128),w
  4775     0200  1903               	btfsc	3,2
  4776     0201  2A03               	goto	u4481
  4777     0202  2A04               	goto	u4480
  4778     0203                     u4481:
  4779     0203  2A14               	goto	l4418
  4780     0204                     u4480:
  4781     0204                     l4412:
  4782                           
  4783                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 553:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 554:   sign = sign ? '-
      +                          ' : '+';
  4784     0204  0846               	movf	efgtoa@sign^(0+128),w
  4785     0205  1D03               	btfss	3,2
  4786     0206  2A08               	goto	u4491
  4787     0207  2A09               	goto	u4490
  4788     0208                     u4491:
  4789     0208  2A0E               	goto	l4416
  4790     0209                     u4490:
  4791     0209                     l4414:
  4792     0209  302B               	movlw	43
  4793     020A  00AA               	movwf	_efgtoa$1158^(0+128)
  4794     020B  3000               	movlw	0
  4795     020C  00AB               	movwf	(_efgtoa$1158^(0+128)+1)
  4796     020D  2A12               	goto	l1082
  4797     020E                     l4416:
  4798     020E  302D               	movlw	45
  4799     020F  00AA               	movwf	_efgtoa$1158^(0+128)
  4800     0210  3000               	movlw	0
  4801     0211  00AB               	movwf	(_efgtoa$1158^(0+128)+1)
  4802     0212                     l1082:
  4803     0212  082A               	movf	_efgtoa$1158^(0+128),w
  4804     0213  00C6               	movwf	efgtoa@sign^(0+128)
  4805     0214                     l4418:
  4806                           
  4807                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 563:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  4808     0214  084C               	movf	(efgtoa@g+3)^(0+128),w
  4809     0215  00F3               	movwf	___fpclassifyf@x+3
  4810     0216  084B               	movf	(efgtoa@g+2)^(0+128),w
  4811     0217  00F2               	movwf	___fpclassifyf@x+2
  4812     0218  084A               	movf	(efgtoa@g+1)^(0+128),w
  4813     0219  00F1               	movwf	___fpclassifyf@x+1
  4814     021A  0849               	movf	efgtoa@g^(0+128),w
  4815     021B  00F0               	movwf	___fpclassifyf@x
  4816     021C  319D  25A9  3181   	fcall	___fpclassifyf
  4817     021F  0370               	decf	?___fpclassifyf,w
  4818     0220  0471               	iorwf	?___fpclassifyf+1,w
  4819     0221  1D03               	btfss	3,2
  4820     0222  2A24               	goto	u4501
  4821     0223  2A25               	goto	u4500
  4822     0224                     u4501:
  4823     0224  2A50               	goto	l4430
  4824     0225                     u4500:
  4825     0225                     l4420:
  4826                           
  4827                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 564:   if (sign) 
      +                          {
  4828     0225  0021               	movlb	1	; select bank1
  4829     0226  0846               	movf	efgtoa@sign^(0+128),w
  4830     0227  1903               	btfsc	3,2
  4831     0228  2A2A               	goto	u4511
  4832     0229  2A2B               	goto	u4510
  4833     022A                     u4511:
  4834     022A  2A37               	goto	l4424
  4835     022B                     u4510:
  4836     022B                     l4422:
  4837                           
  4838                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 565:    dbuf[0] =
      +                           sign;
  4839     022B  0846               	movf	efgtoa@sign^(0+128),w
  4840     022C  0023               	movlb	3	; select bank3
  4841     022D  00A0               	movwf	_dbuf^(0+384)
  4842                           
  4843                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 566:    w--;
  4844     022E  30FF               	movlw	255
  4845     022F  0021               	movlb	1	; select bank1
  4846     0230  07B6               	addwf	efgtoa@w^(0+128),f
  4847     0231  30FF               	movlw	255
  4848     0232  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  4849                           
  4850                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 567:    n = 1;
  4851     0233  3001               	movlw	1
  4852     0234  00C7               	movwf	efgtoa@n^(0+128)
  4853     0235  3000               	movlw	0
  4854     0236  00C8               	movwf	(efgtoa@n^(0+128)+1)
  4855     0237                     l4424:
  4856                           
  4857                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 575:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 576:             strcpy(&d
      +                          buf[n], "inf");
  4858     0237  30D0               	movlw	low (STR_37| (0+32768))
  4859     0238  00F0               	movwf	strcpy@src
  4860     0239  30A1               	movlw	high (STR_37| (0+32768))
  4861     023A  00F1               	movwf	strcpy@src+1
  4862     023B  0847               	movf	efgtoa@n^(0+128),w
  4863     023C  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4864     023D  319A  221C  3181   	fcall	_strcpy
  4865     0240                     l4426:
  4866                           
  4867                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 577:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 578:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  4868     0240  30FD               	movlw	253
  4869     0241  0021               	movlb	1	; select bank1
  4870     0242  07B6               	addwf	efgtoa@w^(0+128),f
  4871     0243  30FF               	movlw	255
  4872     0244  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  4873                           
  4874                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 579:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  4875     0245  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  4876     0246  00FB               	movwf	pad@buf
  4877     0247  0837               	movf	(efgtoa@w+1)^(0+128),w
  4878     0248  00FD               	movwf	pad@p+1
  4879     0249  0836               	movf	efgtoa@w^(0+128),w
  4880     024A  00FC               	movwf	pad@p
  4881     024B  0833               	movf	efgtoa@fp^(0+128),w
  4882     024C  319B  239D  3181   	fcall	_pad
  4883     024F  2FDA               	goto	l1085
  4884     0250                     l4430:
  4885                           
  4886                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 581:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  4887     0250  0021               	movlb	1	; select bank1
  4888     0251  084C               	movf	(efgtoa@g+3)^(0+128),w
  4889     0252  00F3               	movwf	___fpclassifyf@x+3
  4890     0253  084B               	movf	(efgtoa@g+2)^(0+128),w
  4891     0254  00F2               	movwf	___fpclassifyf@x+2
  4892     0255  084A               	movf	(efgtoa@g+1)^(0+128),w
  4893     0256  00F1               	movwf	___fpclassifyf@x+1
  4894     0257  0849               	movf	efgtoa@g^(0+128),w
  4895     0258  00F0               	movwf	___fpclassifyf@x
  4896     0259  319D  25A9  3181   	fcall	___fpclassifyf
  4897     025C  0870               	movf	?___fpclassifyf,w
  4898     025D  0471               	iorwf	?___fpclassifyf+1,w
  4899     025E  1D03               	btfss	3,2
  4900     025F  2A61               	goto	u4521
  4901     0260  2A62               	goto	u4520
  4902     0261                     u4521:
  4903     0261  2A8D               	goto	l4442
  4904     0262                     u4520:
  4905     0262                     l4432:
  4906                           
  4907                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 582:   if (sign) 
      +                          {
  4908     0262  0021               	movlb	1	; select bank1
  4909     0263  0846               	movf	efgtoa@sign^(0+128),w
  4910     0264  1903               	btfsc	3,2
  4911     0265  2A67               	goto	u4531
  4912     0266  2A68               	goto	u4530
  4913     0267                     u4531:
  4914     0267  2A74               	goto	l4436
  4915     0268                     u4530:
  4916     0268                     l4434:
  4917                           
  4918                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 583:    dbuf[0] =
      +                           sign;
  4919     0268  0846               	movf	efgtoa@sign^(0+128),w
  4920     0269  0023               	movlb	3	; select bank3
  4921     026A  00A0               	movwf	_dbuf^(0+384)
  4922                           
  4923                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 584:    w--;
  4924     026B  30FF               	movlw	255
  4925     026C  0021               	movlb	1	; select bank1
  4926     026D  07B6               	addwf	efgtoa@w^(0+128),f
  4927     026E  30FF               	movlw	255
  4928     026F  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  4929                           
  4930                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 585:    n = 1;
  4931     0270  3001               	movlw	1
  4932     0271  00C7               	movwf	efgtoa@n^(0+128)
  4933     0272  3000               	movlw	0
  4934     0273  00C8               	movwf	(efgtoa@n^(0+128)+1)
  4935     0274                     l4436:
  4936                           
  4937                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 593:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 594:             strcpy(&d
      +                          buf[n], "nan");
  4938     0274  30D4               	movlw	low (STR_40| (0+32768))
  4939     0275  00F0               	movwf	strcpy@src
  4940     0276  30A1               	movlw	high (STR_40| (0+32768))
  4941     0277  00F1               	movwf	strcpy@src+1
  4942     0278  0847               	movf	efgtoa@n^(0+128),w
  4943     0279  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4944     027A  319A  221C  3181   	fcall	_strcpy
  4945     027D                     l4438:
  4946                           
  4947                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 595:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 596:         w -= ((
      +                          sizeof("nan")/sizeof("nan"[0]))-1);
  4948     027D  30FD               	movlw	253
  4949     027E  0021               	movlb	1	; select bank1
  4950     027F  07B6               	addwf	efgtoa@w^(0+128),f
  4951     0280  30FF               	movlw	255
  4952     0281  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  4953                           
  4954                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 597:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  4955     0282  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  4956     0283  00FB               	movwf	pad@buf
  4957     0284  0837               	movf	(efgtoa@w+1)^(0+128),w
  4958     0285  00FD               	movwf	pad@p+1
  4959     0286  0836               	movf	efgtoa@w^(0+128),w
  4960     0287  00FC               	movwf	pad@p
  4961     0288  0833               	movf	efgtoa@fp^(0+128),w
  4962     0289  319B  239D  3181   	fcall	_pad
  4963     028C  2FDA               	goto	l1085
  4964     028D                     l4442:
  4965                           
  4966                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 601:     u.f = 1.
      +                          0;
  4967     028D  303F               	movlw	63
  4968     028E  0021               	movlb	1	; select bank1
  4969     028F  00D0               	movwf	(efgtoa@u+3)^(0+128)
  4970     0290  3080               	movlw	128
  4971     0291  00CF               	movwf	(efgtoa@u+2)^(0+128)
  4972     0292  3000               	movlw	0
  4973     0293  00CE               	movwf	(efgtoa@u+1)^(0+128)
  4974     0294  3000               	movlw	0
  4975     0295  00CD               	movwf	efgtoa@u^(0+128)
  4976     0296                     l4444:
  4977                           
  4978                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 602:     e = 0;
  4979     0296  01B4               	clrf	efgtoa@e^(0+128)
  4980     0297  01B5               	clrf	(efgtoa@e+1)^(0+128)
  4981     0298                     l4446:
  4982                           
  4983                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 603:  if (!(g.f =
      +                          = 0.0)) {
  4984     0298  084C               	movf	(efgtoa@g+3)^(0+128),w
  4985     0299  00F3               	movwf	___fleq@ff1+3
  4986     029A  084B               	movf	(efgtoa@g+2)^(0+128),w
  4987     029B  00F2               	movwf	___fleq@ff1+2
  4988     029C  084A               	movf	(efgtoa@g+1)^(0+128),w
  4989     029D  00F1               	movwf	___fleq@ff1+1
  4990     029E  0849               	movf	efgtoa@g^(0+128),w
  4991     029F  00F0               	movwf	___fleq@ff1
  4992     02A0  3000               	movlw	0
  4993     02A1  00F7               	movwf	___fleq@ff2+3
  4994     02A2  3000               	movlw	0
  4995     02A3  00F6               	movwf	___fleq@ff2+2
  4996     02A4  3000               	movlw	0
  4997     02A5  00F5               	movwf	___fleq@ff2+1
  4998     02A6  3000               	movlw	0
  4999     02A7  00F4               	movwf	___fleq@ff2
  5000     02A8  319B  23E5  3181   	fcall	___fleq
  5001     02AB  1803               	btfsc	3,0
  5002     02AC  2AAE               	goto	u4541
  5003     02AD  2AAF               	goto	u4540
  5004     02AE                     u4541:
  5005     02AE  2BEB               	goto	l4472
  5006     02AF                     u4540:
  5007     02AF  2ABD               	goto	l4452
  5008     02B0                     l4450:
  5009                           
  5010                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 605:    u = ou;
  5011     02B0  0021               	movlb	1	; select bank1
  5012     02B1  083B               	movf	(efgtoa@ou+3)^(0+128),w
  5013     02B2  00D0               	movwf	(efgtoa@u+3)^(0+128)
  5014     02B3  083A               	movf	(efgtoa@ou+2)^(0+128),w
  5015     02B4  00CF               	movwf	(efgtoa@u+2)^(0+128)
  5016     02B5  0839               	movf	(efgtoa@ou+1)^(0+128),w
  5017     02B6  00CE               	movwf	(efgtoa@u+1)^(0+128)
  5018     02B7  0838               	movf	efgtoa@ou^(0+128),w
  5019     02B8  00CD               	movwf	efgtoa@u^(0+128)
  5020                           
  5021                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 606:    ++e;
  5022     02B9  3001               	movlw	1
  5023     02BA  07B4               	addwf	efgtoa@e^(0+128),f
  5024     02BB  3000               	movlw	0
  5025     02BC  3DB5               	addwfc	(efgtoa@e+1)^(0+128),f
  5026     02BD                     l4452:
  5027                           
  5028                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 604:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  5029     02BD  3041               	movlw	65
  5030     02BE  0020               	movlb	0	; select bank0
  5031     02BF  00A3               	movwf	___flmul@b+3
  5032     02C0  3020               	movlw	32
  5033     02C1  00A2               	movwf	___flmul@b+2
  5034     02C2  3000               	movlw	0
  5035     02C3  00A1               	movwf	___flmul@b+1
  5036     02C4  3000               	movlw	0
  5037     02C5  00A0               	movwf	___flmul@b
  5038     02C6  0021               	movlb	1	; select bank1
  5039     02C7  0850               	movf	(efgtoa@u+3)^(0+128),w
  5040     02C8  0020               	movlb	0	; select bank0
  5041     02C9  00A7               	movwf	___flmul@a+3
  5042     02CA  0021               	movlb	1	; select bank1
  5043     02CB  084F               	movf	(efgtoa@u+2)^(0+128),w
  5044     02CC  0020               	movlb	0	; select bank0
  5045     02CD  00A6               	movwf	___flmul@a+2
  5046     02CE  0021               	movlb	1	; select bank1
  5047     02CF  084E               	movf	(efgtoa@u+1)^(0+128),w
  5048     02D0  0020               	movlb	0	; select bank0
  5049     02D1  00A5               	movwf	___flmul@a+1
  5050     02D2  0021               	movlb	1	; select bank1
  5051     02D3  084D               	movf	efgtoa@u^(0+128),w
  5052     02D4  0020               	movlb	0	; select bank0
  5053     02D5  00A4               	movwf	___flmul@a
  5054     02D6  318D  25C5  3181   	fcall	___flmul
  5055     02D9  0020               	movlb	0	; select bank0
  5056     02DA  0823               	movf	?___flmul+3,w
  5057     02DB  0021               	movlb	1	; select bank1
  5058     02DC  00BB               	movwf	(efgtoa@ou+3)^(0+128)
  5059     02DD  0020               	movlb	0	; select bank0
  5060     02DE  0822               	movf	?___flmul+2,w
  5061     02DF  0021               	movlb	1	; select bank1
  5062     02E0  00BA               	movwf	(efgtoa@ou+2)^(0+128)
  5063     02E1  0020               	movlb	0	; select bank0
  5064     02E2  0821               	movf	?___flmul+1,w
  5065     02E3  0021               	movlb	1	; select bank1
  5066     02E4  00B9               	movwf	(efgtoa@ou+1)^(0+128)
  5067     02E5  0020               	movlb	0	; select bank0
  5068     02E6  0820               	movf	?___flmul,w
  5069     02E7  0021               	movlb	1	; select bank1
  5070     02E8  00B8               	movwf	efgtoa@ou^(0+128)
  5071     02E9                     l4454:
  5072     02E9  0838               	movf	efgtoa@ou^(0+128),w
  5073     02EA  0249               	subwf	efgtoa@g^(0+128),w
  5074     02EB  00A0               	movwf	??_efgtoa^(0+128)
  5075     02EC  0839               	movf	(efgtoa@ou+1)^(0+128),w
  5076     02ED  3B4A               	subwfb	(efgtoa@g+1)^(0+128),w
  5077     02EE  00A1               	movwf	(??_efgtoa^(0+128)+1)
  5078     02EF  083A               	movf	(efgtoa@ou+2)^(0+128),w
  5079     02F0  3B4B               	subwfb	(efgtoa@g+2)^(0+128),w
  5080     02F1  00A2               	movwf	(??_efgtoa^(0+128)+2)
  5081     02F2  083B               	movf	(efgtoa@ou+3)^(0+128),w
  5082     02F3  3B4C               	subwfb	(efgtoa@g+3)^(0+128),w
  5083     02F4  00A3               	movwf	(??_efgtoa^(0+128)+3)
  5084     02F5  0823               	movf	(??_efgtoa+3)^(0+128),w
  5085     02F6  00F3               	movwf	labs@a+3
  5086     02F7  0822               	movf	(??_efgtoa+2)^(0+128),w
  5087     02F8  00F2               	movwf	labs@a+2
  5088     02F9  0821               	movf	(??_efgtoa+1)^(0+128),w
  5089     02FA  00F1               	movwf	labs@a+1
  5090     02FB  0820               	movf	??_efgtoa^(0+128),w
  5091     02FC  00F0               	movwf	labs@a
  5092     02FD  319A  22BA  3181   	fcall	_labs
  5093     0300  1BF3               	btfsc	?_labs+3,7
  5094     0301  2B10               	goto	u4551
  5095     0302  0873               	movf	?_labs+3,w
  5096     0303  1D03               	btfss	3,2
  5097     0304  2B11               	goto	u4550
  5098     0305  0872               	movf	?_labs+2,w
  5099     0306  1D03               	btfss	3,2
  5100     0307  2B11               	goto	u4550
  5101     0308  0871               	movf	?_labs+1,w
  5102     0309  1D03               	btfss	3,2
  5103     030A  2B11               	goto	u4550
  5104     030B  3002               	movlw	2
  5105     030C  0270               	subwf	?_labs,w
  5106     030D  1C03               	btfss	3,0
  5107     030E  2B10               	goto	u4551
  5108     030F  2B11               	goto	u4550
  5109     0310                     u4551:
  5110     0310  2AB0               	goto	l4450
  5111     0311                     u4550:
  5112     0311                     l4456:
  5113     0311  0021               	movlb	1	; select bank1
  5114     0312  083B               	movf	(efgtoa@ou+3)^(0+128),w
  5115     0313  0020               	movlb	0	; select bank0
  5116     0314  00BD               	movwf	___flge@ff1+3
  5117     0315  0021               	movlb	1	; select bank1
  5118     0316  083A               	movf	(efgtoa@ou+2)^(0+128),w
  5119     0317  0020               	movlb	0	; select bank0
  5120     0318  00BC               	movwf	___flge@ff1+2
  5121     0319  0021               	movlb	1	; select bank1
  5122     031A  0839               	movf	(efgtoa@ou+1)^(0+128),w
  5123     031B  0020               	movlb	0	; select bank0
  5124     031C  00BB               	movwf	___flge@ff1+1
  5125     031D  0021               	movlb	1	; select bank1
  5126     031E  0838               	movf	efgtoa@ou^(0+128),w
  5127     031F  0020               	movlb	0	; select bank0
  5128     0320  00BA               	movwf	___flge@ff1
  5129     0321  0021               	movlb	1	; select bank1
  5130     0322  084C               	movf	(efgtoa@g+3)^(0+128),w
  5131     0323  0020               	movlb	0	; select bank0
  5132     0324  00C1               	movwf	___flge@ff2+3
  5133     0325  0021               	movlb	1	; select bank1
  5134     0326  084B               	movf	(efgtoa@g+2)^(0+128),w
  5135     0327  0020               	movlb	0	; select bank0
  5136     0328  00C0               	movwf	___flge@ff2+2
  5137     0329  0021               	movlb	1	; select bank1
  5138     032A  084A               	movf	(efgtoa@g+1)^(0+128),w
  5139     032B  0020               	movlb	0	; select bank0
  5140     032C  00BF               	movwf	___flge@ff2+1
  5141     032D  0021               	movlb	1	; select bank1
  5142     032E  0849               	movf	efgtoa@g^(0+128),w
  5143     032F  0020               	movlb	0	; select bank0
  5144     0330  00BE               	movwf	___flge@ff2
  5145     0331  3190  2045  3181   	fcall	___flge
  5146     0334  1C03               	btfss	3,0
  5147     0335  2B37               	goto	u4561
  5148     0336  2B38               	goto	u4560
  5149     0337                     u4561:
  5150     0337  2AB0               	goto	l4450
  5151     0338                     u4560:
  5152     0338                     l4458:
  5153                           
  5154                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 608:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  5155     0338  0021               	movlb	1	; select bank1
  5156     0339  084D               	movf	efgtoa@u^(0+128),w
  5157     033A  0249               	subwf	efgtoa@g^(0+128),w
  5158     033B  00A0               	movwf	??_efgtoa^(0+128)
  5159     033C  084E               	movf	(efgtoa@u+1)^(0+128),w
  5160     033D  3B4A               	subwfb	(efgtoa@g+1)^(0+128),w
  5161     033E  00A1               	movwf	(??_efgtoa^(0+128)+1)
  5162     033F  084F               	movf	(efgtoa@u+2)^(0+128),w
  5163     0340  3B4B               	subwfb	(efgtoa@g+2)^(0+128),w
  5164     0341  00A2               	movwf	(??_efgtoa^(0+128)+2)
  5165     0342  0850               	movf	(efgtoa@u+3)^(0+128),w
  5166     0343  3B4C               	subwfb	(efgtoa@g+3)^(0+128),w
  5167     0344  00A3               	movwf	(??_efgtoa^(0+128)+3)
  5168     0345  0823               	movf	(??_efgtoa+3)^(0+128),w
  5169     0346  00F3               	movwf	labs@a+3
  5170     0347  0822               	movf	(??_efgtoa+2)^(0+128),w
  5171     0348  00F2               	movwf	labs@a+2
  5172     0349  0821               	movf	(??_efgtoa+1)^(0+128),w
  5173     034A  00F1               	movwf	labs@a+1
  5174     034B  0820               	movf	??_efgtoa^(0+128),w
  5175     034C  00F0               	movwf	labs@a
  5176     034D  319A  22BA  3181   	fcall	_labs
  5177     0350  1BF3               	btfsc	?_labs+3,7
  5178     0351  2B61               	goto	u4570
  5179     0352  0873               	movf	?_labs+3,w
  5180     0353  1D03               	btfss	3,2
  5181     0354  2B60               	goto	u4571
  5182     0355  0872               	movf	?_labs+2,w
  5183     0356  1D03               	btfss	3,2
  5184     0357  2B60               	goto	u4571
  5185     0358  0871               	movf	?_labs+1,w
  5186     0359  1D03               	btfss	3,2
  5187     035A  2B60               	goto	u4571
  5188     035B  3002               	movlw	2
  5189     035C  0270               	subwf	?_labs,w
  5190     035D  1803               	btfsc	3,0
  5191     035E  2B60               	goto	u4571
  5192     035F  2B61               	goto	u4570
  5193     0360                     u4571:
  5194     0360  2BC4               	goto	l4470
  5195     0361                     u4570:
  5196     0361                     l4460:
  5197                           
  5198                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 609:    g = u;
  5199     0361  0021               	movlb	1	; select bank1
  5200     0362  0850               	movf	(efgtoa@u+3)^(0+128),w
  5201     0363  00CC               	movwf	(efgtoa@g+3)^(0+128)
  5202     0364  084F               	movf	(efgtoa@u+2)^(0+128),w
  5203     0365  00CB               	movwf	(efgtoa@g+2)^(0+128)
  5204     0366  084E               	movf	(efgtoa@u+1)^(0+128),w
  5205     0367  00CA               	movwf	(efgtoa@g+1)^(0+128)
  5206     0368  084D               	movf	efgtoa@u^(0+128),w
  5207     0369  00C9               	movwf	efgtoa@g^(0+128)
  5208                           
  5209                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 610:   }
  5210     036A  2BEB               	goto	l4472
  5211     036B                     l4462:
  5212                           
  5213                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 613:     u.f = u.
      +                          f/10.0;
  5214     036B  3041               	movlw	65
  5215     036C  0020               	movlb	0	; select bank0
  5216     036D  00BD               	movwf	___fldiv@a+3
  5217     036E  3020               	movlw	32
  5218     036F  00BC               	movwf	___fldiv@a+2
  5219     0370  3000               	movlw	0
  5220     0371  00BB               	movwf	___fldiv@a+1
  5221     0372  3000               	movlw	0
  5222     0373  00BA               	movwf	___fldiv@a
  5223     0374  0021               	movlb	1	; select bank1
  5224     0375  0850               	movf	(efgtoa@u+3)^(0+128),w
  5225     0376  0020               	movlb	0	; select bank0
  5226     0377  00C1               	movwf	___fldiv@b+3
  5227     0378  0021               	movlb	1	; select bank1
  5228     0379  084F               	movf	(efgtoa@u+2)^(0+128),w
  5229     037A  0020               	movlb	0	; select bank0
  5230     037B  00C0               	movwf	___fldiv@b+2
  5231     037C  0021               	movlb	1	; select bank1
  5232     037D  084E               	movf	(efgtoa@u+1)^(0+128),w
  5233     037E  0020               	movlb	0	; select bank0
  5234     037F  00BF               	movwf	___fldiv@b+1
  5235     0380  0021               	movlb	1	; select bank1
  5236     0381  084D               	movf	efgtoa@u^(0+128),w
  5237     0382  0020               	movlb	0	; select bank0
  5238     0383  00BE               	movwf	___fldiv@b
  5239     0384  318A  220F  3181   	fcall	___fldiv
  5240     0387  0020               	movlb	0	; select bank0
  5241     0388  083D               	movf	?___fldiv+3,w
  5242     0389  0021               	movlb	1	; select bank1
  5243     038A  00D0               	movwf	(efgtoa@u+3)^(0+128)
  5244     038B  0020               	movlb	0	; select bank0
  5245     038C  083C               	movf	?___fldiv+2,w
  5246     038D  0021               	movlb	1	; select bank1
  5247     038E  00CF               	movwf	(efgtoa@u+2)^(0+128)
  5248     038F  0020               	movlb	0	; select bank0
  5249     0390  083B               	movf	?___fldiv+1,w
  5250     0391  0021               	movlb	1	; select bank1
  5251     0392  00CE               	movwf	(efgtoa@u+1)^(0+128)
  5252     0393  0020               	movlb	0	; select bank0
  5253     0394  083A               	movf	?___fldiv,w
  5254     0395  0021               	movlb	1	; select bank1
  5255     0396  00CD               	movwf	efgtoa@u^(0+128)
  5256     0397                     l4464:
  5257                           
  5258                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 614:     --e;
  5259     0397  30FF               	movlw	255
  5260     0398  07B4               	addwf	efgtoa@e^(0+128),f
  5261     0399  30FF               	movlw	255
  5262     039A  3DB5               	addwfc	(efgtoa@e+1)^(0+128),f
  5263     039B                     l4466:
  5264                           
  5265                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 615:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  5266     039B  084D               	movf	efgtoa@u^(0+128),w
  5267     039C  0249               	subwf	efgtoa@g^(0+128),w
  5268     039D  00A0               	movwf	??_efgtoa^(0+128)
  5269     039E  084E               	movf	(efgtoa@u+1)^(0+128),w
  5270     039F  3B4A               	subwfb	(efgtoa@g+1)^(0+128),w
  5271     03A0  00A1               	movwf	(??_efgtoa^(0+128)+1)
  5272     03A1  084F               	movf	(efgtoa@u+2)^(0+128),w
  5273     03A2  3B4B               	subwfb	(efgtoa@g+2)^(0+128),w
  5274     03A3  00A2               	movwf	(??_efgtoa^(0+128)+2)
  5275     03A4  0850               	movf	(efgtoa@u+3)^(0+128),w
  5276     03A5  3B4C               	subwfb	(efgtoa@g+3)^(0+128),w
  5277     03A6  00A3               	movwf	(??_efgtoa^(0+128)+3)
  5278     03A7  0823               	movf	(??_efgtoa+3)^(0+128),w
  5279     03A8  00F3               	movwf	labs@a+3
  5280     03A9  0822               	movf	(??_efgtoa+2)^(0+128),w
  5281     03AA  00F2               	movwf	labs@a+2
  5282     03AB  0821               	movf	(??_efgtoa+1)^(0+128),w
  5283     03AC  00F1               	movwf	labs@a+1
  5284     03AD  0820               	movf	??_efgtoa^(0+128),w
  5285     03AE  00F0               	movwf	labs@a
  5286     03AF  319A  22BA  3181   	fcall	_labs
  5287     03B2  1BF3               	btfsc	?_labs+3,7
  5288     03B3  2BC3               	goto	u4580
  5289     03B4  0873               	movf	?_labs+3,w
  5290     03B5  1D03               	btfss	3,2
  5291     03B6  2BC2               	goto	u4581
  5292     03B7  0872               	movf	?_labs+2,w
  5293     03B8  1D03               	btfss	3,2
  5294     03B9  2BC2               	goto	u4581
  5295     03BA  0871               	movf	?_labs+1,w
  5296     03BB  1D03               	btfss	3,2
  5297     03BC  2BC2               	goto	u4581
  5298     03BD  3002               	movlw	2
  5299     03BE  0270               	subwf	?_labs,w
  5300     03BF  1803               	btfsc	3,0
  5301     03C0  2BC2               	goto	u4581
  5302     03C1  2BC3               	goto	u4580
  5303     03C2                     u4581:
  5304     03C2  2BC4               	goto	l4470
  5305     03C3                     u4580:
  5306     03C3  2B61               	goto	l4460
  5307     03C4                     l4470:
  5308                           
  5309                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 612:    while (g.
      +                          f < u.f) {
  5310     03C4  0021               	movlb	1	; select bank1
  5311     03C5  084C               	movf	(efgtoa@g+3)^(0+128),w
  5312     03C6  0020               	movlb	0	; select bank0
  5313     03C7  00BD               	movwf	___flge@ff1+3
  5314     03C8  0021               	movlb	1	; select bank1
  5315     03C9  084B               	movf	(efgtoa@g+2)^(0+128),w
  5316     03CA  0020               	movlb	0	; select bank0
  5317     03CB  00BC               	movwf	___flge@ff1+2
  5318     03CC  0021               	movlb	1	; select bank1
  5319     03CD  084A               	movf	(efgtoa@g+1)^(0+128),w
  5320     03CE  0020               	movlb	0	; select bank0
  5321     03CF  00BB               	movwf	___flge@ff1+1
  5322     03D0  0021               	movlb	1	; select bank1
  5323     03D1  0849               	movf	efgtoa@g^(0+128),w
  5324     03D2  0020               	movlb	0	; select bank0
  5325     03D3  00BA               	movwf	___flge@ff1
  5326     03D4  0021               	movlb	1	; select bank1
  5327     03D5  0850               	movf	(efgtoa@u+3)^(0+128),w
  5328     03D6  0020               	movlb	0	; select bank0
  5329     03D7  00C1               	movwf	___flge@ff2+3
  5330     03D8  0021               	movlb	1	; select bank1
  5331     03D9  084F               	movf	(efgtoa@u+2)^(0+128),w
  5332     03DA  0020               	movlb	0	; select bank0
  5333     03DB  00C0               	movwf	___flge@ff2+2
  5334     03DC  0021               	movlb	1	; select bank1
  5335     03DD  084E               	movf	(efgtoa@u+1)^(0+128),w
  5336     03DE  0020               	movlb	0	; select bank0
  5337     03DF  00BF               	movwf	___flge@ff2+1
  5338     03E0  0021               	movlb	1	; select bank1
  5339     03E1  084D               	movf	efgtoa@u^(0+128),w
  5340     03E2  0020               	movlb	0	; select bank0
  5341     03E3  00BE               	movwf	___flge@ff2
  5342     03E4  3190  2045  3181   	fcall	___flge
  5343     03E7  1C03               	btfss	3,0
  5344     03E8  2BEA               	goto	u4591
  5345     03E9  2BEB               	goto	u4590
  5346     03EA                     u4591:
  5347     03EA  2B6B               	goto	l4462
  5348     03EB                     u4590:
  5349     03EB                     l4472:
  5350                           
  5351                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 627:  mode = c;
  5352     03EB  0020               	movlb	0	; select bank0
  5353     03EC  086C               	movf	efgtoa@c,w
  5354     03ED  0021               	movlb	1	; select bank1
  5355     03EE  00AD               	movwf	efgtoa@mode^(0+128)
  5356                           
  5357                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 629:     nmode = 
      +                          mode;
  5358     03EF  082D               	movf	efgtoa@mode^(0+128),w
  5359     03F0  00AE               	movwf	efgtoa@nmode^(0+128)
  5360     03F1                     l4474:
  5361                           
  5362                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 639:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 640:         p = (prec < 0)
      +                           ? 6 : prec;
  5363     03F1  0022               	movlb	2	; select bank2
  5364     03F2  1BB3               	btfsc	(_prec+1)^(0+256),7
  5365     03F3  2BF5               	goto	u4601
  5366     03F4  2BF6               	goto	u4600
  5367     03F5                     u4601:
  5368     03F5  2BFE               	goto	l4478
  5369     03F6                     u4600:
  5370     03F6                     l4476:
  5371     03F6  0833               	movf	(_prec+1)^(0+256),w
  5372     03F7  0021               	movlb	1	; select bank1
  5373     03F8  00A7               	movwf	(efgtoa@p+1)^(0+128)
  5374     03F9  0022               	movlb	2	; select bank2
  5375     03FA  0832               	movf	_prec^(0+256),w
  5376     03FB  0021               	movlb	1	; select bank1
  5377     03FC  00A6               	movwf	efgtoa@p^(0+128)
  5378     03FD  2C03               	goto	l1101
  5379     03FE                     l4478:
  5380     03FE  3006               	movlw	6
  5381     03FF  0021               	movlb	1	; select bank1
  5382     0400  00A6               	movwf	efgtoa@p^(0+128)
  5383     0401  3000               	movlw	0
  5384     0402  00A7               	movwf	(efgtoa@p^(0+128)+1)
  5385     0403                     l1101:
  5386                           
  5387                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 641:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 655:     m = p;
  5388     0403  0827               	movf	(efgtoa@p+1)^(0+128),w
  5389     0404  00B2               	movwf	(efgtoa@m+1)^(0+128)
  5390     0405  0826               	movf	efgtoa@p^(0+128),w
  5391     0406  00B1               	movwf	efgtoa@m^(0+128)
  5392                           
  5393                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 659:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 660:         ++m;
  5394     0407  3001               	movlw	1
  5395     0408  07B1               	addwf	efgtoa@m^(0+128),f
  5396     0409  3000               	movlw	0
  5397     040A  3DB2               	addwfc	(efgtoa@m+1)^(0+128),f
  5398     040B                     l4480:
  5399                           
  5400                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 661:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 665:     if (nmode == 'f
      +                          ') {
  5401     040B  3066               	movlw	102
  5402     040C  062E               	xorwf	efgtoa@nmode^(0+128),w
  5403     040D  1D03               	btfss	3,2
  5404     040E  2C10               	goto	u4611
  5405     040F  2C11               	goto	u4610
  5406     0410                     u4611:
  5407     0410  2C29               	goto	l4492
  5408     0411                     u4610:
  5409     0411                     l4482:
  5410                           
  5411                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 666:         if (
      +                          e < 0) {
  5412     0411  1FB5               	btfss	(efgtoa@e+1)^(0+128),7
  5413     0412  2C14               	goto	u4621
  5414     0413  2C15               	goto	u4620
  5415     0414                     u4621:
  5416     0414  2C1F               	goto	l4488
  5417     0415                     u4620:
  5418     0415                     l4484:
  5419                           
  5420                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 667:             
      +                          u.f = 1.0;
  5421     0415  303F               	movlw	63
  5422     0416  00D0               	movwf	(efgtoa@u+3)^(0+128)
  5423     0417  3080               	movlw	128
  5424     0418  00CF               	movwf	(efgtoa@u+2)^(0+128)
  5425     0419  3000               	movlw	0
  5426     041A  00CE               	movwf	(efgtoa@u+1)^(0+128)
  5427     041B  3000               	movlw	0
  5428     041C  00CD               	movwf	efgtoa@u^(0+128)
  5429     041D                     l4486:
  5430                           
  5431                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 668:             
      +                          e = 0;
  5432     041D  01B4               	clrf	efgtoa@e^(0+128)
  5433     041E  01B5               	clrf	(efgtoa@e+1)^(0+128)
  5434     041F                     l4488:
  5435                           
  5436                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 670:         if (
      +                          !(mode == 'g')) {
  5437     041F  3067               	movlw	103
  5438     0420  062D               	xorwf	efgtoa@mode^(0+128),w
  5439     0421  1903               	btfsc	3,2
  5440     0422  2C24               	goto	u4631
  5441     0423  2C25               	goto	u4630
  5442     0424                     u4631:
  5443     0424  2C29               	goto	l4492
  5444     0425                     u4630:
  5445     0425                     l4490:
  5446                           
  5447                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 671:             
      +                          m += e;
  5448     0425  0834               	movf	efgtoa@e^(0+128),w
  5449     0426  07B1               	addwf	efgtoa@m^(0+128),f
  5450     0427  0835               	movf	(efgtoa@e+1)^(0+128),w
  5451     0428  3DB2               	addwfc	(efgtoa@m+1)^(0+128),f
  5452     0429                     l4492:
  5453                           
  5454                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 677:     i = 0;
  5455     0429  01BC               	clrf	efgtoa@i^(0+128)
  5456     042A  01BD               	clrf	(efgtoa@i+1)^(0+128)
  5457     042B                     l4494:
  5458                           
  5459                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 678:     h = g.f;
  5460     042B  084C               	movf	(efgtoa@g+3)^(0+128),w
  5461     042C  00C1               	movwf	(efgtoa@h+3)^(0+128)
  5462     042D  084B               	movf	(efgtoa@g+2)^(0+128),w
  5463     042E  00C0               	movwf	(efgtoa@h+2)^(0+128)
  5464     042F  084A               	movf	(efgtoa@g+1)^(0+128),w
  5465     0430  00BF               	movwf	(efgtoa@h+1)^(0+128)
  5466     0431  0849               	movf	efgtoa@g^(0+128),w
  5467     0432  00BE               	movwf	efgtoa@h^(0+128)
  5468     0433                     l4496:
  5469                           
  5470                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 679:     ou = u;
  5471     0433  0850               	movf	(efgtoa@u+3)^(0+128),w
  5472     0434  00BB               	movwf	(efgtoa@ou+3)^(0+128)
  5473     0435  084F               	movf	(efgtoa@u+2)^(0+128),w
  5474     0436  00BA               	movwf	(efgtoa@ou+2)^(0+128)
  5475     0437  084E               	movf	(efgtoa@u+1)^(0+128),w
  5476     0438  00B9               	movwf	(efgtoa@ou+1)^(0+128)
  5477     0439  084D               	movf	efgtoa@u^(0+128),w
  5478     043A  00B8               	movwf	efgtoa@ou^(0+128)
  5479                           
  5480                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  5481     043B  2D09               	goto	l4502
  5482     043C                     l4498:
  5483                           
  5484                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 681:         l = 
      +                          floorf(h/u.f);
  5485     043C  0021               	movlb	1	; select bank1
  5486     043D  0850               	movf	(efgtoa@u+3)^(0+128),w
  5487     043E  0020               	movlb	0	; select bank0
  5488     043F  00BD               	movwf	___fldiv@a+3
  5489     0440  0021               	movlb	1	; select bank1
  5490     0441  084F               	movf	(efgtoa@u+2)^(0+128),w
  5491     0442  0020               	movlb	0	; select bank0
  5492     0443  00BC               	movwf	___fldiv@a+2
  5493     0444  0021               	movlb	1	; select bank1
  5494     0445  084E               	movf	(efgtoa@u+1)^(0+128),w
  5495     0446  0020               	movlb	0	; select bank0
  5496     0447  00BB               	movwf	___fldiv@a+1
  5497     0448  0021               	movlb	1	; select bank1
  5498     0449  084D               	movf	efgtoa@u^(0+128),w
  5499     044A  0020               	movlb	0	; select bank0
  5500     044B  00BA               	movwf	___fldiv@a
  5501     044C  0021               	movlb	1	; select bank1
  5502     044D  0841               	movf	(efgtoa@h+3)^(0+128),w
  5503     044E  0020               	movlb	0	; select bank0
  5504     044F  00C1               	movwf	___fldiv@b+3
  5505     0450  0021               	movlb	1	; select bank1
  5506     0451  0840               	movf	(efgtoa@h+2)^(0+128),w
  5507     0452  0020               	movlb	0	; select bank0
  5508     0453  00C0               	movwf	___fldiv@b+2
  5509     0454  0021               	movlb	1	; select bank1
  5510     0455  083F               	movf	(efgtoa@h+1)^(0+128),w
  5511     0456  0020               	movlb	0	; select bank0
  5512     0457  00BF               	movwf	___fldiv@b+1
  5513     0458  0021               	movlb	1	; select bank1
  5514     0459  083E               	movf	efgtoa@h^(0+128),w
  5515     045A  0020               	movlb	0	; select bank0
  5516     045B  00BE               	movwf	___fldiv@b
  5517     045C  318A  220F  3181   	fcall	___fldiv
  5518     045F  0020               	movlb	0	; select bank0
  5519     0460  083D               	movf	?___fldiv+3,w
  5520     0461  00D7               	movwf	floorf@x+3
  5521     0462  083C               	movf	?___fldiv+2,w
  5522     0463  00D6               	movwf	floorf@x+2
  5523     0464  083B               	movf	?___fldiv+1,w
  5524     0465  00D5               	movwf	floorf@x+1
  5525     0466  083A               	movf	?___fldiv,w
  5526     0467  00D4               	movwf	floorf@x
  5527     0468  319E  2628  3181   	fcall	_floorf
  5528     046B  0020               	movlb	0	; select bank0
  5529     046C  0857               	movf	?_floorf+3,w
  5530     046D  0021               	movlb	1	; select bank1
  5531     046E  00C5               	movwf	(efgtoa@l+3)^(0+128)
  5532     046F  0020               	movlb	0	; select bank0
  5533     0470  0856               	movf	?_floorf+2,w
  5534     0471  0021               	movlb	1	; select bank1
  5535     0472  00C4               	movwf	(efgtoa@l+2)^(0+128)
  5536     0473  0020               	movlb	0	; select bank0
  5537     0474  0855               	movf	?_floorf+1,w
  5538     0475  0021               	movlb	1	; select bank1
  5539     0476  00C3               	movwf	(efgtoa@l+1)^(0+128)
  5540     0477  0020               	movlb	0	; select bank0
  5541     0478  0854               	movf	?_floorf,w
  5542     0479  0021               	movlb	1	; select bank1
  5543     047A  00C2               	movwf	efgtoa@l^(0+128)
  5544                           
  5545                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 682:         d = 
      +                          (int)l;
  5546     047B  0845               	movf	(efgtoa@l+3)^(0+128),w
  5547     047C  00F3               	movwf	___fltol@f1+3
  5548     047D  0844               	movf	(efgtoa@l+2)^(0+128),w
  5549     047E  00F2               	movwf	___fltol@f1+2
  5550     047F  0843               	movf	(efgtoa@l+1)^(0+128),w
  5551     0480  00F1               	movwf	___fltol@f1+1
  5552     0481  0842               	movf	efgtoa@l^(0+128),w
  5553     0482  00F0               	movwf	___fltol@f1
  5554     0483  319D  2539  3181   	fcall	___fltol
  5555     0486  0871               	movf	?___fltol+1,w
  5556     0487  0021               	movlb	1	; select bank1
  5557     0488  00B0               	movwf	(efgtoa@d+1)^(0+128)
  5558     0489  0870               	movf	?___fltol,w
  5559     048A  00AF               	movwf	efgtoa@d^(0+128)
  5560                           
  5561                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 683:         h -=
      +                           l*u.f;
  5562     048B  0850               	movf	(efgtoa@u+3)^(0+128),w
  5563     048C  0020               	movlb	0	; select bank0
  5564     048D  00A7               	movwf	___flmul@a+3
  5565     048E  0021               	movlb	1	; select bank1
  5566     048F  084F               	movf	(efgtoa@u+2)^(0+128),w
  5567     0490  0020               	movlb	0	; select bank0
  5568     0491  00A6               	movwf	___flmul@a+2
  5569     0492  0021               	movlb	1	; select bank1
  5570     0493  084E               	movf	(efgtoa@u+1)^(0+128),w
  5571     0494  0020               	movlb	0	; select bank0
  5572     0495  00A5               	movwf	___flmul@a+1
  5573     0496  0021               	movlb	1	; select bank1
  5574     0497  084D               	movf	efgtoa@u^(0+128),w
  5575     0498  0020               	movlb	0	; select bank0
  5576     0499  00A4               	movwf	___flmul@a
  5577     049A  0021               	movlb	1	; select bank1
  5578     049B  0845               	movf	(efgtoa@l+3)^(0+128),w
  5579     049C  0020               	movlb	0	; select bank0
  5580     049D  00A3               	movwf	___flmul@b+3
  5581     049E  0021               	movlb	1	; select bank1
  5582     049F  0844               	movf	(efgtoa@l+2)^(0+128),w
  5583     04A0  0020               	movlb	0	; select bank0
  5584     04A1  00A2               	movwf	___flmul@b+2
  5585     04A2  0021               	movlb	1	; select bank1
  5586     04A3  0843               	movf	(efgtoa@l+1)^(0+128),w
  5587     04A4  0020               	movlb	0	; select bank0
  5588     04A5  00A1               	movwf	___flmul@b+1
  5589     04A6  0021               	movlb	1	; select bank1
  5590     04A7  0842               	movf	efgtoa@l^(0+128),w
  5591     04A8  0020               	movlb	0	; select bank0
  5592     04A9  00A0               	movwf	___flmul@b
  5593     04AA  318D  25C5  3181   	fcall	___flmul
  5594     04AD  0020               	movlb	0	; select bank0
  5595     04AE  0823               	movf	?___flmul+3,w
  5596     04AF  00BD               	movwf	___flsub@a+3
  5597     04B0  0822               	movf	?___flmul+2,w
  5598     04B1  00BC               	movwf	___flsub@a+2
  5599     04B2  0821               	movf	?___flmul+1,w
  5600     04B3  00BB               	movwf	___flsub@a+1
  5601     04B4  0820               	movf	?___flmul,w
  5602     04B5  00BA               	movwf	___flsub@a
  5603     04B6  0021               	movlb	1	; select bank1
  5604     04B7  0841               	movf	(efgtoa@h+3)^(0+128),w
  5605     04B8  0020               	movlb	0	; select bank0
  5606     04B9  00C1               	movwf	___flsub@b+3
  5607     04BA  0021               	movlb	1	; select bank1
  5608     04BB  0840               	movf	(efgtoa@h+2)^(0+128),w
  5609     04BC  0020               	movlb	0	; select bank0
  5610     04BD  00C0               	movwf	___flsub@b+2
  5611     04BE  0021               	movlb	1	; select bank1
  5612     04BF  083F               	movf	(efgtoa@h+1)^(0+128),w
  5613     04C0  0020               	movlb	0	; select bank0
  5614     04C1  00BF               	movwf	___flsub@b+1
  5615     04C2  0021               	movlb	1	; select bank1
  5616     04C3  083E               	movf	efgtoa@h^(0+128),w
  5617     04C4  0020               	movlb	0	; select bank0
  5618     04C5  00BE               	movwf	___flsub@b
  5619     04C6  319A  225A  3181   	fcall	___flsub
  5620     04C9  0020               	movlb	0	; select bank0
  5621     04CA  083D               	movf	?___flsub+3,w
  5622     04CB  0021               	movlb	1	; select bank1
  5623     04CC  00C1               	movwf	(efgtoa@h+3)^(0+128)
  5624     04CD  0020               	movlb	0	; select bank0
  5625     04CE  083C               	movf	?___flsub+2,w
  5626     04CF  0021               	movlb	1	; select bank1
  5627     04D0  00C0               	movwf	(efgtoa@h+2)^(0+128)
  5628     04D1  0020               	movlb	0	; select bank0
  5629     04D2  083B               	movf	?___flsub+1,w
  5630     04D3  0021               	movlb	1	; select bank1
  5631     04D4  00BF               	movwf	(efgtoa@h+1)^(0+128)
  5632     04D5  0020               	movlb	0	; select bank0
  5633     04D6  083A               	movf	?___flsub,w
  5634     04D7  0021               	movlb	1	; select bank1
  5635     04D8  00BE               	movwf	efgtoa@h^(0+128)
  5636                           
  5637                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 684:         u.f 
      +                          = u.f/10.0;
  5638     04D9  3041               	movlw	65
  5639     04DA  0020               	movlb	0	; select bank0
  5640     04DB  00BD               	movwf	___fldiv@a+3
  5641     04DC  3020               	movlw	32
  5642     04DD  00BC               	movwf	___fldiv@a+2
  5643     04DE  3000               	movlw	0
  5644     04DF  00BB               	movwf	___fldiv@a+1
  5645     04E0  3000               	movlw	0
  5646     04E1  00BA               	movwf	___fldiv@a
  5647     04E2  0021               	movlb	1	; select bank1
  5648     04E3  0850               	movf	(efgtoa@u+3)^(0+128),w
  5649     04E4  0020               	movlb	0	; select bank0
  5650     04E5  00C1               	movwf	___fldiv@b+3
  5651     04E6  0021               	movlb	1	; select bank1
  5652     04E7  084F               	movf	(efgtoa@u+2)^(0+128),w
  5653     04E8  0020               	movlb	0	; select bank0
  5654     04E9  00C0               	movwf	___fldiv@b+2
  5655     04EA  0021               	movlb	1	; select bank1
  5656     04EB  084E               	movf	(efgtoa@u+1)^(0+128),w
  5657     04EC  0020               	movlb	0	; select bank0
  5658     04ED  00BF               	movwf	___fldiv@b+1
  5659     04EE  0021               	movlb	1	; select bank1
  5660     04EF  084D               	movf	efgtoa@u^(0+128),w
  5661     04F0  0020               	movlb	0	; select bank0
  5662     04F1  00BE               	movwf	___fldiv@b
  5663     04F2  318A  220F  3181   	fcall	___fldiv
  5664     04F5  0020               	movlb	0	; select bank0
  5665     04F6  083D               	movf	?___fldiv+3,w
  5666     04F7  0021               	movlb	1	; select bank1
  5667     04F8  00D0               	movwf	(efgtoa@u+3)^(0+128)
  5668     04F9  0020               	movlb	0	; select bank0
  5669     04FA  083C               	movf	?___fldiv+2,w
  5670     04FB  0021               	movlb	1	; select bank1
  5671     04FC  00CF               	movwf	(efgtoa@u+2)^(0+128)
  5672     04FD  0020               	movlb	0	; select bank0
  5673     04FE  083B               	movf	?___fldiv+1,w
  5674     04FF  0021               	movlb	1	; select bank1
  5675     0500  00CE               	movwf	(efgtoa@u+1)^(0+128)
  5676     0501  0020               	movlb	0	; select bank0
  5677     0502  083A               	movf	?___fldiv,w
  5678     0503  0021               	movlb	1	; select bank1
  5679     0504  00CD               	movwf	efgtoa@u^(0+128)
  5680     0505                     l4500:
  5681                           
  5682                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 685:         ++i;
  5683     0505  3001               	movlw	1
  5684     0506  07BC               	addwf	efgtoa@i^(0+128),f
  5685     0507  3000               	movlw	0
  5686     0508  3DBD               	addwfc	(efgtoa@i+1)^(0+128),f
  5687     0509                     l4502:
  5688                           
  5689                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  5690     0509  083D               	movf	(efgtoa@i+1)^(0+128),w
  5691     050A  3A80               	xorlw	128
  5692     050B  00A0               	movwf	??_efgtoa^(0+128)
  5693     050C  0832               	movf	(efgtoa@m+1)^(0+128),w
  5694     050D  3A80               	xorlw	128
  5695     050E  0220               	subwf	??_efgtoa^(0+128),w
  5696     050F  1D03               	skipz
  5697     0510  2D13               	goto	u4645
  5698     0511  0831               	movf	efgtoa@m^(0+128),w
  5699     0512  023C               	subwf	efgtoa@i^(0+128),w
  5700     0513                     u4645:
  5701     0513  1C03               	skipc
  5702     0514  2D16               	goto	u4641
  5703     0515  2D17               	goto	u4640
  5704     0516                     u4641:
  5705     0516  2C3C               	goto	l4498
  5706     0517                     u4640:
  5707     0517                     l4504:
  5708                           
  5709                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 689:     l = u.f*
      +                          5.0;
  5710     0517  3040               	movlw	64
  5711     0518  0020               	movlb	0	; select bank0
  5712     0519  00A3               	movwf	___flmul@b+3
  5713     051A  30A0               	movlw	160
  5714     051B  00A2               	movwf	___flmul@b+2
  5715     051C  3000               	movlw	0
  5716     051D  00A1               	movwf	___flmul@b+1
  5717     051E  3000               	movlw	0
  5718     051F  00A0               	movwf	___flmul@b
  5719     0520  0021               	movlb	1	; select bank1
  5720     0521  0850               	movf	(efgtoa@u+3)^(0+128),w
  5721     0522  0020               	movlb	0	; select bank0
  5722     0523  00A7               	movwf	___flmul@a+3
  5723     0524  0021               	movlb	1	; select bank1
  5724     0525  084F               	movf	(efgtoa@u+2)^(0+128),w
  5725     0526  0020               	movlb	0	; select bank0
  5726     0527  00A6               	movwf	___flmul@a+2
  5727     0528  0021               	movlb	1	; select bank1
  5728     0529  084E               	movf	(efgtoa@u+1)^(0+128),w
  5729     052A  0020               	movlb	0	; select bank0
  5730     052B  00A5               	movwf	___flmul@a+1
  5731     052C  0021               	movlb	1	; select bank1
  5732     052D  084D               	movf	efgtoa@u^(0+128),w
  5733     052E  0020               	movlb	0	; select bank0
  5734     052F  00A4               	movwf	___flmul@a
  5735     0530  318D  25C5  3181   	fcall	___flmul
  5736     0533  0020               	movlb	0	; select bank0
  5737     0534  0823               	movf	?___flmul+3,w
  5738     0535  0021               	movlb	1	; select bank1
  5739     0536  00C5               	movwf	(efgtoa@l+3)^(0+128)
  5740     0537  0020               	movlb	0	; select bank0
  5741     0538  0822               	movf	?___flmul+2,w
  5742     0539  0021               	movlb	1	; select bank1
  5743     053A  00C4               	movwf	(efgtoa@l+2)^(0+128)
  5744     053B  0020               	movlb	0	; select bank0
  5745     053C  0821               	movf	?___flmul+1,w
  5746     053D  0021               	movlb	1	; select bank1
  5747     053E  00C3               	movwf	(efgtoa@l+1)^(0+128)
  5748     053F  0020               	movlb	0	; select bank0
  5749     0540  0820               	movf	?___flmul,w
  5750     0541  0021               	movlb	1	; select bank1
  5751     0542  00C2               	movwf	efgtoa@l^(0+128)
  5752                           
  5753                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 690:     if (h < 
      +                          l) {
  5754     0543  0841               	movf	(efgtoa@h+3)^(0+128),w
  5755     0544  0020               	movlb	0	; select bank0
  5756     0545  00BD               	movwf	___flge@ff1+3
  5757     0546  0021               	movlb	1	; select bank1
  5758     0547  0840               	movf	(efgtoa@h+2)^(0+128),w
  5759     0548  0020               	movlb	0	; select bank0
  5760     0549  00BC               	movwf	___flge@ff1+2
  5761     054A  0021               	movlb	1	; select bank1
  5762     054B  083F               	movf	(efgtoa@h+1)^(0+128),w
  5763     054C  0020               	movlb	0	; select bank0
  5764     054D  00BB               	movwf	___flge@ff1+1
  5765     054E  0021               	movlb	1	; select bank1
  5766     054F  083E               	movf	efgtoa@h^(0+128),w
  5767     0550  0020               	movlb	0	; select bank0
  5768     0551  00BA               	movwf	___flge@ff1
  5769     0552  0021               	movlb	1	; select bank1
  5770     0553  0845               	movf	(efgtoa@l+3)^(0+128),w
  5771     0554  0020               	movlb	0	; select bank0
  5772     0555  00C1               	movwf	___flge@ff2+3
  5773     0556  0021               	movlb	1	; select bank1
  5774     0557  0844               	movf	(efgtoa@l+2)^(0+128),w
  5775     0558  0020               	movlb	0	; select bank0
  5776     0559  00C0               	movwf	___flge@ff2+2
  5777     055A  0021               	movlb	1	; select bank1
  5778     055B  0843               	movf	(efgtoa@l+1)^(0+128),w
  5779     055C  0020               	movlb	0	; select bank0
  5780     055D  00BF               	movwf	___flge@ff2+1
  5781     055E  0021               	movlb	1	; select bank1
  5782     055F  0842               	movf	efgtoa@l^(0+128),w
  5783     0560  0020               	movlb	0	; select bank0
  5784     0561  00BE               	movwf	___flge@ff2
  5785     0562  3190  2045  3181   	fcall	___flge
  5786     0565  1803               	btfsc	3,0
  5787     0566  2D68               	goto	u4651
  5788     0567  2D69               	goto	u4650
  5789     0568                     u4651:
  5790     0568  2D73               	goto	l4508
  5791     0569                     u4650:
  5792     0569                     l4506:
  5793                           
  5794                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 691:         l = 
      +                          0.0;
  5795     0569  3000               	movlw	0
  5796     056A  0021               	movlb	1	; select bank1
  5797     056B  00C5               	movwf	(efgtoa@l+3)^(0+128)
  5798     056C  3000               	movlw	0
  5799     056D  00C4               	movwf	(efgtoa@l+2)^(0+128)
  5800     056E  3000               	movlw	0
  5801     056F  00C3               	movwf	(efgtoa@l+1)^(0+128)
  5802     0570  3000               	movlw	0
  5803     0571  00C2               	movwf	efgtoa@l^(0+128)
  5804                           
  5805                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 692:     } else {
  5806     0572  2D98               	goto	l4514
  5807     0573                     l4508:
  5808                           
  5809                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 694:         if (
      +                          (h == l) && !(d % 2)) {
  5810     0573  0021               	movlb	1	; select bank1
  5811     0574  0841               	movf	(efgtoa@h+3)^(0+128),w
  5812     0575  00F3               	movwf	___fleq@ff1+3
  5813     0576  0840               	movf	(efgtoa@h+2)^(0+128),w
  5814     0577  00F2               	movwf	___fleq@ff1+2
  5815     0578  083F               	movf	(efgtoa@h+1)^(0+128),w
  5816     0579  00F1               	movwf	___fleq@ff1+1
  5817     057A  083E               	movf	efgtoa@h^(0+128),w
  5818     057B  00F0               	movwf	___fleq@ff1
  5819     057C  0845               	movf	(efgtoa@l+3)^(0+128),w
  5820     057D  00F7               	movwf	___fleq@ff2+3
  5821     057E  0844               	movf	(efgtoa@l+2)^(0+128),w
  5822     057F  00F6               	movwf	___fleq@ff2+2
  5823     0580  0843               	movf	(efgtoa@l+1)^(0+128),w
  5824     0581  00F5               	movwf	___fleq@ff2+1
  5825     0582  0842               	movf	efgtoa@l^(0+128),w
  5826     0583  00F4               	movwf	___fleq@ff2
  5827     0584  319B  23E5  3181   	fcall	___fleq
  5828     0587  1C03               	btfss	3,0
  5829     0588  2D8A               	goto	u4661
  5830     0589  2D8B               	goto	u4660
  5831     058A                     u4661:
  5832     058A  2D98               	goto	l4514
  5833     058B                     u4660:
  5834     058B                     l4510:
  5835     058B  0021               	movlb	1	; select bank1
  5836     058C  182F               	btfsc	efgtoa@d^(0+128),0
  5837     058D  2D8F               	goto	u4671
  5838     058E  2D90               	goto	u4670
  5839     058F                     u4671:
  5840     058F  2D98               	goto	l4514
  5841     0590                     u4670:
  5842     0590                     l4512:
  5843                           
  5844                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 695:             
      +                          l = 0.0;
  5845     0590  3000               	movlw	0
  5846     0591  00C5               	movwf	(efgtoa@l+3)^(0+128)
  5847     0592  3000               	movlw	0
  5848     0593  00C4               	movwf	(efgtoa@l+2)^(0+128)
  5849     0594  3000               	movlw	0
  5850     0595  00C3               	movwf	(efgtoa@l+1)^(0+128)
  5851     0596  3000               	movlw	0
  5852     0597  00C2               	movwf	efgtoa@l^(0+128)
  5853     0598                     l4514:
  5854                           
  5855                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 700:     h = g.f 
      +                          + l;
  5856     0598  0021               	movlb	1	; select bank1
  5857     0599  0845               	movf	(efgtoa@l+3)^(0+128),w
  5858     059A  00F3               	movwf	___fladd@b+3
  5859     059B  0844               	movf	(efgtoa@l+2)^(0+128),w
  5860     059C  00F2               	movwf	___fladd@b+2
  5861     059D  0843               	movf	(efgtoa@l+1)^(0+128),w
  5862     059E  00F1               	movwf	___fladd@b+1
  5863     059F  0842               	movf	efgtoa@l^(0+128),w
  5864     05A0  00F0               	movwf	___fladd@b
  5865     05A1  084C               	movf	(efgtoa@g+3)^(0+128),w
  5866     05A2  00F7               	movwf	___fladd@a+3
  5867     05A3  084B               	movf	(efgtoa@g+2)^(0+128),w
  5868     05A4  00F6               	movwf	___fladd@a+2
  5869     05A5  084A               	movf	(efgtoa@g+1)^(0+128),w
  5870     05A6  00F5               	movwf	___fladd@a+1
  5871     05A7  0849               	movf	efgtoa@g^(0+128),w
  5872     05A8  00F4               	movwf	___fladd@a
  5873     05A9  318B  23B9  3181   	fcall	___fladd
  5874     05AC  0873               	movf	?___fladd+3,w
  5875     05AD  0021               	movlb	1	; select bank1
  5876     05AE  00C1               	movwf	(efgtoa@h+3)^(0+128)
  5877     05AF  0872               	movf	?___fladd+2,w
  5878     05B0  00C0               	movwf	(efgtoa@h+2)^(0+128)
  5879     05B1  0871               	movf	?___fladd+1,w
  5880     05B2  00BF               	movwf	(efgtoa@h+1)^(0+128)
  5881     05B3  0870               	movf	?___fladd,w
  5882     05B4  00BE               	movwf	efgtoa@h^(0+128)
  5883     05B5                     l4516:
  5884                           
  5885                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 702:  if (h >= (o
      +                          u.f*10.0)) {
  5886     05B5  0841               	movf	(efgtoa@h+3)^(0+128),w
  5887     05B6  0020               	movlb	0	; select bank0
  5888     05B7  00BD               	movwf	___flge@ff1+3
  5889     05B8  0021               	movlb	1	; select bank1
  5890     05B9  0840               	movf	(efgtoa@h+2)^(0+128),w
  5891     05BA  0020               	movlb	0	; select bank0
  5892     05BB  00BC               	movwf	___flge@ff1+2
  5893     05BC  0021               	movlb	1	; select bank1
  5894     05BD  083F               	movf	(efgtoa@h+1)^(0+128),w
  5895     05BE  0020               	movlb	0	; select bank0
  5896     05BF  00BB               	movwf	___flge@ff1+1
  5897     05C0  0021               	movlb	1	; select bank1
  5898     05C1  083E               	movf	efgtoa@h^(0+128),w
  5899     05C2  0020               	movlb	0	; select bank0
  5900     05C3  00BA               	movwf	___flge@ff1
  5901     05C4  3041               	movlw	65
  5902     05C5  00A3               	movwf	___flmul@b+3
  5903     05C6  3020               	movlw	32
  5904     05C7  00A2               	movwf	___flmul@b+2
  5905     05C8  3000               	movlw	0
  5906     05C9  00A1               	movwf	___flmul@b+1
  5907     05CA  3000               	movlw	0
  5908     05CB  00A0               	movwf	___flmul@b
  5909     05CC  0021               	movlb	1	; select bank1
  5910     05CD  083B               	movf	(efgtoa@ou+3)^(0+128),w
  5911     05CE  0020               	movlb	0	; select bank0
  5912     05CF  00A7               	movwf	___flmul@a+3
  5913     05D0  0021               	movlb	1	; select bank1
  5914     05D1  083A               	movf	(efgtoa@ou+2)^(0+128),w
  5915     05D2  0020               	movlb	0	; select bank0
  5916     05D3  00A6               	movwf	___flmul@a+2
  5917     05D4  0021               	movlb	1	; select bank1
  5918     05D5  0839               	movf	(efgtoa@ou+1)^(0+128),w
  5919     05D6  0020               	movlb	0	; select bank0
  5920     05D7  00A5               	movwf	___flmul@a+1
  5921     05D8  0021               	movlb	1	; select bank1
  5922     05D9  0838               	movf	efgtoa@ou^(0+128),w
  5923     05DA  0020               	movlb	0	; select bank0
  5924     05DB  00A4               	movwf	___flmul@a
  5925     05DC  318D  25C5  3181   	fcall	___flmul
  5926     05DF  0020               	movlb	0	; select bank0
  5927     05E0  0823               	movf	?___flmul+3,w
  5928     05E1  00C1               	movwf	___flge@ff2+3
  5929     05E2  0822               	movf	?___flmul+2,w
  5930     05E3  00C0               	movwf	___flge@ff2+2
  5931     05E4  0821               	movf	?___flmul+1,w
  5932     05E5  00BF               	movwf	___flge@ff2+1
  5933     05E6  0820               	movf	?___flmul,w
  5934     05E7  00BE               	movwf	___flge@ff2
  5935     05E8  3190  2045  3181   	fcall	___flge
  5936     05EB  1C03               	btfss	3,0
  5937     05EC  2DEE               	goto	u4681
  5938     05ED  2DEF               	goto	u4680
  5939     05EE                     u4681:
  5940     05EE  2E2A               	goto	l1111
  5941     05EF                     u4680:
  5942     05EF                     l4518:
  5943                           
  5944                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 703:   e++;
  5945     05EF  3001               	movlw	1
  5946     05F0  0021               	movlb	1	; select bank1
  5947     05F1  07B4               	addwf	efgtoa@e^(0+128),f
  5948     05F2  3000               	movlw	0
  5949     05F3  3DB5               	addwfc	(efgtoa@e+1)^(0+128),f
  5950     05F4                     l4520:
  5951                           
  5952                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 704:   ou.f *= 10
      +                          .0;
  5953     05F4  3041               	movlw	65
  5954     05F5  0020               	movlb	0	; select bank0
  5955     05F6  00A3               	movwf	___flmul@b+3
  5956     05F7  3020               	movlw	32
  5957     05F8  00A2               	movwf	___flmul@b+2
  5958     05F9  3000               	movlw	0
  5959     05FA  00A1               	movwf	___flmul@b+1
  5960     05FB  3000               	movlw	0
  5961     05FC  00A0               	movwf	___flmul@b
  5962     05FD  0021               	movlb	1	; select bank1
  5963     05FE  083B               	movf	(efgtoa@ou+3)^(0+128),w
  5964     05FF  0020               	movlb	0	; select bank0
  5965     0600  00A7               	movwf	___flmul@a+3
  5966     0601  0021               	movlb	1	; select bank1
  5967     0602  083A               	movf	(efgtoa@ou+2)^(0+128),w
  5968     0603  0020               	movlb	0	; select bank0
  5969     0604  00A6               	movwf	___flmul@a+2
  5970     0605  0021               	movlb	1	; select bank1
  5971     0606  0839               	movf	(efgtoa@ou+1)^(0+128),w
  5972     0607  0020               	movlb	0	; select bank0
  5973     0608  00A5               	movwf	___flmul@a+1
  5974     0609  0021               	movlb	1	; select bank1
  5975     060A  0838               	movf	efgtoa@ou^(0+128),w
  5976     060B  0020               	movlb	0	; select bank0
  5977     060C  00A4               	movwf	___flmul@a
  5978     060D  318D  25C5  3181   	fcall	___flmul
  5979     0610  0020               	movlb	0	; select bank0
  5980     0611  0823               	movf	?___flmul+3,w
  5981     0612  0021               	movlb	1	; select bank1
  5982     0613  00BB               	movwf	(efgtoa@ou+3)^(0+128)
  5983     0614  0020               	movlb	0	; select bank0
  5984     0615  0822               	movf	?___flmul+2,w
  5985     0616  0021               	movlb	1	; select bank1
  5986     0617  00BA               	movwf	(efgtoa@ou+2)^(0+128)
  5987     0618  0020               	movlb	0	; select bank0
  5988     0619  0821               	movf	?___flmul+1,w
  5989     061A  0021               	movlb	1	; select bank1
  5990     061B  00B9               	movwf	(efgtoa@ou+1)^(0+128)
  5991     061C  0020               	movlb	0	; select bank0
  5992     061D  0820               	movf	?___flmul,w
  5993     061E  0021               	movlb	1	; select bank1
  5994     061F  00B8               	movwf	efgtoa@ou^(0+128)
  5995     0620                     l4522:
  5996                           
  5997                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 706:   if (nmode 
      +                          == 'f') {
  5998     0620  3066               	movlw	102
  5999     0621  062E               	xorwf	efgtoa@nmode^(0+128),w
  6000     0622  1D03               	btfss	3,2
  6001     0623  2E25               	goto	u4691
  6002     0624  2E26               	goto	u4690
  6003     0625                     u4691:
  6004     0625  2E2A               	goto	l1111
  6005     0626                     u4690:
  6006     0626                     l4524:
  6007                           
  6008                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 708:    m++;
  6009     0626  3001               	movlw	1
  6010     0627  07B1               	addwf	efgtoa@m^(0+128),f
  6011     0628  3000               	movlw	0
  6012     0629  3DB2               	addwfc	(efgtoa@m+1)^(0+128),f
  6013     062A                     l1111:	
  6014                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 711:  }
  6015                           
  6016                           
  6017                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 714:     u = ou;
  6018     062A  0021               	movlb	1	; select bank1
  6019     062B  083B               	movf	(efgtoa@ou+3)^(0+128),w
  6020     062C  00D0               	movwf	(efgtoa@u+3)^(0+128)
  6021     062D  083A               	movf	(efgtoa@ou+2)^(0+128),w
  6022     062E  00CF               	movwf	(efgtoa@u+2)^(0+128)
  6023     062F  0839               	movf	(efgtoa@ou+1)^(0+128),w
  6024     0630  00CE               	movwf	(efgtoa@u+1)^(0+128)
  6025     0631  0838               	movf	efgtoa@ou^(0+128),w
  6026     0632  00CD               	movwf	efgtoa@u^(0+128)
  6027                           
  6028                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 718:  ne = e;
  6029     0633  0835               	movf	(efgtoa@e+1)^(0+128),w
  6030     0634  00A5               	movwf	(efgtoa@ne+1)^(0+128)
  6031     0635  0834               	movf	efgtoa@e^(0+128),w
  6032     0636  00A4               	movwf	efgtoa@ne^(0+128)
  6033     0637                     l4526:
  6034                           
  6035                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 720:     pp = 0;
  6036     0637  01AC               	clrf	efgtoa@pp^(0+128)
  6037     0638                     l4528:
  6038                           
  6039                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 721:     t = 0;
  6040     0638  01A8               	clrf	efgtoa@t^(0+128)
  6041     0639  01A9               	clrf	(efgtoa@t+1)^(0+128)
  6042     063A                     l4530:
  6043                           
  6044                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 722:     i = 0;
  6045     063A  01BC               	clrf	efgtoa@i^(0+128)
  6046     063B  01BD               	clrf	(efgtoa@i+1)^(0+128)
  6047                           
  6048                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6049     063C  2F72               	goto	l4574
  6050     063D                     l4532:
  6051                           
  6052                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 724:         l = 
      +                          floorf(h/u.f);
  6053     063D  0021               	movlb	1	; select bank1
  6054     063E  0850               	movf	(efgtoa@u+3)^(0+128),w
  6055     063F  0020               	movlb	0	; select bank0
  6056     0640  00BD               	movwf	___fldiv@a+3
  6057     0641  0021               	movlb	1	; select bank1
  6058     0642  084F               	movf	(efgtoa@u+2)^(0+128),w
  6059     0643  0020               	movlb	0	; select bank0
  6060     0644  00BC               	movwf	___fldiv@a+2
  6061     0645  0021               	movlb	1	; select bank1
  6062     0646  084E               	movf	(efgtoa@u+1)^(0+128),w
  6063     0647  0020               	movlb	0	; select bank0
  6064     0648  00BB               	movwf	___fldiv@a+1
  6065     0649  0021               	movlb	1	; select bank1
  6066     064A  084D               	movf	efgtoa@u^(0+128),w
  6067     064B  0020               	movlb	0	; select bank0
  6068     064C  00BA               	movwf	___fldiv@a
  6069     064D  0021               	movlb	1	; select bank1
  6070     064E  0841               	movf	(efgtoa@h+3)^(0+128),w
  6071     064F  0020               	movlb	0	; select bank0
  6072     0650  00C1               	movwf	___fldiv@b+3
  6073     0651  0021               	movlb	1	; select bank1
  6074     0652  0840               	movf	(efgtoa@h+2)^(0+128),w
  6075     0653  0020               	movlb	0	; select bank0
  6076     0654  00C0               	movwf	___fldiv@b+2
  6077     0655  0021               	movlb	1	; select bank1
  6078     0656  083F               	movf	(efgtoa@h+1)^(0+128),w
  6079     0657  0020               	movlb	0	; select bank0
  6080     0658  00BF               	movwf	___fldiv@b+1
  6081     0659  0021               	movlb	1	; select bank1
  6082     065A  083E               	movf	efgtoa@h^(0+128),w
  6083     065B  0020               	movlb	0	; select bank0
  6084     065C  00BE               	movwf	___fldiv@b
  6085     065D  318A  220F  3181   	fcall	___fldiv
  6086     0660  0020               	movlb	0	; select bank0
  6087     0661  083D               	movf	?___fldiv+3,w
  6088     0662  00D7               	movwf	floorf@x+3
  6089     0663  083C               	movf	?___fldiv+2,w
  6090     0664  00D6               	movwf	floorf@x+2
  6091     0665  083B               	movf	?___fldiv+1,w
  6092     0666  00D5               	movwf	floorf@x+1
  6093     0667  083A               	movf	?___fldiv,w
  6094     0668  00D4               	movwf	floorf@x
  6095     0669  319E  2628  3181   	fcall	_floorf
  6096     066C  0020               	movlb	0	; select bank0
  6097     066D  0857               	movf	?_floorf+3,w
  6098     066E  0021               	movlb	1	; select bank1
  6099     066F  00C5               	movwf	(efgtoa@l+3)^(0+128)
  6100     0670  0020               	movlb	0	; select bank0
  6101     0671  0856               	movf	?_floorf+2,w
  6102     0672  0021               	movlb	1	; select bank1
  6103     0673  00C4               	movwf	(efgtoa@l+2)^(0+128)
  6104     0674  0020               	movlb	0	; select bank0
  6105     0675  0855               	movf	?_floorf+1,w
  6106     0676  0021               	movlb	1	; select bank1
  6107     0677  00C3               	movwf	(efgtoa@l+1)^(0+128)
  6108     0678  0020               	movlb	0	; select bank0
  6109     0679  0854               	movf	?_floorf,w
  6110     067A  0021               	movlb	1	; select bank1
  6111     067B  00C2               	movwf	efgtoa@l^(0+128)
  6112                           
  6113                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 725:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  6114     067C  0845               	movf	(efgtoa@l+3)^(0+128),w
  6115     067D  00F3               	movwf	___fltol@f1+3
  6116     067E  0844               	movf	(efgtoa@l+2)^(0+128),w
  6117     067F  00F2               	movwf	___fltol@f1+2
  6118     0680  0843               	movf	(efgtoa@l+1)^(0+128),w
  6119     0681  00F1               	movwf	___fltol@f1+1
  6120     0682  0842               	movf	efgtoa@l^(0+128),w
  6121     0683  00F0               	movwf	___fltol@f1
  6122     0684  319D  2539  3181   	fcall	___fltol
  6123     0687  0871               	movf	?___fltol+1,w
  6124     0688  3A80               	xorlw	128
  6125     0689  0021               	movlb	1	; select bank1
  6126     068A  00A0               	movwf	??_efgtoa^(0+128)
  6127     068B  3080               	movlw	128
  6128     068C  0220               	subwf	??_efgtoa^(0+128),w
  6129     068D  1D03               	skipz
  6130     068E  2E91               	goto	u4705
  6131     068F  300A               	movlw	10
  6132     0690  0270               	subwf	?___fltol,w
  6133     0691                     u4705:
  6134     0691  1803               	skipnc
  6135     0692  2E94               	goto	u4701
  6136     0693  2E95               	goto	u4700
  6137     0694                     u4701:
  6138     0694  2EA7               	goto	l4536
  6139     0695                     u4700:
  6140     0695                     l4534:
  6141     0695  0021               	movlb	1	; select bank1
  6142     0696  0845               	movf	(efgtoa@l+3)^(0+128),w
  6143     0697  00F3               	movwf	___fltol@f1+3
  6144     0698  0844               	movf	(efgtoa@l+2)^(0+128),w
  6145     0699  00F2               	movwf	___fltol@f1+2
  6146     069A  0843               	movf	(efgtoa@l+1)^(0+128),w
  6147     069B  00F1               	movwf	___fltol@f1+1
  6148     069C  0842               	movf	efgtoa@l^(0+128),w
  6149     069D  00F0               	movwf	___fltol@f1
  6150     069E  319D  2539  3181   	fcall	___fltol
  6151     06A1  0871               	movf	?___fltol+1,w
  6152     06A2  0021               	movlb	1	; select bank1
  6153     06A3  00B0               	movwf	(efgtoa@d+1)^(0+128)
  6154     06A4  0870               	movf	?___fltol,w
  6155     06A5  00AF               	movwf	efgtoa@d^(0+128)
  6156     06A6  2EAC               	goto	l4538
  6157     06A7                     l4536:
  6158     06A7  3009               	movlw	9
  6159     06A8  0021               	movlb	1	; select bank1
  6160     06A9  00AF               	movwf	efgtoa@d^(0+128)
  6161     06AA  3000               	movlw	0
  6162     06AB  00B0               	movwf	(efgtoa@d^(0+128)+1)
  6163     06AC                     l4538:
  6164                           
  6165                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 736:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 737:             if (!pp &
      +                          & (ne < 0)) {
  6166     06AC  082C               	movf	efgtoa@pp^(0+128),w
  6167     06AD  1D03               	btfss	3,2
  6168     06AE  2EB0               	goto	u4711
  6169     06AF  2EB1               	goto	u4710
  6170     06B0                     u4711:
  6171     06B0  2EDA               	goto	l4558
  6172     06B1                     u4710:
  6173     06B1                     l4540:
  6174     06B1  1FA5               	btfss	(efgtoa@ne+1)^(0+128),7
  6175     06B2  2EB4               	goto	u4721
  6176     06B3  2EB5               	goto	u4720
  6177     06B4                     u4721:
  6178     06B4  2EDA               	goto	l4558
  6179     06B5                     u4720:
  6180     06B5                     l4542:
  6181                           
  6182                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 738:             
      +                              dbuf[n++] = '.';
  6183     06B5  0847               	movf	efgtoa@n^(0+128),w
  6184     06B6  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6185     06B7  0086               	movwf	6
  6186     06B8  3001               	movlw	1	; select bank3/4
  6187     06B9  0087               	movwf	7
  6188     06BA  302E               	movlw	46
  6189     06BB  0081               	movwf	1
  6190     06BC                     l4544:
  6191     06BC  3001               	movlw	1
  6192     06BD  07C7               	addwf	efgtoa@n^(0+128),f
  6193     06BE  3000               	movlw	0
  6194     06BF  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6195     06C0                     l4546:
  6196                           
  6197                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 739:             
      +                              --w;
  6198     06C0  30FF               	movlw	255
  6199     06C1  07B6               	addwf	efgtoa@w^(0+128),f
  6200     06C2  30FF               	movlw	255
  6201     06C3  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  6202     06C4                     l4548:
  6203                           
  6204                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 740:             
      +                              pp = 1;
  6205     06C4  01AC               	clrf	efgtoa@pp^(0+128)
  6206     06C5  0AAC               	incf	efgtoa@pp^(0+128),f
  6207     06C6  2EDA               	goto	l4558
  6208     06C7                     l4550:
  6209                           
  6210                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 743:             
      +                              dbuf[n++] = '0';
  6211     06C7  0847               	movf	efgtoa@n^(0+128),w
  6212     06C8  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6213     06C9  0086               	movwf	6
  6214     06CA  3001               	movlw	1	; select bank3/4
  6215     06CB  0087               	movwf	7
  6216     06CC  3030               	movlw	48
  6217     06CD  0081               	movwf	1
  6218     06CE                     l4552:
  6219     06CE  3001               	movlw	1
  6220     06CF  07C7               	addwf	efgtoa@n^(0+128),f
  6221     06D0  3000               	movlw	0
  6222     06D1  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6223     06D2                     l4554:
  6224                           
  6225                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 744:             
      +                              --w;
  6226     06D2  30FF               	movlw	255
  6227     06D3  07B6               	addwf	efgtoa@w^(0+128),f
  6228     06D4  30FF               	movlw	255
  6229     06D5  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  6230     06D6                     l4556:
  6231                           
  6232                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 745:             
      +                              --t;
  6233     06D6  30FF               	movlw	255
  6234     06D7  07A8               	addwf	efgtoa@t^(0+128),f
  6235     06D8  30FF               	movlw	255
  6236     06D9  3DA9               	addwfc	(efgtoa@t+1)^(0+128),f
  6237     06DA                     l4558:
  6238                           
  6239                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 742:             
      +                          while (t) {
  6240     06DA  0828               	movf	efgtoa@t^(0+128),w
  6241     06DB  0429               	iorwf	(efgtoa@t+1)^(0+128),w
  6242     06DC  1D03               	btfss	3,2
  6243     06DD  2EDF               	goto	u4731
  6244     06DE  2EE0               	goto	u4730
  6245     06DF                     u4731:
  6246     06DF  2EC7               	goto	l4550
  6247     06E0                     u4730:
  6248     06E0                     l4560:
  6249                           
  6250                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 747:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  6251     06E0  0847               	movf	efgtoa@n^(0+128),w
  6252     06E1  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6253     06E2  0086               	movwf	6
  6254     06E3  3001               	movlw	1	; select bank3/4
  6255     06E4  0087               	movwf	7
  6256     06E5  082F               	movf	efgtoa@d^(0+128),w
  6257     06E6  3E30               	addlw	48
  6258     06E7  0081               	movwf	1
  6259     06E8                     l4562:
  6260     06E8  3001               	movlw	1
  6261     06E9  07C7               	addwf	efgtoa@n^(0+128),f
  6262     06EA  3000               	movlw	0
  6263     06EB  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6264     06EC                     l4564:
  6265                           
  6266                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 748:             
      +                          --w;
  6267     06EC  30FF               	movlw	255
  6268     06ED  07B6               	addwf	efgtoa@w^(0+128),f
  6269     06EE  30FF               	movlw	255
  6270     06EF  3DB7               	addwfc	(efgtoa@w+1)^(0+128),f
  6271     06F0                     l4566:
  6272                           
  6273                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 749:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 750:         h -= l*
      +                          u.f;
  6274     06F0  0850               	movf	(efgtoa@u+3)^(0+128),w
  6275     06F1  0020               	movlb	0	; select bank0
  6276     06F2  00A7               	movwf	___flmul@a+3
  6277     06F3  0021               	movlb	1	; select bank1
  6278     06F4  084F               	movf	(efgtoa@u+2)^(0+128),w
  6279     06F5  0020               	movlb	0	; select bank0
  6280     06F6  00A6               	movwf	___flmul@a+2
  6281     06F7  0021               	movlb	1	; select bank1
  6282     06F8  084E               	movf	(efgtoa@u+1)^(0+128),w
  6283     06F9  0020               	movlb	0	; select bank0
  6284     06FA  00A5               	movwf	___flmul@a+1
  6285     06FB  0021               	movlb	1	; select bank1
  6286     06FC  084D               	movf	efgtoa@u^(0+128),w
  6287     06FD  0020               	movlb	0	; select bank0
  6288     06FE  00A4               	movwf	___flmul@a
  6289     06FF  0021               	movlb	1	; select bank1
  6290     0700  0845               	movf	(efgtoa@l+3)^(0+128),w
  6291     0701  0020               	movlb	0	; select bank0
  6292     0702  00A3               	movwf	___flmul@b+3
  6293     0703  0021               	movlb	1	; select bank1
  6294     0704  0844               	movf	(efgtoa@l+2)^(0+128),w
  6295     0705  0020               	movlb	0	; select bank0
  6296     0706  00A2               	movwf	___flmul@b+2
  6297     0707  0021               	movlb	1	; select bank1
  6298     0708  0843               	movf	(efgtoa@l+1)^(0+128),w
  6299     0709  0020               	movlb	0	; select bank0
  6300     070A  00A1               	movwf	___flmul@b+1
  6301     070B  0021               	movlb	1	; select bank1
  6302     070C  0842               	movf	efgtoa@l^(0+128),w
  6303     070D  0020               	movlb	0	; select bank0
  6304     070E  00A0               	movwf	___flmul@b
  6305     070F  318D  25C5  3181   	fcall	___flmul
  6306     0712  0020               	movlb	0	; select bank0
  6307     0713  0823               	movf	?___flmul+3,w
  6308     0714  00BD               	movwf	___flsub@a+3
  6309     0715  0822               	movf	?___flmul+2,w
  6310     0716  00BC               	movwf	___flsub@a+2
  6311     0717  0821               	movf	?___flmul+1,w
  6312     0718  00BB               	movwf	___flsub@a+1
  6313     0719  0820               	movf	?___flmul,w
  6314     071A  00BA               	movwf	___flsub@a
  6315     071B  0021               	movlb	1	; select bank1
  6316     071C  0841               	movf	(efgtoa@h+3)^(0+128),w
  6317     071D  0020               	movlb	0	; select bank0
  6318     071E  00C1               	movwf	___flsub@b+3
  6319     071F  0021               	movlb	1	; select bank1
  6320     0720  0840               	movf	(efgtoa@h+2)^(0+128),w
  6321     0721  0020               	movlb	0	; select bank0
  6322     0722  00C0               	movwf	___flsub@b+2
  6323     0723  0021               	movlb	1	; select bank1
  6324     0724  083F               	movf	(efgtoa@h+1)^(0+128),w
  6325     0725  0020               	movlb	0	; select bank0
  6326     0726  00BF               	movwf	___flsub@b+1
  6327     0727  0021               	movlb	1	; select bank1
  6328     0728  083E               	movf	efgtoa@h^(0+128),w
  6329     0729  0020               	movlb	0	; select bank0
  6330     072A  00BE               	movwf	___flsub@b
  6331     072B  319A  225A  3181   	fcall	___flsub
  6332     072E  0020               	movlb	0	; select bank0
  6333     072F  083D               	movf	?___flsub+3,w
  6334     0730  0021               	movlb	1	; select bank1
  6335     0731  00C1               	movwf	(efgtoa@h+3)^(0+128)
  6336     0732  0020               	movlb	0	; select bank0
  6337     0733  083C               	movf	?___flsub+2,w
  6338     0734  0021               	movlb	1	; select bank1
  6339     0735  00C0               	movwf	(efgtoa@h+2)^(0+128)
  6340     0736  0020               	movlb	0	; select bank0
  6341     0737  083B               	movf	?___flsub+1,w
  6342     0738  0021               	movlb	1	; select bank1
  6343     0739  00BF               	movwf	(efgtoa@h+1)^(0+128)
  6344     073A  0020               	movlb	0	; select bank0
  6345     073B  083A               	movf	?___flsub,w
  6346     073C  0021               	movlb	1	; select bank1
  6347     073D  00BE               	movwf	efgtoa@h^(0+128)
  6348     073E                     l4568:
  6349                           
  6350                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 751:         u.f 
      +                          = u.f/10.0;
  6351     073E  3041               	movlw	65
  6352     073F  0020               	movlb	0	; select bank0
  6353     0740  00BD               	movwf	___fldiv@a+3
  6354     0741  3020               	movlw	32
  6355     0742  00BC               	movwf	___fldiv@a+2
  6356     0743  3000               	movlw	0
  6357     0744  00BB               	movwf	___fldiv@a+1
  6358     0745  3000               	movlw	0
  6359     0746  00BA               	movwf	___fldiv@a
  6360     0747  0021               	movlb	1	; select bank1
  6361     0748  0850               	movf	(efgtoa@u+3)^(0+128),w
  6362     0749  0020               	movlb	0	; select bank0
  6363     074A  00C1               	movwf	___fldiv@b+3
  6364     074B  0021               	movlb	1	; select bank1
  6365     074C  084F               	movf	(efgtoa@u+2)^(0+128),w
  6366     074D  0020               	movlb	0	; select bank0
  6367     074E  00C0               	movwf	___fldiv@b+2
  6368     074F  0021               	movlb	1	; select bank1
  6369     0750  084E               	movf	(efgtoa@u+1)^(0+128),w
  6370     0751  0020               	movlb	0	; select bank0
  6371     0752  00BF               	movwf	___fldiv@b+1
  6372     0753  0021               	movlb	1	; select bank1
  6373     0754  084D               	movf	efgtoa@u^(0+128),w
  6374     0755  0020               	movlb	0	; select bank0
  6375     0756  00BE               	movwf	___fldiv@b
  6376     0757  318A  220F  3181   	fcall	___fldiv
  6377     075A  0020               	movlb	0	; select bank0
  6378     075B  083D               	movf	?___fldiv+3,w
  6379     075C  0021               	movlb	1	; select bank1
  6380     075D  00D0               	movwf	(efgtoa@u+3)^(0+128)
  6381     075E  0020               	movlb	0	; select bank0
  6382     075F  083C               	movf	?___fldiv+2,w
  6383     0760  0021               	movlb	1	; select bank1
  6384     0761  00CF               	movwf	(efgtoa@u+2)^(0+128)
  6385     0762  0020               	movlb	0	; select bank0
  6386     0763  083B               	movf	?___fldiv+1,w
  6387     0764  0021               	movlb	1	; select bank1
  6388     0765  00CE               	movwf	(efgtoa@u+1)^(0+128)
  6389     0766  0020               	movlb	0	; select bank0
  6390     0767  083A               	movf	?___fldiv,w
  6391     0768  0021               	movlb	1	; select bank1
  6392     0769  00CD               	movwf	efgtoa@u^(0+128)
  6393     076A                     l4570:
  6394                           
  6395                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 752:         --ne
      +                          ;
  6396     076A  30FF               	movlw	255
  6397     076B  07A4               	addwf	efgtoa@ne^(0+128),f
  6398     076C  30FF               	movlw	255
  6399     076D  3DA5               	addwfc	(efgtoa@ne+1)^(0+128),f
  6400     076E                     l4572:
  6401                           
  6402                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 753:         ++i;
  6403     076E  3001               	movlw	1
  6404     076F  07BC               	addwf	efgtoa@i^(0+128),f
  6405     0770  3000               	movlw	0
  6406     0771  3DBD               	addwfc	(efgtoa@i+1)^(0+128),f
  6407     0772                     l4574:
  6408                           
  6409                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6410     0772  083D               	movf	(efgtoa@i+1)^(0+128),w
  6411     0773  3A80               	xorlw	128
  6412     0774  00A0               	movwf	??_efgtoa^(0+128)
  6413     0775  0832               	movf	(efgtoa@m+1)^(0+128),w
  6414     0776  3A80               	xorlw	128
  6415     0777  0220               	subwf	??_efgtoa^(0+128),w
  6416     0778  1D03               	skipz
  6417     0779  2F7C               	goto	u4745
  6418     077A  0831               	movf	efgtoa@m^(0+128),w
  6419     077B  023C               	subwf	efgtoa@i^(0+128),w
  6420     077C                     u4745:
  6421     077C  1803               	skipnc
  6422     077D  2F7F               	goto	u4741
  6423     077E  2F80               	goto	u4740
  6424     077F                     u4741:
  6425     077F  2F8E               	goto	l4578
  6426     0780                     u4740:
  6427     0780                     l4576:
  6428     0780  0021               	movlb	1	; select bank1
  6429     0781  0848               	movf	(efgtoa@n+1)^(0+128),w
  6430     0782  3A80               	xorlw	128
  6431     0783  00A0               	movwf	??_efgtoa^(0+128)
  6432     0784  3080               	movlw	128
  6433     0785  0220               	subwf	??_efgtoa^(0+128),w
  6434     0786  1D03               	skipz
  6435     0787  2F8A               	goto	u4755
  6436     0788  304B               	movlw	75
  6437     0789  0247               	subwf	efgtoa@n^(0+128),w
  6438     078A                     u4755:
  6439     078A  1C03               	skipc
  6440     078B  2F8D               	goto	u4751
  6441     078C  2F8E               	goto	u4750
  6442     078D                     u4751:
  6443     078D  2E3D               	goto	l4532
  6444     078E                     u4750:
  6445     078E                     l4578:
  6446                           
  6447                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 760:  i = sizeof(
      +                          dbuf) - 1;
  6448     078E  304F               	movlw	79
  6449     078F  0021               	movlb	1	; select bank1
  6450     0790  00BC               	movwf	efgtoa@i^(0+128)
  6451     0791  3000               	movlw	0
  6452     0792  00BD               	movwf	(efgtoa@i^(0+128)+1)
  6453     0793                     l4580:
  6454                           
  6455                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 761:     dbuf[i] 
      +                          = '\0';
  6456     0793  083C               	movf	efgtoa@i^(0+128),w
  6457     0794  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6458     0795  0086               	movwf	6
  6459     0796  3001               	movlw	1	; select bank3/4
  6460     0797  0087               	movwf	7
  6461     0798  0181               	clrf	1
  6462     0799                     l4582:
  6463                           
  6464                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 792:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  6465     0799  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  6466     079A  00F0               	movwf	memcpy@s1
  6467     079B  0848               	movf	(efgtoa@n+1)^(0+128),w
  6468     079C  00F2               	movwf	memcpy@n+1
  6469     079D  0847               	movf	efgtoa@n^(0+128),w
  6470     079E  00F1               	movwf	memcpy@n
  6471     079F  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  6472     07A0  00A0               	movwf	??_efgtoa^(0+128)
  6473     07A1  0847               	movf	efgtoa@n^(0+128),w
  6474     07A2  0220               	subwf	??_efgtoa^(0+128),w
  6475     07A3  073C               	addwf	efgtoa@i^(0+128),w
  6476     07A4  319B  2324  3181   	fcall	_memcpy
  6477     07A7                     l4584:
  6478                           
  6479                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 793:  n = i-n;
  6480     07A7  0021               	movlb	1	; select bank1
  6481     07A8  0847               	movf	efgtoa@n^(0+128),w
  6482     07A9  023C               	subwf	efgtoa@i^(0+128),w
  6483     07AA  00C7               	movwf	efgtoa@n^(0+128)
  6484     07AB  0848               	movf	(efgtoa@n+1)^(0+128),w
  6485     07AC  3B3D               	subwfb	(efgtoa@i+1)^(0+128),w
  6486     07AD  00C8               	movwf	(efgtoa@n+1)^(0+128)
  6487     07AE                     l4586:
  6488                           
  6489                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 794:  i = sign ==
      +                           0 ? 0 : 1;
  6490     07AE  0846               	movf	efgtoa@sign^(0+128),w
  6491     07AF  1D03               	btfss	3,2
  6492     07B0  2FB2               	goto	u4761
  6493     07B1  2FB4               	goto	u4760
  6494     07B2                     u4761:
  6495     07B2  3001               	movlw	1
  6496     07B3  2FB5               	goto	u4770
  6497     07B4                     u4760:
  6498     07B4  3000               	movlw	0
  6499     07B5                     u4770:
  6500     07B5  00A0               	movwf	??_efgtoa^(0+128)
  6501     07B6  01A1               	clrf	(??_efgtoa^(0+128)+1)
  6502     07B7  0820               	movf	??_efgtoa^(0+128),w
  6503     07B8  00BC               	movwf	efgtoa@i^(0+128)
  6504     07B9  0821               	movf	(??_efgtoa+1)^(0+128),w
  6505     07BA  00BD               	movwf	(efgtoa@i+1)^(0+128)
  6506     07BB                     l4588:
  6507                           
  6508                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 805:  if (sign) {
  6509     07BB  0846               	movf	efgtoa@sign^(0+128),w
  6510     07BC  1903               	btfsc	3,2
  6511     07BD  2FBF               	goto	u4781
  6512     07BE  2FC0               	goto	u4780
  6513     07BF                     u4781:
  6514     07BF  2FCB               	goto	l4592
  6515     07C0                     u4780:
  6516     07C0                     l4590:
  6517                           
  6518                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 806:   dbuf[--n] 
      +                          = sign;
  6519     07C0  30FF               	movlw	255
  6520     07C1  07C7               	addwf	efgtoa@n^(0+128),f
  6521     07C2  30FF               	movlw	255
  6522     07C3  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6523     07C4  0847               	movf	efgtoa@n^(0+128),w
  6524     07C5  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6525     07C6  0086               	movwf	6
  6526     07C7  3001               	movlw	1	; select bank3/4
  6527     07C8  0087               	movwf	7
  6528     07C9  0846               	movf	efgtoa@sign^(0+128),w
  6529     07CA  0081               	movwf	1
  6530     07CB                     l4592:
  6531                           
  6532                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 808:  w -= i;
  6533     07CB  083C               	movf	efgtoa@i^(0+128),w
  6534     07CC  02B6               	subwf	efgtoa@w^(0+128),f
  6535     07CD  083D               	movf	(efgtoa@i+1)^(0+128),w
  6536     07CE  3BB7               	subwfb	(efgtoa@w+1)^(0+128),f
  6537     07CF                     l4594:
  6538                           
  6539                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 811:     return (
      +                          void) pad(fp, &dbuf[n], w);
  6540     07CF  0847               	movf	efgtoa@n^(0+128),w
  6541     07D0  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6542     07D1  00FB               	movwf	pad@buf
  6543     07D2  0837               	movf	(efgtoa@w+1)^(0+128),w
  6544     07D3  00FD               	movwf	pad@p+1
  6545     07D4  0836               	movf	efgtoa@w^(0+128),w
  6546     07D5  00FC               	movwf	pad@p
  6547     07D6  0833               	movf	efgtoa@fp^(0+128),w
  6548     07D7  319B  239D  3181   	fcall	_pad
  6549     07DA                     l1085:
  6550     07DA  0008               	return
  6551     07DB                     __end_of_efgtoa:
  6552                           
  6553                           	psect	text11
  6554     1A1C                     __ptext11:	
  6555 ;; *************** function _strcpy *****************
  6556 ;; Defined at:
  6557 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strcpy.c"
  6558 ;; Parameters:    Size  Location     Type
  6559 ;;  dest            1    wreg     PTR unsigned char 
  6560 ;;		 -> dbuf(80), 
  6561 ;;  src             2    0[COMMON] PTR const unsigned char 
  6562 ;;		 -> STR_40(4), STR_37(4), 
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;  dest            1    7[COMMON] PTR unsigned char 
  6565 ;;		 -> dbuf(80), 
  6566 ;;  s               2    4[COMMON] PTR const unsigned char 
  6567 ;;		 -> STR_40(4), STR_37(4), 
  6568 ;;  d               1    6[COMMON] PTR unsigned char 
  6569 ;;		 -> dbuf(80), 
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  1    wreg      PTR unsigned char 
  6572 ;; Registers used:
  6573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6579 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6580 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6581 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6582 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6583 ;;Total ram usage:        8 bytes
  6584 ;; Hardware stack levels used: 1
  6585 ;; This function calls:
  6586 ;;		Nothing
  6587 ;; This function is called by:
  6588 ;;		_efgtoa
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           
  6592     1A1C                     _strcpy:	
  6593                           ;psect for function _strcpy
  6594                           
  6595                           
  6596                           ;incstack = 0
  6597                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  6598                           ;strcpy@dest stored from wreg
  6599     1A1C  00F7               	movwf	strcpy@dest
  6600     1A1D                     l4330:
  6601     1A1D  0871               	movf	strcpy@src+1,w
  6602     1A1E  00F5               	movwf	strcpy@s+1
  6603     1A1F  0870               	movf	strcpy@src,w
  6604     1A20  00F4               	movwf	strcpy@s
  6605     1A21  0877               	movf	strcpy@dest,w
  6606     1A22  00F6               	movwf	strcpy@d
  6607     1A23                     l4332:
  6608     1A23  0876               	movf	strcpy@d,w
  6609     1A24  0086               	movwf	6
  6610     1A25  3001               	movlw	1	; select bank2/3
  6611     1A26  0087               	movwf	7
  6612     1A27  0AF6               	incf	strcpy@d,f
  6613     1A28  0875               	movf	strcpy@s+1,w
  6614     1A29  00F3               	movwf	??_strcpy+1
  6615     1A2A  0874               	movf	strcpy@s,w
  6616     1A2B  00F2               	movwf	??_strcpy
  6617     1A2C  0AF4               	incf	strcpy@s,f
  6618     1A2D  1903               	skipnz
  6619     1A2E  0AF5               	incf	strcpy@s+1,f
  6620     1A2F  0872               	movf	??_strcpy,w
  6621     1A30  0084               	movwf	4
  6622     1A31  0873               	movf	??_strcpy+1,w
  6623     1A32  0085               	movwf	5
  6624     1A33  0800               	movf	0,w	;code access
  6625     1A34  3FC0               	movwi [0]fsr1
  6626     1A35  0889               	movf	9,f
  6627     1A36  1D03               	btfss	3,2
  6628     1A37  2A39               	goto	u4291
  6629     1A38  2A3A               	goto	u4290
  6630     1A39                     u4291:
  6631     1A39  2A23               	goto	l4332
  6632     1A3A                     u4290:
  6633     1A3A                     l1228:
  6634     1A3A  0008               	return
  6635     1A3B                     __end_of_strcpy:
  6636                           
  6637                           	psect	text12
  6638     1B9D                     __ptext12:	
  6639 ;; *************** function _pad *****************
  6640 ;; Defined at:
  6641 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  6642 ;; Parameters:    Size  Location     Type
  6643 ;;  fp              1    wreg     PTR struct _IO_FILE
  6644 ;;		 -> sprintf@f(11), 
  6645 ;;  buf             1   11[COMMON] PTR unsigned char 
  6646 ;;		 -> dbuf(80), 
  6647 ;;  p               2   12[COMMON] int 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;  fp              1    9[BANK0 ] PTR struct _IO_FILE
  6650 ;;		 -> sprintf@f(11), 
  6651 ;;  w               2    7[BANK0 ] int 
  6652 ;;  i               2    5[BANK0 ] int 
  6653 ;; Return value:  Size  Location     Type
  6654 ;;                  1    wreg      void 
  6655 ;; Registers used:
  6656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6657 ;; Tracked objects:
  6658 ;;		On entry : 0/0
  6659 ;;		On exit  : 0/0
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6662 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6663 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6664 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6665 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6666 ;;Total ram usage:        9 bytes
  6667 ;; Hardware stack levels used: 1
  6668 ;; Hardware stack levels required when called: 3
  6669 ;; This function calls:
  6670 ;;		_fputc
  6671 ;;		_fputs
  6672 ;; This function is called by:
  6673 ;;		_efgtoa
  6674 ;; This function uses a non-reentrant model
  6675 ;;
  6676                           
  6677     1B9D                     _pad:	
  6678                           ;psect for function _pad
  6679                           
  6680                           
  6681                           ;incstack = 0
  6682                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6683                           ;pad@fp stored from wreg
  6684     1B9D  0020               	movlb	0	; select bank0
  6685     1B9E  00A9               	movwf	pad@fp
  6686     1B9F                     l4288:
  6687                           
  6688                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 158:     if (flags & (1 << 0)) {
  6689     1B9F  0021               	movlb	1	; select bank1
  6690     1BA0  1C6E               	btfss	_flags^(0+128),0
  6691     1BA1  2BA3               	goto	u4171
  6692     1BA2  2BA4               	goto	u4170
  6693     1BA3                     u4171:
  6694     1BA3  2BAB               	goto	l4292
  6695     1BA4                     u4170:
  6696     1BA4                     l4290:
  6697                           
  6698                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 159:         fput
      +                          s((const char *)buf, fp);
  6699     1BA4  0020               	movlb	0	; select bank0
  6700     1BA5  0829               	movf	pad@fp,w
  6701     1BA6  00F8               	movwf	fputs@fp
  6702     1BA7  087B               	movf	pad@buf,w
  6703     1BA8  319A  22FF  319B   	fcall	_fputs
  6704     1BAB                     l4292:
  6705                           
  6706                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 164:     w = (p <
      +                           0) ? 0 : p;
  6707     1BAB  1BFD               	btfsc	pad@p+1,7
  6708     1BAC  2BAE               	goto	u4181
  6709     1BAD  2BAF               	goto	u4180
  6710     1BAE                     u4181:
  6711     1BAE  2BB5               	goto	l4296
  6712     1BAF                     u4180:
  6713     1BAF                     l4294:
  6714     1BAF  087D               	movf	pad@p+1,w
  6715     1BB0  0020               	movlb	0	; select bank0
  6716     1BB1  00A8               	movwf	pad@w+1
  6717     1BB2  087C               	movf	pad@p,w
  6718     1BB3  00A7               	movwf	pad@w
  6719     1BB4  2BB8               	goto	l1069
  6720     1BB5                     l4296:
  6721     1BB5  0020               	movlb	0	; select bank0
  6722     1BB6  01A7               	clrf	pad@w
  6723     1BB7  01A8               	clrf	pad@w+1
  6724     1BB8                     l1069:
  6725                           
  6726                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  6727     1BB8  01A5               	clrf	pad@i
  6728     1BB9  01A6               	clrf	pad@i+1
  6729                           
  6730                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  6731     1BBA  2BCA               	goto	l4302
  6732     1BBB                     l4298:
  6733                           
  6734                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  6735     1BBB  3020               	movlw	32
  6736     1BBC  00F0               	movwf	fputc@c
  6737     1BBD  3000               	movlw	0
  6738     1BBE  00F1               	movwf	fputc@c+1
  6739     1BBF  0020               	movlb	0	; select bank0
  6740     1BC0  0829               	movf	pad@fp,w
  6741     1BC1  00F2               	movwf	fputc@fp
  6742     1BC2  319C  2483  319B   	fcall	_fputc
  6743     1BC5                     l4300:
  6744                           
  6745                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  6746     1BC5  3001               	movlw	1
  6747     1BC6  0020               	movlb	0	; select bank0
  6748     1BC7  07A5               	addwf	pad@i,f
  6749     1BC8  3000               	movlw	0
  6750     1BC9  3DA6               	addwfc	pad@i+1,f
  6751     1BCA                     l4302:
  6752                           
  6753                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  6754     1BCA  0826               	movf	pad@i+1,w
  6755     1BCB  3A80               	xorlw	128
  6756     1BCC  00A4               	movwf	??_pad
  6757     1BCD  0828               	movf	pad@w+1,w
  6758     1BCE  3A80               	xorlw	128
  6759     1BCF  0224               	subwf	??_pad,w
  6760     1BD0  1D03               	skipz
  6761     1BD1  2BD4               	goto	u4195
  6762     1BD2  0827               	movf	pad@w,w
  6763     1BD3  0225               	subwf	pad@i,w
  6764     1BD4                     u4195:
  6765     1BD4  1C03               	skipc
  6766     1BD5  2BD7               	goto	u4191
  6767     1BD6  2BD8               	goto	u4190
  6768     1BD7                     u4191:
  6769     1BD7  2BBB               	goto	l4298
  6770     1BD8                     u4190:
  6771     1BD8                     l1072:
  6772                           
  6773                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 173:     if (!(fl
      +                          ags & (1 << 0))) {
  6774     1BD8  0021               	movlb	1	; select bank1
  6775     1BD9  186E               	btfsc	_flags^(0+128),0
  6776     1BDA  2BDC               	goto	u4201
  6777     1BDB  2BDD               	goto	u4200
  6778     1BDC                     u4201:
  6779     1BDC  2BE4               	goto	l1074
  6780     1BDD                     u4200:
  6781     1BDD                     l4304:
  6782                           
  6783                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  6784     1BDD  0020               	movlb	0	; select bank0
  6785     1BDE  0829               	movf	pad@fp,w
  6786     1BDF  00F8               	movwf	fputs@fp
  6787     1BE0  087B               	movf	pad@buf,w
  6788     1BE1  319A  22FF  319B   	fcall	_fputs
  6789     1BE4                     l1074:
  6790     1BE4  0008               	return
  6791     1BE5                     __end_of_pad:
  6792                           
  6793                           	psect	text13
  6794     1AFF                     __ptext13:	
  6795 ;; *************** function _fputs *****************
  6796 ;; Defined at:
  6797 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  6798 ;; Parameters:    Size  Location     Type
  6799 ;;  s               1    wreg     PTR const unsigned char 
  6800 ;;		 -> dbuf(80), 
  6801 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  6802 ;;		 -> sprintf@f(11), 
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  6805 ;;		 -> dbuf(80), 
  6806 ;;  i               2    1[BANK0 ] int 
  6807 ;;  c               1    0[BANK0 ] unsigned char 
  6808 ;; Return value:  Size  Location     Type
  6809 ;;                  2    8[COMMON] int 
  6810 ;; Registers used:
  6811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6812 ;; Tracked objects:
  6813 ;;		On entry : 0/0
  6814 ;;		On exit  : 0/0
  6815 ;;		Unchanged: 0/0
  6816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6817 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6818 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6819 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6820 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6821 ;;Total ram usage:        7 bytes
  6822 ;; Hardware stack levels used: 1
  6823 ;; Hardware stack levels required when called: 2
  6824 ;; This function calls:
  6825 ;;		_fputc
  6826 ;; This function is called by:
  6827 ;;		_pad
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831     1AFF                     _fputs:	
  6832                           ;psect for function _fputs
  6833                           
  6834                           
  6835                           ;incstack = 0
  6836                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6837                           ;fputs@s stored from wreg
  6838     1AFF  0020               	movlb	0	; select bank0
  6839     1B00  00A3               	movwf	fputs@s
  6840     1B01                     l3904:
  6841     1B01  01A1               	clrf	fputs@i
  6842     1B02  01A2               	clrf	fputs@i+1
  6843     1B03  2B15               	goto	l3910
  6844     1B04                     l3906:
  6845     1B04  0820               	movf	fputs@c,w
  6846     1B05  00F9               	movwf	??_fputs
  6847     1B06  01FA               	clrf	??_fputs+1
  6848     1B07  0879               	movf	??_fputs,w
  6849     1B08  00F0               	movwf	fputc@c
  6850     1B09  087A               	movf	??_fputs+1,w
  6851     1B0A  00F1               	movwf	fputc@c+1
  6852     1B0B  0878               	movf	fputs@fp,w
  6853     1B0C  00F2               	movwf	fputc@fp
  6854     1B0D  319C  2483  319A   	fcall	_fputc
  6855     1B10                     l3908:
  6856     1B10  3001               	movlw	1
  6857     1B11  0020               	movlb	0	; select bank0
  6858     1B12  07A1               	addwf	fputs@i,f
  6859     1B13  3000               	movlw	0
  6860     1B14  3DA2               	addwfc	fputs@i+1,f
  6861     1B15                     l3910:
  6862     1B15  0821               	movf	fputs@i,w
  6863     1B16  0723               	addwf	fputs@s,w
  6864     1B17  00F9               	movwf	??_fputs
  6865     1B18  0879               	movf	??_fputs,w
  6866     1B19  0086               	movwf	6
  6867     1B1A  3001               	movlw	1	; select bank2/3
  6868     1B1B  0087               	movwf	7
  6869     1B1C  0801               	movf	1,w
  6870     1B1D  00A0               	movwf	fputs@c
  6871     1B1E  0820               	movf	fputs@c,w
  6872     1B1F  1D03               	btfss	3,2
  6873     1B20  2B22               	goto	u3381
  6874     1B21  2B23               	goto	u3380
  6875     1B22                     u3381:
  6876     1B22  2B04               	goto	l3906
  6877     1B23                     u3380:
  6878     1B23                     l1219:
  6879     1B23  0008               	return
  6880     1B24                     __end_of_fputs:
  6881                           
  6882                           	psect	text14
  6883     1C83                     __ptext14:	
  6884 ;; *************** function _fputc *****************
  6885 ;; Defined at:
  6886 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  6887 ;; Parameters:    Size  Location     Type
  6888 ;;  c               2    0[COMMON] int 
  6889 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  6890 ;;		 -> sprintf@f(11), 
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;		None
  6893 ;; Return value:  Size  Location     Type
  6894 ;;                  2    0[COMMON] int 
  6895 ;; Registers used:
  6896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6897 ;; Tracked objects:
  6898 ;;		On entry : 0/0
  6899 ;;		On exit  : 0/0
  6900 ;;		Unchanged: 0/0
  6901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6902 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6904 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6905 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6906 ;;Total ram usage:        8 bytes
  6907 ;; Hardware stack levels used: 1
  6908 ;; Hardware stack levels required when called: 1
  6909 ;; This function calls:
  6910 ;;		_putch
  6911 ;; This function is called by:
  6912 ;;		_pad
  6913 ;;		_vfpfcnvrt
  6914 ;;		_fputs
  6915 ;; This function uses a non-reentrant model
  6916 ;;
  6917                           
  6918     1C83                     _fputc:	
  6919                           ;psect for function _fputc
  6920                           
  6921     1C83                     l3680:	
  6922                           ;incstack = 0
  6923                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6924                           
  6925     1C83  0872               	movf	fputc@fp,w
  6926     1C84  1903               	btfsc	3,2
  6927     1C85  2C87               	goto	u2881
  6928     1C86  2C88               	goto	u2880
  6929     1C87                     u2881:
  6930     1C87  2C8D               	goto	l3684
  6931     1C88                     u2880:
  6932     1C88                     l3682:
  6933     1C88  0872               	movf	fputc@fp,w
  6934     1C89  1D03               	btfss	3,2
  6935     1C8A  2C8C               	goto	u2891
  6936     1C8B  2C8D               	goto	u2890
  6937     1C8C                     u2891:
  6938     1C8C  2C92               	goto	l3686
  6939     1C8D                     u2890:
  6940     1C8D                     l3684:
  6941     1C8D  0870               	movf	fputc@c,w
  6942     1C8E  3180  2005  319C   	fcall	_putch
  6943     1C91  2CD9               	goto	l1211
  6944     1C92                     l3686:
  6945     1C92  0872               	movf	fputc@fp,w
  6946     1C93  3E09               	addlw	9
  6947     1C94  0086               	movwf	6
  6948     1C95  3001               	movlw	1	; select bank2/3
  6949     1C96  0087               	movwf	7
  6950     1C97  0016               	moviw fsr1++
  6951     1C98  0401               	iorwf	1,w
  6952     1C99  1903               	btfsc	3,2
  6953     1C9A  2C9C               	goto	u2901
  6954     1C9B  2C9D               	goto	u2900
  6955     1C9C                     u2901:
  6956     1C9C  2CBD               	goto	l3690
  6957     1C9D                     u2900:
  6958     1C9D                     l3688:
  6959     1C9D  0872               	movf	fputc@fp,w
  6960     1C9E  3E09               	addlw	9
  6961     1C9F  0086               	movwf	6
  6962     1CA0  3001               	movlw	1	; select bank2/3
  6963     1CA1  0087               	movwf	7
  6964     1CA2  3F40               	moviw [0]fsr1
  6965     1CA3  00F3               	movwf	??_fputc
  6966     1CA4  3F41               	moviw [1]fsr1
  6967     1CA5  00F4               	movwf	??_fputc+1
  6968     1CA6  0872               	movf	fputc@fp,w
  6969     1CA7  3E02               	addlw	2
  6970     1CA8  0086               	movwf	6
  6971     1CA9  3001               	movlw	1	; select bank2/3
  6972     1CAA  0087               	movwf	7
  6973     1CAB  3F40               	moviw [0]fsr1
  6974     1CAC  00F5               	movwf	??_fputc+2
  6975     1CAD  3F41               	moviw [1]fsr1
  6976     1CAE  00F6               	movwf	??_fputc+3
  6977     1CAF  0876               	movf	??_fputc+3,w
  6978     1CB0  3A80               	xorlw	128
  6979     1CB1  00F7               	movwf	??_fputc+4
  6980     1CB2  0874               	movf	??_fputc+1,w
  6981     1CB3  3A80               	xorlw	128
  6982     1CB4  0277               	subwf	??_fputc+4,w
  6983     1CB5  1D03               	skipz
  6984     1CB6  2CB9               	goto	u2915
  6985     1CB7  0873               	movf	??_fputc,w
  6986     1CB8  0275               	subwf	??_fputc+2,w
  6987     1CB9                     u2915:
  6988     1CB9  1803               	skipnc
  6989     1CBA  2CBC               	goto	u2911
  6990     1CBB  2CBD               	goto	u2910
  6991     1CBC                     u2911:
  6992     1CBC  2CD9               	goto	l1211
  6993     1CBD                     u2910:
  6994     1CBD                     l3690:
  6995     1CBD  0872               	movf	fputc@fp,w
  6996     1CBE  0086               	movwf	6
  6997     1CBF  3001               	movlw	1	; select bank2/3
  6998     1CC0  0087               	movwf	7
  6999     1CC1  0872               	movf	fputc@fp,w
  7000     1CC2  3E02               	addlw	2
  7001     1CC3  0084               	movwf	4
  7002     1CC4  3001               	movlw	1	; select bank2/3
  7003     1CC5  0085               	movwf	5
  7004     1CC6  0800               	movf	0,w
  7005     1CC7  0701               	addwf	1,w
  7006     1CC8  00F3               	movwf	??_fputc
  7007     1CC9  0873               	movf	??_fputc,w
  7008     1CCA  0086               	movwf	6
  7009     1CCB  3001               	movlw	1	; select bank2/3
  7010     1CCC  0087               	movwf	7
  7011     1CCD  0870               	movf	fputc@c,w
  7012     1CCE  0081               	movwf	1
  7013     1CCF                     l3692:
  7014     1CCF  0872               	movf	fputc@fp,w
  7015     1CD0  3E02               	addlw	2
  7016     1CD1  0086               	movwf	6
  7017     1CD2  3001               	movlw	1	; select bank2/3
  7018     1CD3  0087               	movwf	7
  7019     1CD4  3001               	movlw	1
  7020     1CD5  0781               	addwf	1,f
  7021     1CD6  3141               	addfsr 1,1
  7022     1CD7  1803               	skipnc
  7023     1CD8  0A81               	incf	1,f
  7024     1CD9                     l1211:
  7025     1CD9  0008               	return
  7026     1CDA                     __end_of_fputc:
  7027                           
  7028                           	psect	text15
  7029     0005                     __ptext15:	
  7030 ;; *************** function _putch *****************
  7031 ;; Defined at:
  7032 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  7033 ;; Parameters:    Size  Location     Type
  7034 ;;  c               1    wreg     unsigned char 
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;  c               1    0[COMMON] unsigned char 
  7037 ;; Return value:  Size  Location     Type
  7038 ;;                  1    wreg      void 
  7039 ;; Registers used:
  7040 ;;		wreg
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7050 ;;Total ram usage:        0 bytes
  7051 ;; Hardware stack levels used: 1
  7052 ;; This function calls:
  7053 ;;		Nothing
  7054 ;; This function is called by:
  7055 ;;		_fputc
  7056 ;; This function uses a non-reentrant model
  7057 ;;
  7058                           
  7059     0005                     _putch:	
  7060                           ;psect for function _putch
  7061                           
  7062     0005                     l1222:	
  7063                           ;incstack = 0
  7064                           ; Regs used in _putch: [wreg]
  7065                           
  7066     0005  0008               	return
  7067     0006                     __end_of_putch:
  7068                           
  7069                           	psect	text16
  7070     1B24                     __ptext16:	
  7071 ;; *************** function _memcpy *****************
  7072 ;; Defined at:
  7073 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memcpy.c"
  7074 ;; Parameters:    Size  Location     Type
  7075 ;;  d1              1    wreg     PTR void 
  7076 ;;		 -> dbuf(80), 
  7077 ;;  s1              1    0[COMMON] PTR const void 
  7078 ;;		 -> dbuf(80), 
  7079 ;;  n               2    1[COMMON] unsigned int 
  7080 ;; Auto vars:     Size  Location     Type
  7081 ;;  d1              1    5[COMMON] PTR void 
  7082 ;;		 -> dbuf(80), 
  7083 ;;  s               1    7[COMMON] PTR const unsigned char 
  7084 ;;		 -> dbuf(80), 
  7085 ;;  d               1    6[COMMON] PTR unsigned char 
  7086 ;;		 -> dbuf(80), 
  7087 ;;  tmp             1    4[COMMON] unsigned char 
  7088 ;; Return value:  Size  Location     Type
  7089 ;;                  1    wreg      PTR void 
  7090 ;; Registers used:
  7091 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7092 ;; Tracked objects:
  7093 ;;		On entry : 0/0
  7094 ;;		On exit  : 0/0
  7095 ;;		Unchanged: 0/0
  7096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7097 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7098 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7099 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7100 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7101 ;;Total ram usage:        8 bytes
  7102 ;; Hardware stack levels used: 1
  7103 ;; This function calls:
  7104 ;;		Nothing
  7105 ;; This function is called by:
  7106 ;;		_efgtoa
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110     1B24                     _memcpy:	
  7111                           ;psect for function _memcpy
  7112                           
  7113                           
  7114                           ;incstack = 0
  7115                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  7116                           ;memcpy@d1 stored from wreg
  7117     1B24  00F5               	movwf	memcpy@d1
  7118     1B25                     l4368:
  7119     1B25  0870               	movf	memcpy@s1,w
  7120     1B26  00F7               	movwf	memcpy@s
  7121     1B27  0875               	movf	memcpy@d1,w
  7122     1B28  00F6               	movwf	memcpy@d
  7123     1B29  2B3E               	goto	l1196
  7124     1B2A                     l4370:
  7125     1B2A  0877               	movf	memcpy@s,w
  7126     1B2B  0086               	movwf	6
  7127     1B2C  3001               	movlw	1	; select bank2/3
  7128     1B2D  0087               	movwf	7
  7129     1B2E  0801               	movf	1,w
  7130     1B2F  00F4               	movwf	memcpy@tmp
  7131     1B30                     l4372:
  7132     1B30  3001               	movlw	1
  7133     1B31  00F3               	movwf	??_memcpy
  7134     1B32  0873               	movf	??_memcpy,w
  7135     1B33  07F7               	addwf	memcpy@s,f
  7136     1B34                     l4374:
  7137     1B34  0876               	movf	memcpy@d,w
  7138     1B35  0086               	movwf	6
  7139     1B36  3001               	movlw	1	; select bank2/3
  7140     1B37  0087               	movwf	7
  7141     1B38  0874               	movf	memcpy@tmp,w
  7142     1B39  0081               	movwf	1
  7143     1B3A  3001               	movlw	1
  7144     1B3B  00F3               	movwf	??_memcpy
  7145     1B3C  0873               	movf	??_memcpy,w
  7146     1B3D  07F6               	addwf	memcpy@d,f
  7147     1B3E                     l1196:
  7148     1B3E  3001               	movlw	1
  7149     1B3F  02F1               	subwf	memcpy@n,f
  7150     1B40  3000               	movlw	0
  7151     1B41  3BF2               	subwfb	memcpy@n+1,f
  7152     1B42  0A71               	incf	memcpy@n,w
  7153     1B43  1D03               	skipz
  7154     1B44  2B49               	goto	u4421
  7155     1B45  0A72               	incf	memcpy@n+1,w
  7156     1B46  1D03               	btfss	3,2
  7157     1B47  2B49               	goto	u4421
  7158     1B48  2B4A               	goto	u4420
  7159     1B49                     u4421:
  7160     1B49  2B2A               	goto	l4370
  7161     1B4A                     u4420:
  7162     1B4A                     l1199:
  7163     1B4A  0008               	return
  7164     1B4B                     __end_of_memcpy:
  7165                           
  7166                           	psect	text17
  7167     1ABA                     __ptext17:	
  7168 ;; *************** function _labs *****************
  7169 ;; Defined at:
  7170 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\labs.c"
  7171 ;; Parameters:    Size  Location     Type
  7172 ;;  a               4    0[COMMON] long 
  7173 ;; Auto vars:     Size  Location     Type
  7174 ;;		None
  7175 ;; Return value:  Size  Location     Type
  7176 ;;                  4    0[COMMON] long 
  7177 ;; Registers used:
  7178 ;;		wreg, status,2, status,0
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7184 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7187 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7188 ;;Total ram usage:        4 bytes
  7189 ;; Hardware stack levels used: 1
  7190 ;; This function calls:
  7191 ;;		Nothing
  7192 ;; This function is called by:
  7193 ;;		_efgtoa
  7194 ;; This function uses a non-reentrant model
  7195 ;;
  7196                           
  7197     1ABA                     _labs:	
  7198                           ;psect for function _labs
  7199                           
  7200     1ABA                     l4334:	
  7201                           ;incstack = 0
  7202                           ; Regs used in _labs: [wreg+status,2+status,0]
  7203                           
  7204     1ABA  1BF3               	btfsc	labs@a+3,7
  7205     1ABB  2ACB               	goto	u4300
  7206     1ABC  0873               	movf	labs@a+3,w
  7207     1ABD  1D03               	btfss	3,2
  7208     1ABE  2ACA               	goto	u4301
  7209     1ABF  0872               	movf	labs@a+2,w
  7210     1AC0  1D03               	btfss	3,2
  7211     1AC1  2ACA               	goto	u4301
  7212     1AC2  0871               	movf	labs@a+1,w
  7213     1AC3  1D03               	btfss	3,2
  7214     1AC4  2ACA               	goto	u4301
  7215     1AC5  3001               	movlw	1
  7216     1AC6  0270               	subwf	labs@a,w
  7217     1AC7  1803               	btfsc	3,0
  7218     1AC8  2ACA               	goto	u4301
  7219     1AC9  2ACB               	goto	u4300
  7220     1ACA                     u4301:
  7221     1ACA  2ADB               	goto	l1190
  7222     1ACB                     u4300:
  7223     1ACB                     l4336:
  7224     1ACB  0970               	comf	labs@a,w
  7225     1ACC  00F0               	movwf	?_labs
  7226     1ACD  0971               	comf	labs@a+1,w
  7227     1ACE  00F1               	movwf	?_labs+1
  7228     1ACF  0972               	comf	labs@a+2,w
  7229     1AD0  00F2               	movwf	?_labs+2
  7230     1AD1  0973               	comf	labs@a+3,w
  7231     1AD2  00F3               	movwf	?_labs+3
  7232     1AD3  0AF0               	incf	?_labs,f
  7233     1AD4  1903               	skipnz
  7234     1AD5  0AF1               	incf	?_labs+1,f
  7235     1AD6  1903               	skipnz
  7236     1AD7  0AF2               	incf	?_labs+2,f
  7237     1AD8  1903               	skipnz
  7238     1AD9  0AF3               	incf	?_labs+3,f
  7239     1ADA  2ADB               	goto	l1193
  7240     1ADB                     l1190:
  7241     1ADB                     l1193:
  7242     1ADB  0008               	return
  7243     1ADC                     __end_of_labs:
  7244                           
  7245                           	psect	text18
  7246     1E28                     __ptext18:	
  7247 ;; *************** function _floorf *****************
  7248 ;; Defined at:
  7249 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\floorf.c"
  7250 ;; Parameters:    Size  Location     Type
  7251 ;;  x               4   52[BANK0 ] float 
  7252 ;; Auto vars:     Size  Location     Type
  7253 ;;  u               4   68[BANK0 ] struct .
  7254 ;;  m               4   62[BANK0 ] unsigned long 
  7255 ;;  e               2   66[BANK0 ] int 
  7256 ;; Return value:  Size  Location     Type
  7257 ;;                  4   52[BANK0 ] float 
  7258 ;; Registers used:
  7259 ;;		wreg, status,2, status,0
  7260 ;; Tracked objects:
  7261 ;;		On entry : 0/0
  7262 ;;		On exit  : 0/0
  7263 ;;		Unchanged: 0/0
  7264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7265 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7266 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7267 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7268 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7269 ;;Total ram usage:       20 bytes
  7270 ;; Hardware stack levels used: 1
  7271 ;; This function calls:
  7272 ;;		Nothing
  7273 ;; This function is called by:
  7274 ;;		_efgtoa
  7275 ;; This function uses a non-reentrant model
  7276 ;;
  7277                           
  7278     1E28                     _floorf:	
  7279                           ;psect for function _floorf
  7280                           
  7281     1E28                     l4338:	
  7282                           ;incstack = 0
  7283                           ; Regs used in _floorf: [wreg+status,2+status,0]
  7284                           
  7285     1E28  0022               	movlb	2	; select bank2
  7286     1E29  0823               	movf	(floorf@F526+3)^(0+256),w
  7287     1E2A  0020               	movlb	0	; select bank0
  7288     1E2B  00E7               	movwf	floorf@u+3
  7289     1E2C  0022               	movlb	2	; select bank2
  7290     1E2D  0822               	movf	(floorf@F526+2)^(0+256),w
  7291     1E2E  0020               	movlb	0	; select bank0
  7292     1E2F  00E6               	movwf	floorf@u+2
  7293     1E30  0022               	movlb	2	; select bank2
  7294     1E31  0821               	movf	(floorf@F526+1)^(0+256),w
  7295     1E32  0020               	movlb	0	; select bank0
  7296     1E33  00E5               	movwf	floorf@u+1
  7297     1E34  0022               	movlb	2	; select bank2
  7298     1E35  0820               	movf	floorf@F526^(0+256),w
  7299     1E36  0020               	movlb	0	; select bank0
  7300     1E37  00E4               	movwf	floorf@u
  7301     1E38  0857               	movf	floorf@x+3,w
  7302     1E39  00E7               	movwf	floorf@u+3
  7303     1E3A  0856               	movf	floorf@x+2,w
  7304     1E3B  00E6               	movwf	floorf@u+2
  7305     1E3C  0855               	movf	floorf@x+1,w
  7306     1E3D  00E5               	movwf	floorf@u+1
  7307     1E3E  0854               	movf	floorf@x,w
  7308     1E3F  00E4               	movwf	floorf@u
  7309     1E40                     l4340:
  7310     1E40  0864               	movf	floorf@u,w
  7311     1E41  00D8               	movwf	??_floorf
  7312     1E42  0865               	movf	floorf@u+1,w
  7313     1E43  00D9               	movwf	??_floorf+1
  7314     1E44  0866               	movf	floorf@u+2,w
  7315     1E45  00DA               	movwf	??_floorf+2
  7316     1E46  0867               	movf	floorf@u+3,w
  7317     1E47  00DB               	movwf	??_floorf+3
  7318     1E48  3017               	movlw	23
  7319     1E49                     u4315:
  7320     1E49  36DB               	lsrf	??_floorf+3,f
  7321     1E4A  0CDA               	rrf	??_floorf+2,f
  7322     1E4B  0CD9               	rrf	??_floorf+1,f
  7323     1E4C  0CD8               	rrf	??_floorf,f
  7324     1E4D                     u4310:
  7325     1E4D  0B89               	decfsz	9,f
  7326     1E4E  2E49               	goto	u4315
  7327     1E4F  30FF               	movlw	255
  7328     1E50  0558               	andwf	??_floorf,w
  7329     1E51  00DC               	movwf	??_floorf+4
  7330     1E52  3000               	movlw	0
  7331     1E53  0559               	andwf	??_floorf+1,w
  7332     1E54  00DD               	movwf	??_floorf+5
  7333     1E55  085C               	movf	??_floorf+4,w
  7334     1E56  3E81               	addlw	129
  7335     1E57  00E2               	movwf	floorf@e
  7336     1E58  30FF               	movlw	255
  7337     1E59  3D5D               	addwfc	??_floorf+5,w
  7338     1E5A  00E3               	movwf	floorf@e+1
  7339     1E5B                     l4342:
  7340     1E5B  0863               	movf	floorf@e+1,w
  7341     1E5C  3A80               	xorlw	128
  7342     1E5D  00D8               	movwf	??_floorf
  7343     1E5E  3080               	movlw	128
  7344     1E5F  0258               	subwf	??_floorf,w
  7345     1E60  1D03               	skipz
  7346     1E61  2E64               	goto	u4325
  7347     1E62  3017               	movlw	23
  7348     1E63  0262               	subwf	floorf@e,w
  7349     1E64                     u4325:
  7350     1E64  1C03               	skipc
  7351     1E65  2E67               	goto	u4321
  7352     1E66  2E68               	goto	u4320
  7353     1E67                     u4321:
  7354     1E67  2E69               	goto	l1178
  7355     1E68                     u4320:
  7356     1E68                     l4344:
  7357     1E68  2F12               	goto	l1179
  7358     1E69                     l1178:
  7359     1E69  0020               	movlb	0	; select bank0
  7360     1E6A  1BE3               	btfsc	floorf@e+1,7
  7361     1E6B  2E6D               	goto	u4331
  7362     1E6C  2E6E               	goto	u4330
  7363     1E6D                     u4331:
  7364     1E6D  2ECB               	goto	l4358
  7365     1E6E                     u4330:
  7366     1E6E                     l4346:
  7367     1E6E  30FF               	movlw	255
  7368     1E6F  00D8               	movwf	??_floorf
  7369     1E70  30FF               	movlw	255
  7370     1E71  00D9               	movwf	??_floorf+1
  7371     1E72  307F               	movlw	127
  7372     1E73  00DA               	movwf	??_floorf+2
  7373     1E74  3000               	movlw	0
  7374     1E75  00DB               	movwf	??_floorf+3
  7375     1E76  0A62               	incf	floorf@e,w
  7376     1E77  2E7C               	goto	u4340
  7377     1E78                     u4345:
  7378     1E78  37DB               	asrf	??_floorf+3,f
  7379     1E79  0CDA               	rrf	??_floorf+2,f
  7380     1E7A  0CD9               	rrf	??_floorf+1,f
  7381     1E7B  0CD8               	rrf	??_floorf,f
  7382     1E7C                     u4340:
  7383     1E7C  0B89               	decfsz	9,f
  7384     1E7D  2E78               	goto	u4345
  7385     1E7E  085B               	movf	??_floorf+3,w
  7386     1E7F  00E1               	movwf	floorf@m+3
  7387     1E80  085A               	movf	??_floorf+2,w
  7388     1E81  00E0               	movwf	floorf@m+2
  7389     1E82  0859               	movf	??_floorf+1,w
  7390     1E83  00DF               	movwf	floorf@m+1
  7391     1E84  0858               	movf	??_floorf,w
  7392     1E85  00DE               	movwf	floorf@m
  7393     1E86                     l4348:
  7394     1E86  0864               	movf	floorf@u,w
  7395     1E87  055E               	andwf	floorf@m,w
  7396     1E88  00D8               	movwf	??_floorf
  7397     1E89  0865               	movf	floorf@u+1,w
  7398     1E8A  055F               	andwf	floorf@m+1,w
  7399     1E8B  00D9               	movwf	??_floorf+1
  7400     1E8C  0866               	movf	floorf@u+2,w
  7401     1E8D  0560               	andwf	floorf@m+2,w
  7402     1E8E  00DA               	movwf	??_floorf+2
  7403     1E8F  0867               	movf	floorf@u+3,w
  7404     1E90  0561               	andwf	floorf@m+3,w
  7405     1E91  00DB               	movwf	??_floorf+3
  7406     1E92  085B               	movf	??_floorf+3,w
  7407     1E93  045A               	iorwf	??_floorf+2,w
  7408     1E94  0459               	iorwf	??_floorf+1,w
  7409     1E95  0458               	iorwf	??_floorf,w
  7410     1E96  1D03               	skipz
  7411     1E97  2E99               	goto	u4351
  7412     1E98  2E9A               	goto	u4350
  7413     1E99                     u4351:
  7414     1E99  2E9B               	goto	l4352
  7415     1E9A                     u4350:
  7416     1E9A  2E68               	goto	l4344
  7417     1E9B                     l4352:
  7418     1E9B  0864               	movf	floorf@u,w
  7419     1E9C  00D8               	movwf	??_floorf
  7420     1E9D  0865               	movf	floorf@u+1,w
  7421     1E9E  00D9               	movwf	??_floorf+1
  7422     1E9F  0866               	movf	floorf@u+2,w
  7423     1EA0  00DA               	movwf	??_floorf+2
  7424     1EA1  0867               	movf	floorf@u+3,w
  7425     1EA2  00DB               	movwf	??_floorf+3
  7426     1EA3  301F               	movlw	31
  7427     1EA4                     u4365:
  7428     1EA4  36DB               	lsrf	??_floorf+3,f
  7429     1EA5  0CDA               	rrf	??_floorf+2,f
  7430     1EA6  0CD9               	rrf	??_floorf+1,f
  7431     1EA7  0CD8               	rrf	??_floorf,f
  7432     1EA8                     u4360:
  7433     1EA8  0B89               	decfsz	9,f
  7434     1EA9  2EA4               	goto	u4365
  7435     1EAA  085B               	movf	??_floorf+3,w
  7436     1EAB  045A               	iorwf	??_floorf+2,w
  7437     1EAC  0459               	iorwf	??_floorf+1,w
  7438     1EAD  0458               	iorwf	??_floorf,w
  7439     1EAE  1903               	skipnz
  7440     1EAF  2EB1               	goto	u4371
  7441     1EB0  2EB2               	goto	u4370
  7442     1EB1                     u4371:
  7443     1EB1  2EBA               	goto	l4356
  7444     1EB2                     u4370:
  7445     1EB2                     l4354:
  7446     1EB2  085E               	movf	floorf@m,w
  7447     1EB3  07E4               	addwf	floorf@u,f
  7448     1EB4  085F               	movf	floorf@m+1,w
  7449     1EB5  3DE5               	addwfc	floorf@u+1,f
  7450     1EB6  0860               	movf	floorf@m+2,w
  7451     1EB7  3DE6               	addwfc	floorf@u+2,f
  7452     1EB8  0861               	movf	floorf@m+3,w
  7453     1EB9  3DE7               	addwfc	floorf@u+3,f
  7454     1EBA                     l4356:
  7455     1EBA  095E               	comf	floorf@m,w
  7456     1EBB  00D8               	movwf	??_floorf
  7457     1EBC  095F               	comf	floorf@m+1,w
  7458     1EBD  00D9               	movwf	??_floorf+1
  7459     1EBE  0960               	comf	floorf@m+2,w
  7460     1EBF  00DA               	movwf	??_floorf+2
  7461     1EC0  0961               	comf	floorf@m+3,w
  7462     1EC1  00DB               	movwf	??_floorf+3
  7463     1EC2  0858               	movf	??_floorf,w
  7464     1EC3  05E4               	andwf	floorf@u,f
  7465     1EC4  0859               	movf	??_floorf+1,w
  7466     1EC5  05E5               	andwf	floorf@u+1,f
  7467     1EC6  085A               	movf	??_floorf+2,w
  7468     1EC7  05E6               	andwf	floorf@u+2,f
  7469     1EC8  085B               	movf	??_floorf+3,w
  7470     1EC9  05E7               	andwf	floorf@u+3,f
  7471     1ECA  2F0A               	goto	l1183
  7472     1ECB                     l4358:
  7473     1ECB  0864               	movf	floorf@u,w
  7474     1ECC  00D8               	movwf	??_floorf
  7475     1ECD  0865               	movf	floorf@u+1,w
  7476     1ECE  00D9               	movwf	??_floorf+1
  7477     1ECF  0866               	movf	floorf@u+2,w
  7478     1ED0  00DA               	movwf	??_floorf+2
  7479     1ED1  0867               	movf	floorf@u+3,w
  7480     1ED2  00DB               	movwf	??_floorf+3
  7481     1ED3  301F               	movlw	31
  7482     1ED4                     u4385:
  7483     1ED4  36DB               	lsrf	??_floorf+3,f
  7484     1ED5  0CDA               	rrf	??_floorf+2,f
  7485     1ED6  0CD9               	rrf	??_floorf+1,f
  7486     1ED7  0CD8               	rrf	??_floorf,f
  7487     1ED8                     u4380:
  7488     1ED8  0B89               	decfsz	9,f
  7489     1ED9  2ED4               	goto	u4385
  7490     1EDA  085B               	movf	??_floorf+3,w
  7491     1EDB  045A               	iorwf	??_floorf+2,w
  7492     1EDC  0459               	iorwf	??_floorf+1,w
  7493     1EDD  0458               	iorwf	??_floorf,w
  7494     1EDE  1D03               	skipz
  7495     1EDF  2EE1               	goto	u4391
  7496     1EE0  2EE2               	goto	u4390
  7497     1EE1                     u4391:
  7498     1EE1  2EEB               	goto	l4362
  7499     1EE2                     u4390:
  7500     1EE2                     l4360:
  7501     1EE2  3000               	movlw	0
  7502     1EE3  00E7               	movwf	floorf@u+3
  7503     1EE4  3000               	movlw	0
  7504     1EE5  00E6               	movwf	floorf@u+2
  7505     1EE6  3000               	movlw	0
  7506     1EE7  00E5               	movwf	floorf@u+1
  7507     1EE8  3000               	movlw	0
  7508     1EE9  00E4               	movwf	floorf@u
  7509     1EEA  2F0A               	goto	l1183
  7510     1EEB                     l4362:
  7511     1EEB  0864               	movf	floorf@u,w
  7512     1EEC  00D8               	movwf	??_floorf
  7513     1EED  0865               	movf	floorf@u+1,w
  7514     1EEE  00D9               	movwf	??_floorf+1
  7515     1EEF  0866               	movf	floorf@u+2,w
  7516     1EF0  00DA               	movwf	??_floorf+2
  7517     1EF1  0867               	movf	floorf@u+3,w
  7518     1EF2  00DB               	movwf	??_floorf+3
  7519     1EF3  3001               	movlw	1
  7520     1EF4                     u4405:
  7521     1EF4  35D8               	lslf	??_floorf,f
  7522     1EF5  0DD9               	rlf	??_floorf+1,f
  7523     1EF6  0DDA               	rlf	??_floorf+2,f
  7524     1EF7  0DDB               	rlf	??_floorf+3,f
  7525     1EF8                     u4400:
  7526     1EF8  0B89               	decfsz	9,f
  7527     1EF9  2EF4               	goto	u4405
  7528     1EFA  085B               	movf	??_floorf+3,w
  7529     1EFB  045A               	iorwf	??_floorf+2,w
  7530     1EFC  0459               	iorwf	??_floorf+1,w
  7531     1EFD  0458               	iorwf	??_floorf,w
  7532     1EFE  1903               	skipnz
  7533     1EFF  2F01               	goto	u4411
  7534     1F00  2F02               	goto	u4410
  7535     1F01                     u4411:
  7536     1F01  2F0A               	goto	l1183
  7537     1F02                     u4410:
  7538     1F02                     l4364:
  7539     1F02  30BF               	movlw	191
  7540     1F03  00E7               	movwf	floorf@u+3
  7541     1F04  3080               	movlw	128
  7542     1F05  00E6               	movwf	floorf@u+2
  7543     1F06  3000               	movlw	0
  7544     1F07  00E5               	movwf	floorf@u+1
  7545     1F08  3000               	movlw	0
  7546     1F09  00E4               	movwf	floorf@u
  7547     1F0A                     l1183:
  7548     1F0A  0867               	movf	floorf@u+3,w
  7549     1F0B  00D7               	movwf	?_floorf+3
  7550     1F0C  0866               	movf	floorf@u+2,w
  7551     1F0D  00D6               	movwf	?_floorf+2
  7552     1F0E  0865               	movf	floorf@u+1,w
  7553     1F0F  00D5               	movwf	?_floorf+1
  7554     1F10  0864               	movf	floorf@u,w
  7555     1F11  00D4               	movwf	?_floorf
  7556     1F12                     l1179:
  7557     1F12  0008               	return
  7558     1F13                     __end_of_floorf:
  7559                           
  7560                           	psect	text19
  7561     1DA9                     __ptext19:	
  7562 ;; *************** function ___fpclassifyf *****************
  7563 ;; Defined at:
  7564 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__fpclassifyf.c"
  7565 ;; Parameters:    Size  Location     Type
  7566 ;;  x               4    0[COMMON] float 
  7567 ;; Auto vars:     Size  Location     Type
  7568 ;;  u               4    2[BANK0 ] struct .
  7569 ;;  e               2    0[BANK0 ] int 
  7570 ;; Return value:  Size  Location     Type
  7571 ;;                  2    0[COMMON] int 
  7572 ;; Registers used:
  7573 ;;		wreg, status,2, status,0
  7574 ;; Tracked objects:
  7575 ;;		On entry : 0/0
  7576 ;;		On exit  : 0/0
  7577 ;;		Unchanged: 0/0
  7578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7579 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7580 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7581 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7582 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7583 ;;Total ram usage:       16 bytes
  7584 ;; Hardware stack levels used: 1
  7585 ;; This function calls:
  7586 ;;		Nothing
  7587 ;; This function is called by:
  7588 ;;		_efgtoa
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           
  7592     1DA9                     ___fpclassifyf:	
  7593                           ;psect for function ___fpclassifyf
  7594                           
  7595     1DA9                     l4306:	
  7596                           ;incstack = 0
  7597                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  7598                           
  7599     1DA9  0022               	movlb	2	; select bank2
  7600     1DAA  0827               	movf	(___fpclassifyf@F465+3)^(0+256),w
  7601     1DAB  0020               	movlb	0	; select bank0
  7602     1DAC  00A5               	movwf	___fpclassifyf@u+3
  7603     1DAD  0022               	movlb	2	; select bank2
  7604     1DAE  0826               	movf	(___fpclassifyf@F465+2)^(0+256),w
  7605     1DAF  0020               	movlb	0	; select bank0
  7606     1DB0  00A4               	movwf	___fpclassifyf@u+2
  7607     1DB1  0022               	movlb	2	; select bank2
  7608     1DB2  0825               	movf	(___fpclassifyf@F465+1)^(0+256),w
  7609     1DB3  0020               	movlb	0	; select bank0
  7610     1DB4  00A3               	movwf	___fpclassifyf@u+1
  7611     1DB5  0022               	movlb	2	; select bank2
  7612     1DB6  0824               	movf	___fpclassifyf@F465^(0+256),w
  7613     1DB7  0020               	movlb	0	; select bank0
  7614     1DB8  00A2               	movwf	___fpclassifyf@u
  7615     1DB9  0873               	movf	___fpclassifyf@x+3,w
  7616     1DBA  00A5               	movwf	___fpclassifyf@u+3
  7617     1DBB  0872               	movf	___fpclassifyf@x+2,w
  7618     1DBC  00A4               	movwf	___fpclassifyf@u+2
  7619     1DBD  0871               	movf	___fpclassifyf@x+1,w
  7620     1DBE  00A3               	movwf	___fpclassifyf@u+1
  7621     1DBF  0870               	movf	___fpclassifyf@x,w
  7622     1DC0  00A2               	movwf	___fpclassifyf@u
  7623     1DC1                     l4308:
  7624     1DC1  0822               	movf	___fpclassifyf@u,w
  7625     1DC2  00F4               	movwf	??___fpclassifyf
  7626     1DC3  0823               	movf	___fpclassifyf@u+1,w
  7627     1DC4  00F5               	movwf	??___fpclassifyf+1
  7628     1DC5  0824               	movf	___fpclassifyf@u+2,w
  7629     1DC6  00F6               	movwf	??___fpclassifyf+2
  7630     1DC7  0825               	movf	___fpclassifyf@u+3,w
  7631     1DC8  00F7               	movwf	??___fpclassifyf+3
  7632     1DC9  3017               	movlw	23
  7633     1DCA                     u4215:
  7634     1DCA  36F7               	lsrf	??___fpclassifyf+3,f
  7635     1DCB  0CF6               	rrf	??___fpclassifyf+2,f
  7636     1DCC  0CF5               	rrf	??___fpclassifyf+1,f
  7637     1DCD  0CF4               	rrf	??___fpclassifyf,f
  7638     1DCE                     u4210:
  7639     1DCE  0B89               	decfsz	9,f
  7640     1DCF  2DCA               	goto	u4215
  7641     1DD0  30FF               	movlw	255
  7642     1DD1  0574               	andwf	??___fpclassifyf,w
  7643     1DD2  00A0               	movwf	___fpclassifyf@e
  7644     1DD3  3000               	movlw	0
  7645     1DD4  0575               	andwf	??___fpclassifyf+1,w
  7646     1DD5  00A1               	movwf	___fpclassifyf@e+1
  7647     1DD6                     l4310:
  7648     1DD6  0820               	movf	___fpclassifyf@e,w
  7649     1DD7  0421               	iorwf	___fpclassifyf@e+1,w
  7650     1DD8  1D03               	btfss	3,2
  7651     1DD9  2DDB               	goto	u4221
  7652     1DDA  2DDC               	goto	u4220
  7653     1DDB                     u4221:
  7654     1DDB  2DFD               	goto	l4320
  7655     1DDC                     u4220:
  7656     1DDC                     l4312:
  7657     1DDC  0822               	movf	___fpclassifyf@u,w
  7658     1DDD  00F4               	movwf	??___fpclassifyf
  7659     1DDE  0823               	movf	___fpclassifyf@u+1,w
  7660     1DDF  00F5               	movwf	??___fpclassifyf+1
  7661     1DE0  0824               	movf	___fpclassifyf@u+2,w
  7662     1DE1  00F6               	movwf	??___fpclassifyf+2
  7663     1DE2  0825               	movf	___fpclassifyf@u+3,w
  7664     1DE3  00F7               	movwf	??___fpclassifyf+3
  7665     1DE4  3001               	movlw	1
  7666     1DE5                     u4235:
  7667     1DE5  35F4               	lslf	??___fpclassifyf,f
  7668     1DE6  0DF5               	rlf	??___fpclassifyf+1,f
  7669     1DE7  0DF6               	rlf	??___fpclassifyf+2,f
  7670     1DE8  0DF7               	rlf	??___fpclassifyf+3,f
  7671     1DE9                     u4230:
  7672     1DE9  0B89               	decfsz	9,f
  7673     1DEA  2DE5               	goto	u4235
  7674     1DEB  0877               	movf	??___fpclassifyf+3,w
  7675     1DEC  0476               	iorwf	??___fpclassifyf+2,w
  7676     1DED  0475               	iorwf	??___fpclassifyf+1,w
  7677     1DEE  0474               	iorwf	??___fpclassifyf,w
  7678     1DEF  1D03               	skipz
  7679     1DF0  2DF2               	goto	u4241
  7680     1DF1  2DF3               	goto	u4240
  7681     1DF2                     u4241:
  7682     1DF2  2DF8               	goto	l4316
  7683     1DF3                     u4240:
  7684     1DF3                     l4314:
  7685     1DF3  3002               	movlw	2
  7686     1DF4  00F0               	movwf	?___fpclassifyf
  7687     1DF5  3000               	movlw	0
  7688     1DF6  00F1               	movwf	?___fpclassifyf+1
  7689     1DF7  2E27               	goto	l1172
  7690     1DF8                     l4316:
  7691     1DF8  3003               	movlw	3
  7692     1DF9  00F0               	movwf	?___fpclassifyf
  7693     1DFA  3000               	movlw	0
  7694     1DFB  00F1               	movwf	?___fpclassifyf+1
  7695     1DFC  2E27               	goto	l1172
  7696     1DFD                     l4320:
  7697     1DFD  0A20               	incf	___fpclassifyf@e,w
  7698     1DFE  0421               	iorwf	___fpclassifyf@e+1,w
  7699     1DFF  1D03               	btfss	3,2
  7700     1E00  2E02               	goto	u4251
  7701     1E01  2E03               	goto	u4250
  7702     1E02                     u4251:
  7703     1E02  2E23               	goto	l4326
  7704     1E03                     u4250:
  7705     1E03                     l4322:
  7706     1E03  0822               	movf	___fpclassifyf@u,w
  7707     1E04  00F4               	movwf	??___fpclassifyf
  7708     1E05  0823               	movf	___fpclassifyf@u+1,w
  7709     1E06  00F5               	movwf	??___fpclassifyf+1
  7710     1E07  0824               	movf	___fpclassifyf@u+2,w
  7711     1E08  00F6               	movwf	??___fpclassifyf+2
  7712     1E09  0825               	movf	___fpclassifyf@u+3,w
  7713     1E0A  00F7               	movwf	??___fpclassifyf+3
  7714     1E0B  3009               	movlw	9
  7715     1E0C                     u4265:
  7716     1E0C  35F4               	lslf	??___fpclassifyf,f
  7717     1E0D  0DF5               	rlf	??___fpclassifyf+1,f
  7718     1E0E  0DF6               	rlf	??___fpclassifyf+2,f
  7719     1E0F  0DF7               	rlf	??___fpclassifyf+3,f
  7720     1E10                     u4260:
  7721     1E10  0B89               	decfsz	9,f
  7722     1E11  2E0C               	goto	u4265
  7723     1E12  0877               	movf	??___fpclassifyf+3,w
  7724     1E13  0476               	iorwf	??___fpclassifyf+2,w
  7725     1E14  0475               	iorwf	??___fpclassifyf+1,w
  7726     1E15  0474               	iorwf	??___fpclassifyf,w
  7727     1E16  1903               	skipnz
  7728     1E17  2E19               	goto	u4271
  7729     1E18  2E1B               	goto	u4270
  7730     1E19                     u4271:
  7731     1E19  3001               	movlw	1
  7732     1E1A  2E1C               	goto	u4280
  7733     1E1B                     u4270:
  7734     1E1B  3000               	movlw	0
  7735     1E1C                     u4280:
  7736     1E1C  00F8               	movwf	??___fpclassifyf+4
  7737     1E1D  01F9               	clrf	??___fpclassifyf+5
  7738     1E1E  0878               	movf	??___fpclassifyf+4,w
  7739     1E1F  00F0               	movwf	?___fpclassifyf
  7740     1E20  0879               	movf	??___fpclassifyf+5,w
  7741     1E21  00F1               	movwf	?___fpclassifyf+1
  7742     1E22  2E27               	goto	l1172
  7743     1E23                     l4326:
  7744     1E23  3004               	movlw	4
  7745     1E24  00F0               	movwf	?___fpclassifyf
  7746     1E25  3000               	movlw	0
  7747     1E26  00F1               	movwf	?___fpclassifyf+1
  7748     1E27                     l1172:
  7749     1E27  0008               	return
  7750     1E28                     __end_of___fpclassifyf:
  7751                           
  7752                           	psect	text20
  7753     1D39                     __ptext20:	
  7754 ;; *************** function ___fltol *****************
  7755 ;; Defined at:
  7756 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  7757 ;; Parameters:    Size  Location     Type
  7758 ;;  f1              4    0[COMMON] int 
  7759 ;; Auto vars:     Size  Location     Type
  7760 ;;  exp1            1    9[COMMON] unsigned char 
  7761 ;;  sign1           1    8[COMMON] unsigned char 
  7762 ;; Return value:  Size  Location     Type
  7763 ;;                  4    0[COMMON] long 
  7764 ;; Registers used:
  7765 ;;		wreg, status,2, status,0
  7766 ;; Tracked objects:
  7767 ;;		On entry : 0/0
  7768 ;;		On exit  : 0/0
  7769 ;;		Unchanged: 0/0
  7770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7771 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7772 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7773 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7774 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7775 ;;Total ram usage:       10 bytes
  7776 ;; Hardware stack levels used: 1
  7777 ;; This function calls:
  7778 ;;		Nothing
  7779 ;; This function is called by:
  7780 ;;		_efgtoa
  7781 ;; This function uses a non-reentrant model
  7782 ;;
  7783                           
  7784     1D39                     ___fltol:	
  7785                           ;psect for function ___fltol
  7786                           
  7787     1D39                     l3966:	
  7788                           ;incstack = 0
  7789                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7790                           
  7791     1D39  1003               	clrc
  7792     1D3A  0D72               	rlf	___fltol@f1+2,w
  7793     1D3B  0D73               	rlf	___fltol@f1+3,w
  7794     1D3C  00F9               	movwf	___fltol@exp1
  7795     1D3D  0879               	movf	___fltol@exp1,w
  7796     1D3E  1D03               	btfss	3,2
  7797     1D3F  2D41               	goto	u3521
  7798     1D40  2D42               	goto	u3520
  7799     1D41                     u3521:
  7800     1D41  2D4B               	goto	l3972
  7801     1D42                     u3520:
  7802     1D42                     l3968:
  7803     1D42  3000               	movlw	0
  7804     1D43  00F3               	movwf	?___fltol+3
  7805     1D44  3000               	movlw	0
  7806     1D45  00F2               	movwf	?___fltol+2
  7807     1D46  3000               	movlw	0
  7808     1D47  00F1               	movwf	?___fltol+1
  7809     1D48  3000               	movlw	0
  7810     1D49  00F0               	movwf	?___fltol
  7811     1D4A  2DA8               	goto	l769
  7812     1D4B                     l3972:
  7813     1D4B  0870               	movf	___fltol@f1,w
  7814     1D4C  00F4               	movwf	??___fltol
  7815     1D4D  0871               	movf	___fltol@f1+1,w
  7816     1D4E  00F5               	movwf	??___fltol+1
  7817     1D4F  0872               	movf	___fltol@f1+2,w
  7818     1D50  00F6               	movwf	??___fltol+2
  7819     1D51  0873               	movf	___fltol@f1+3,w
  7820     1D52  00F7               	movwf	??___fltol+3
  7821     1D53  301F               	movlw	31
  7822     1D54                     u3535:
  7823     1D54  36F7               	lsrf	??___fltol+3,f
  7824     1D55  0CF6               	rrf	??___fltol+2,f
  7825     1D56  0CF5               	rrf	??___fltol+1,f
  7826     1D57  0CF4               	rrf	??___fltol,f
  7827     1D58                     u3530:
  7828     1D58  0B89               	decfsz	9,f
  7829     1D59  2D54               	goto	u3535
  7830     1D5A  0874               	movf	??___fltol,w
  7831     1D5B  00F8               	movwf	___fltol@sign1
  7832     1D5C                     l3974:
  7833     1D5C  17F2               	bsf	___fltol@f1+2,7
  7834     1D5D                     l3976:
  7835     1D5D  30FF               	movlw	255
  7836     1D5E  05F0               	andwf	___fltol@f1,f
  7837     1D5F  30FF               	movlw	255
  7838     1D60  05F1               	andwf	___fltol@f1+1,f
  7839     1D61  30FF               	movlw	255
  7840     1D62  05F2               	andwf	___fltol@f1+2,f
  7841     1D63  3000               	movlw	0
  7842     1D64  05F3               	andwf	___fltol@f1+3,f
  7843     1D65                     l3978:
  7844     1D65  3096               	movlw	150
  7845     1D66  02F9               	subwf	___fltol@exp1,f
  7846     1D67                     l3980:
  7847     1D67  1FF9               	btfss	___fltol@exp1,7
  7848     1D68  2D6A               	goto	u3541
  7849     1D69  2D6B               	goto	u3540
  7850     1D6A                     u3541:
  7851     1D6A  2D83               	goto	l3990
  7852     1D6B                     u3540:
  7853     1D6B                     l3982:
  7854     1D6B  0879               	movf	___fltol@exp1,w
  7855     1D6C  3A80               	xorlw	128
  7856     1D6D  3E97               	addlw	151
  7857     1D6E  1803               	skipnc
  7858     1D6F  2D71               	goto	u3551
  7859     1D70  2D72               	goto	u3550
  7860     1D71                     u3551:
  7861     1D71  2D73               	goto	l3988
  7862     1D72                     u3550:
  7863     1D72  2D42               	goto	l3968
  7864     1D73                     l3988:
  7865     1D73  3001               	movlw	1
  7866     1D74                     u3565:
  7867     1D74  36F3               	lsrf	___fltol@f1+3,f
  7868     1D75  0CF2               	rrf	___fltol@f1+2,f
  7869     1D76  0CF1               	rrf	___fltol@f1+1,f
  7870     1D77  0CF0               	rrf	___fltol@f1,f
  7871     1D78  0B89               	decfsz	9,f
  7872     1D79  2D74               	goto	u3565
  7873     1D7A  3001               	movlw	1
  7874     1D7B  00F4               	movwf	??___fltol
  7875     1D7C  0874               	movf	??___fltol,w
  7876     1D7D  07F9               	addwf	___fltol@exp1,f
  7877     1D7E  1D03               	btfss	3,2
  7878     1D7F  2D81               	goto	u3571
  7879     1D80  2D82               	goto	u3570
  7880     1D81                     u3571:
  7881     1D81  2D73               	goto	l3988
  7882     1D82                     u3570:
  7883     1D82  2D98               	goto	l3998
  7884     1D83                     l3990:
  7885     1D83  3020               	movlw	32
  7886     1D84  0279               	subwf	___fltol@exp1,w
  7887     1D85  1C03               	skipc
  7888     1D86  2D88               	goto	u3581
  7889     1D87  2D89               	goto	u3580
  7890     1D88                     u3581:
  7891     1D88  2D93               	goto	l776
  7892     1D89                     u3580:
  7893     1D89  2D42               	goto	l3968
  7894     1D8A                     l3996:
  7895     1D8A  3001               	movlw	1
  7896     1D8B                     u3595:
  7897     1D8B  35F0               	lslf	___fltol@f1,f
  7898     1D8C  0DF1               	rlf	___fltol@f1+1,f
  7899     1D8D  0DF2               	rlf	___fltol@f1+2,f
  7900     1D8E  0DF3               	rlf	___fltol@f1+3,f
  7901     1D8F  0B89               	decfsz	9,f
  7902     1D90  2D8B               	goto	u3595
  7903     1D91  3001               	movlw	1
  7904     1D92  02F9               	subwf	___fltol@exp1,f
  7905     1D93                     l776:
  7906     1D93  0879               	movf	___fltol@exp1,w
  7907     1D94  1D03               	btfss	3,2
  7908     1D95  2D97               	goto	u3601
  7909     1D96  2D98               	goto	u3600
  7910     1D97                     u3601:
  7911     1D97  2D8A               	goto	l3996
  7912     1D98                     u3600:
  7913     1D98                     l3998:
  7914     1D98  0878               	movf	___fltol@sign1,w
  7915     1D99  1903               	btfsc	3,2
  7916     1D9A  2D9C               	goto	u3611
  7917     1D9B  2D9D               	goto	u3610
  7918     1D9C                     u3611:
  7919     1D9C  2DA8               	goto	l779
  7920     1D9D                     u3610:
  7921     1D9D                     l4000:
  7922     1D9D  09F0               	comf	___fltol@f1,f
  7923     1D9E  09F1               	comf	___fltol@f1+1,f
  7924     1D9F  09F2               	comf	___fltol@f1+2,f
  7925     1DA0  09F3               	comf	___fltol@f1+3,f
  7926     1DA1  0AF0               	incf	___fltol@f1,f
  7927     1DA2  1903               	skipnz
  7928     1DA3  0AF1               	incf	___fltol@f1+1,f
  7929     1DA4  1903               	skipnz
  7930     1DA5  0AF2               	incf	___fltol@f1+2,f
  7931     1DA6  1903               	skipnz
  7932     1DA7  0AF3               	incf	___fltol@f1+3,f
  7933     1DA8                     l779:
  7934     1DA8                     l769:
  7935     1DA8  0008               	return
  7936     1DA9                     __end_of___fltol:
  7937                           
  7938                           	psect	text21
  7939     1A5A                     __ptext21:	
  7940 ;; *************** function ___flsub *****************
  7941 ;; Defined at:
  7942 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;  a               4   26[BANK0 ] long 
  7945 ;;  b               4   30[BANK0 ] long 
  7946 ;; Auto vars:     Size  Location     Type
  7947 ;;		None
  7948 ;; Return value:  Size  Location     Type
  7949 ;;                  4   26[BANK0 ] long 
  7950 ;; Registers used:
  7951 ;;		wreg, status,2, status,0, pclath, cstack
  7952 ;; Tracked objects:
  7953 ;;		On entry : 0/0
  7954 ;;		On exit  : 0/0
  7955 ;;		Unchanged: 0/0
  7956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7957 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7960 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7961 ;;Total ram usage:        8 bytes
  7962 ;; Hardware stack levels used: 1
  7963 ;; Hardware stack levels required when called: 1
  7964 ;; This function calls:
  7965 ;;		___fladd
  7966 ;; This function is called by:
  7967 ;;		_efgtoa
  7968 ;; This function uses a non-reentrant model
  7969 ;;
  7970                           
  7971     1A5A                     ___flsub:	
  7972                           ;psect for function ___flsub
  7973                           
  7974     1A5A                     l4002:	
  7975                           ;incstack = 0
  7976                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  7977                           
  7978     1A5A  3080               	movlw	128
  7979     1A5B  0020               	movlb	0	; select bank0
  7980     1A5C  06BD               	xorwf	___flsub@a+3,f
  7981     1A5D                     l4004:
  7982     1A5D  0841               	movf	___flsub@b+3,w
  7983     1A5E  00F3               	movwf	___fladd@b+3
  7984     1A5F  0840               	movf	___flsub@b+2,w
  7985     1A60  00F2               	movwf	___fladd@b+2
  7986     1A61  083F               	movf	___flsub@b+1,w
  7987     1A62  00F1               	movwf	___fladd@b+1
  7988     1A63  083E               	movf	___flsub@b,w
  7989     1A64  00F0               	movwf	___fladd@b
  7990     1A65  083D               	movf	___flsub@a+3,w
  7991     1A66  00F7               	movwf	___fladd@a+3
  7992     1A67  083C               	movf	___flsub@a+2,w
  7993     1A68  00F6               	movwf	___fladd@a+2
  7994     1A69  083B               	movf	___flsub@a+1,w
  7995     1A6A  00F5               	movwf	___fladd@a+1
  7996     1A6B  083A               	movf	___flsub@a,w
  7997     1A6C  00F4               	movwf	___fladd@a
  7998     1A6D  318B  23B9  319A   	fcall	___fladd
  7999     1A70  0873               	movf	?___fladd+3,w
  8000     1A71  0020               	movlb	0	; select bank0
  8001     1A72  00BD               	movwf	?___flsub+3
  8002     1A73  0872               	movf	?___fladd+2,w
  8003     1A74  00BC               	movwf	?___flsub+2
  8004     1A75  0871               	movf	?___fladd+1,w
  8005     1A76  00BB               	movwf	?___flsub+1
  8006     1A77  0870               	movf	?___fladd,w
  8007     1A78  00BA               	movwf	?___flsub
  8008     1A79                     l922:
  8009     1A79  0008               	return
  8010     1A7A                     __end_of___flsub:
  8011                           
  8012                           	psect	text22
  8013     0BB9                     __ptext22:	
  8014 ;; *************** function ___fladd *****************
  8015 ;; Defined at:
  8016 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;  b               4    0[COMMON] long 
  8019 ;;  a               4    4[COMMON] long 
  8020 ;; Auto vars:     Size  Location     Type
  8021 ;;  grs             1   11[COMMON] unsigned char 
  8022 ;;  bexp            1   10[COMMON] unsigned char 
  8023 ;;  aexp            1    9[COMMON] unsigned char 
  8024 ;;  signs           1    8[COMMON] unsigned char 
  8025 ;; Return value:  Size  Location     Type
  8026 ;;                  4    0[COMMON] unsigned char 
  8027 ;; Registers used:
  8028 ;;		wreg, status,2, status,0
  8029 ;; Tracked objects:
  8030 ;;		On entry : 0/0
  8031 ;;		On exit  : 0/0
  8032 ;;		Unchanged: 0/0
  8033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8034 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8035 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8036 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8037 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8038 ;;Total ram usage:       20 bytes
  8039 ;; Hardware stack levels used: 1
  8040 ;; This function calls:
  8041 ;;		Nothing
  8042 ;; This function is called by:
  8043 ;;		___flsub
  8044 ;;		_efgtoa
  8045 ;; This function uses a non-reentrant model
  8046 ;;
  8047                           
  8048     0BB9                     ___fladd:	
  8049                           ;psect for function ___fladd
  8050                           
  8051     0BB9                     l3696:	
  8052                           ;incstack = 0
  8053                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  8054                           
  8055     0BB9  0873               	movf	___fladd@b+3,w
  8056     0BBA  3980               	andlw	128
  8057     0BBB  00F8               	movwf	___fladd@signs
  8058     0BBC                     l3698:
  8059     0BBC  3573               	lslf	___fladd@b+3,w
  8060     0BBD  00FA               	movwf	___fladd@bexp
  8061     0BBE                     l3700:
  8062     0BBE  1FF2               	btfss	___fladd@b+2,7
  8063     0BBF  2BC1               	goto	u2921
  8064     0BC0  2BC2               	goto	u2920
  8065     0BC1                     u2921:
  8066     0BC1  2BC3               	goto	l3704
  8067     0BC2                     u2920:
  8068     0BC2                     l3702:
  8069     0BC2  147A               	bsf	___fladd@bexp,0
  8070     0BC3                     l3704:
  8071     0BC3  087A               	movf	___fladd@bexp,w
  8072     0BC4  1903               	btfsc	3,2
  8073     0BC5  2BC7               	goto	u2931
  8074     0BC6  2BC8               	goto	u2930
  8075     0BC7                     u2931:
  8076     0BC7  2BD8               	goto	l3714
  8077     0BC8                     u2930:
  8078     0BC8                     l3706:
  8079     0BC8  0A7A               	incf	___fladd@bexp,w
  8080     0BC9  1D03               	btfss	3,2
  8081     0BCA  2BCC               	goto	u2941
  8082     0BCB  2BCD               	goto	u2940
  8083     0BCC                     u2941:
  8084     0BCC  2BD5               	goto	l3710
  8085     0BCD                     u2940:
  8086     0BCD                     l3708:
  8087     0BCD  3000               	movlw	0
  8088     0BCE  00F3               	movwf	___fladd@b+3
  8089     0BCF  3000               	movlw	0
  8090     0BD0  00F2               	movwf	___fladd@b+2
  8091     0BD1  3000               	movlw	0
  8092     0BD2  00F1               	movwf	___fladd@b+1
  8093     0BD3  3000               	movlw	0
  8094     0BD4  00F0               	movwf	___fladd@b
  8095     0BD5                     l3710:
  8096     0BD5  17F2               	bsf	___fladd@b+2,7
  8097     0BD6                     l3712:
  8098     0BD6  01F3               	clrf	___fladd@b+3
  8099     0BD7  2BE0               	goto	l3716
  8100     0BD8                     l3714:
  8101     0BD8  3000               	movlw	0
  8102     0BD9  00F3               	movwf	___fladd@b+3
  8103     0BDA  3000               	movlw	0
  8104     0BDB  00F2               	movwf	___fladd@b+2
  8105     0BDC  3000               	movlw	0
  8106     0BDD  00F1               	movwf	___fladd@b+1
  8107     0BDE  3000               	movlw	0
  8108     0BDF  00F0               	movwf	___fladd@b
  8109     0BE0                     l3716:
  8110     0BE0  0877               	movf	___fladd@a+3,w
  8111     0BE1  3980               	andlw	128
  8112     0BE2  00F9               	movwf	___fladd@aexp
  8113     0BE3                     l3718:
  8114     0BE3  0879               	movf	___fladd@aexp,w
  8115     0BE4  0678               	xorwf	___fladd@signs,w
  8116     0BE5  1903               	skipnz
  8117     0BE6  2BE8               	goto	u2951
  8118     0BE7  2BE9               	goto	u2950
  8119     0BE8                     u2951:
  8120     0BE8  2BEA               	goto	l3722
  8121     0BE9                     u2950:
  8122     0BE9                     l3720:
  8123     0BE9  1778               	bsf	___fladd@signs,6
  8124     0BEA                     l3722:
  8125     0BEA  3577               	lslf	___fladd@a+3,w
  8126     0BEB  00F9               	movwf	___fladd@aexp
  8127     0BEC                     l3724:
  8128     0BEC  1FF6               	btfss	___fladd@a+2,7
  8129     0BED  2BEF               	goto	u2961
  8130     0BEE  2BF0               	goto	u2960
  8131     0BEF                     u2961:
  8132     0BEF  2BF1               	goto	l3728
  8133     0BF0                     u2960:
  8134     0BF0                     l3726:
  8135     0BF0  1479               	bsf	___fladd@aexp,0
  8136     0BF1                     l3728:
  8137     0BF1  0879               	movf	___fladd@aexp,w
  8138     0BF2  1903               	btfsc	3,2
  8139     0BF3  2BF5               	goto	u2971
  8140     0BF4  2BF6               	goto	u2970
  8141     0BF5                     u2971:
  8142     0BF5  2C06               	goto	l3738
  8143     0BF6                     u2970:
  8144     0BF6                     l3730:
  8145     0BF6  0A79               	incf	___fladd@aexp,w
  8146     0BF7  1D03               	btfss	3,2
  8147     0BF8  2BFA               	goto	u2981
  8148     0BF9  2BFB               	goto	u2980
  8149     0BFA                     u2981:
  8150     0BFA  2C03               	goto	l3734
  8151     0BFB                     u2980:
  8152     0BFB                     l3732:
  8153     0BFB  3000               	movlw	0
  8154     0BFC  00F7               	movwf	___fladd@a+3
  8155     0BFD  3000               	movlw	0
  8156     0BFE  00F6               	movwf	___fladd@a+2
  8157     0BFF  3000               	movlw	0
  8158     0C00  00F5               	movwf	___fladd@a+1
  8159     0C01  3000               	movlw	0
  8160     0C02  00F4               	movwf	___fladd@a
  8161     0C03                     l3734:
  8162     0C03  17F6               	bsf	___fladd@a+2,7
  8163     0C04                     l3736:
  8164     0C04  01F7               	clrf	___fladd@a+3
  8165     0C05  2C0E               	goto	l876
  8166     0C06                     l3738:
  8167     0C06  3000               	movlw	0
  8168     0C07  00F7               	movwf	___fladd@a+3
  8169     0C08  3000               	movlw	0
  8170     0C09  00F6               	movwf	___fladd@a+2
  8171     0C0A  3000               	movlw	0
  8172     0C0B  00F5               	movwf	___fladd@a+1
  8173     0C0C  3000               	movlw	0
  8174     0C0D  00F4               	movwf	___fladd@a
  8175     0C0E                     l876:
  8176     0C0E  087A               	movf	___fladd@bexp,w
  8177     0C0F  0279               	subwf	___fladd@aexp,w
  8178     0C10  1803               	skipnc
  8179     0C11  2C13               	goto	u2991
  8180     0C12  2C14               	goto	u2990
  8181     0C13                     u2991:
  8182     0C13  2C3B               	goto	l3774
  8183     0C14                     u2990:
  8184     0C14                     l3740:
  8185     0C14  1F78               	btfss	___fladd@signs,6
  8186     0C15  2C17               	goto	u3001
  8187     0C16  2C18               	goto	u3000
  8188     0C17                     u3001:
  8189     0C17  2C1D               	goto	l3744
  8190     0C18                     u3000:
  8191     0C18                     l3742:
  8192     0C18  3080               	movlw	128
  8193     0C19  0020               	movlb	0	; select bank0
  8194     0C1A  00A0               	movwf	??___fladd
  8195     0C1B  0820               	movf	??___fladd,w
  8196     0C1C  06F8               	xorwf	___fladd@signs,f
  8197     0C1D                     l3744:
  8198     0C1D  087A               	movf	___fladd@bexp,w
  8199     0C1E  00FB               	movwf	___fladd@grs
  8200     0C1F                     l3746:
  8201     0C1F  0879               	movf	___fladd@aexp,w
  8202     0C20  00FA               	movwf	___fladd@bexp
  8203     0C21                     l3748:
  8204     0C21  087B               	movf	___fladd@grs,w
  8205     0C22  00F9               	movwf	___fladd@aexp
  8206     0C23                     l3750:
  8207     0C23  0870               	movf	___fladd@b,w
  8208     0C24  00FB               	movwf	___fladd@grs
  8209     0C25                     l3752:
  8210     0C25  0874               	movf	___fladd@a,w
  8211     0C26  00F0               	movwf	___fladd@b
  8212     0C27                     l3754:
  8213     0C27  087B               	movf	___fladd@grs,w
  8214     0C28  00F4               	movwf	___fladd@a
  8215     0C29                     l3756:
  8216     0C29  0871               	movf	___fladd@b+1,w
  8217     0C2A  00FB               	movwf	___fladd@grs
  8218     0C2B                     l3758:
  8219     0C2B  0875               	movf	___fladd@a+1,w
  8220     0C2C  00F1               	movwf	___fladd@b+1
  8221     0C2D                     l3760:
  8222     0C2D  087B               	movf	___fladd@grs,w
  8223     0C2E  00F5               	movwf	___fladd@a+1
  8224     0C2F                     l3762:
  8225     0C2F  0872               	movf	___fladd@b+2,w
  8226     0C30  00FB               	movwf	___fladd@grs
  8227     0C31                     l3764:
  8228     0C31  0876               	movf	___fladd@a+2,w
  8229     0C32  00F2               	movwf	___fladd@b+2
  8230     0C33                     l3766:
  8231     0C33  087B               	movf	___fladd@grs,w
  8232     0C34  00F6               	movwf	___fladd@a+2
  8233     0C35                     l3768:
  8234     0C35  0873               	movf	___fladd@b+3,w
  8235     0C36  00FB               	movwf	___fladd@grs
  8236     0C37                     l3770:
  8237     0C37  0877               	movf	___fladd@a+3,w
  8238     0C38  00F3               	movwf	___fladd@b+3
  8239     0C39                     l3772:
  8240     0C39  087B               	movf	___fladd@grs,w
  8241     0C3A  00F7               	movwf	___fladd@a+3
  8242     0C3B                     l3774:
  8243     0C3B  01FB               	clrf	___fladd@grs
  8244     0C3C                     l3776:
  8245     0C3C  0879               	movf	___fladd@aexp,w
  8246     0C3D  0020               	movlb	0	; select bank0
  8247     0C3E  00A0               	movwf	??___fladd
  8248     0C3F  01A1               	clrf	??___fladd+1
  8249     0C40  0821               	movf	??___fladd+1,w
  8250     0C41  00A3               	movwf	??___fladd+3
  8251     0C42  087A               	movf	___fladd@bexp,w
  8252     0C43  0220               	subwf	??___fladd,w
  8253     0C44  00A2               	movwf	??___fladd+2
  8254     0C45  1C03               	skipc
  8255     0C46  03A3               	decf	??___fladd+3,f
  8256     0C47  0823               	movf	??___fladd+3,w
  8257     0C48  3A80               	xorlw	128
  8258     0C49  00A4               	movwf	??___fladd+4
  8259     0C4A  3080               	movlw	128
  8260     0C4B  0224               	subwf	??___fladd+4,w
  8261     0C4C  1D03               	skipz
  8262     0C4D  2C50               	goto	u3015
  8263     0C4E  301A               	movlw	26
  8264     0C4F  0222               	subwf	??___fladd+2,w
  8265     0C50                     u3015:
  8266     0C50  1C03               	skipc
  8267     0C51  2C53               	goto	u3011
  8268     0C52  2C54               	goto	u3010
  8269     0C53                     u3011:
  8270     0C53  2C86               	goto	l3792
  8271     0C54                     u3010:
  8272     0C54                     l3778:
  8273     0C54  0873               	movf	___fladd@b+3,w
  8274     0C55  0472               	iorwf	___fladd@b+2,w
  8275     0C56  0471               	iorwf	___fladd@b+1,w
  8276     0C57  0470               	iorwf	___fladd@b,w
  8277     0C58  1D03               	skipz
  8278     0C59  2C5B               	goto	u3021
  8279     0C5A  2C5D               	goto	u3020
  8280     0C5B                     u3021:
  8281     0C5B  3001               	movlw	1
  8282     0C5C  2C5E               	goto	u3030
  8283     0C5D                     u3020:
  8284     0C5D  3000               	movlw	0
  8285     0C5E                     u3030:
  8286     0C5E  00FB               	movwf	___fladd@grs
  8287     0C5F  3000               	movlw	0
  8288     0C60  00F3               	movwf	___fladd@b+3
  8289     0C61  3000               	movlw	0
  8290     0C62  00F2               	movwf	___fladd@b+2
  8291     0C63  3000               	movlw	0
  8292     0C64  00F1               	movwf	___fladd@b+1
  8293     0C65  3000               	movlw	0
  8294     0C66  00F0               	movwf	___fladd@b
  8295     0C67  0879               	movf	___fladd@aexp,w
  8296     0C68  00FA               	movwf	___fladd@bexp
  8297     0C69  2C8C               	goto	l880
  8298     0C6A                     l882:
  8299     0C6A  1C7B               	btfss	___fladd@grs,0
  8300     0C6B  2C6D               	goto	u3041
  8301     0C6C  2C6E               	goto	u3040
  8302     0C6D                     u3041:
  8303     0C6D  2C72               	goto	l3782
  8304     0C6E                     u3040:
  8305     0C6E                     l3780:
  8306     0C6E  367B               	lsrf	___fladd@grs,w
  8307     0C6F  3801               	iorlw	1
  8308     0C70  00FB               	movwf	___fladd@grs
  8309     0C71  2C74               	goto	l3784
  8310     0C72                     l3782:
  8311     0C72  1003               	clrc
  8312     0C73  0CFB               	rrf	___fladd@grs,f
  8313     0C74                     l3784:
  8314     0C74  1C70               	btfss	___fladd@b,0
  8315     0C75  2C77               	goto	u3051
  8316     0C76  2C78               	goto	u3050
  8317     0C77                     u3051:
  8318     0C77  2C79               	goto	l3788
  8319     0C78                     u3050:
  8320     0C78                     l3786:
  8321     0C78  17FB               	bsf	___fladd@grs,7
  8322     0C79                     l3788:
  8323     0C79  3001               	movlw	1
  8324     0C7A  0020               	movlb	0	; select bank0
  8325     0C7B  00A0               	movwf	??___fladd
  8326     0C7C                     u3065:
  8327     0C7C  37F3               	asrf	___fladd@b+3,f
  8328     0C7D  0CF2               	rrf	___fladd@b+2,f
  8329     0C7E  0CF1               	rrf	___fladd@b+1,f
  8330     0C7F  0CF0               	rrf	___fladd@b,f
  8331     0C80  0BA0               	decfsz	??___fladd& (0+127),f
  8332     0C81  2C7C               	goto	u3065
  8333     0C82                     l3790:
  8334     0C82  3001               	movlw	1
  8335     0C83  00A0               	movwf	??___fladd
  8336     0C84  0820               	movf	??___fladd,w
  8337     0C85  07FA               	addwf	___fladd@bexp,f
  8338     0C86                     l3792:
  8339     0C86  0879               	movf	___fladd@aexp,w
  8340     0C87  027A               	subwf	___fladd@bexp,w
  8341     0C88  1C03               	skipc
  8342     0C89  2C8B               	goto	u3071
  8343     0C8A  2C8C               	goto	u3070
  8344     0C8B                     u3071:
  8345     0C8B  2C6A               	goto	l882
  8346     0C8C                     u3070:
  8347     0C8C                     l880:
  8348     0C8C  1B78               	btfsc	___fladd@signs,6
  8349     0C8D  2C8F               	goto	u3081
  8350     0C8E  2C90               	goto	u3080
  8351     0C8F                     u3081:
  8352     0C8F  2CC7               	goto	l3818
  8353     0C90                     u3080:
  8354     0C90                     l3794:
  8355     0C90  087A               	movf	___fladd@bexp,w
  8356     0C91  1D03               	btfss	3,2
  8357     0C92  2C94               	goto	u3091
  8358     0C93  2C95               	goto	u3090
  8359     0C94                     u3091:
  8360     0C94  2C9E               	goto	l3800
  8361     0C95                     u3090:
  8362     0C95                     l3796:
  8363     0C95  3000               	movlw	0
  8364     0C96  00F3               	movwf	?___fladd+3
  8365     0C97  3000               	movlw	0
  8366     0C98  00F2               	movwf	?___fladd+2
  8367     0C99  3000               	movlw	0
  8368     0C9A  00F1               	movwf	?___fladd+1
  8369     0C9B  3000               	movlw	0
  8370     0C9C  00F0               	movwf	?___fladd
  8371     0C9D  2DC4               	goto	l889
  8372     0C9E                     l3800:
  8373     0C9E  0874               	movf	___fladd@a,w
  8374     0C9F  07F0               	addwf	___fladd@b,f
  8375     0CA0  0875               	movf	___fladd@a+1,w
  8376     0CA1  3DF1               	addwfc	___fladd@b+1,f
  8377     0CA2  0876               	movf	___fladd@a+2,w
  8378     0CA3  3DF2               	addwfc	___fladd@b+2,f
  8379     0CA4  0877               	movf	___fladd@a+3,w
  8380     0CA5  3DF3               	addwfc	___fladd@b+3,f
  8381     0CA6                     l3802:
  8382     0CA6  1C73               	btfss	___fladd@b+3,0
  8383     0CA7  2CA9               	goto	u3101
  8384     0CA8  2CAA               	goto	u3100
  8385     0CA9                     u3101:
  8386     0CA9  2D54               	goto	l3852
  8387     0CAA                     u3100:
  8388     0CAA                     l3804:
  8389     0CAA  1C7B               	btfss	___fladd@grs,0
  8390     0CAB  2CAD               	goto	u3111
  8391     0CAC  2CAE               	goto	u3110
  8392     0CAD                     u3111:
  8393     0CAD  2CB2               	goto	l3808
  8394     0CAE                     u3110:
  8395     0CAE                     l3806:
  8396     0CAE  367B               	lsrf	___fladd@grs,w
  8397     0CAF  3801               	iorlw	1
  8398     0CB0  00FB               	movwf	___fladd@grs
  8399     0CB1  2CB4               	goto	l3810
  8400     0CB2                     l3808:
  8401     0CB2  1003               	clrc
  8402     0CB3  0CFB               	rrf	___fladd@grs,f
  8403     0CB4                     l3810:
  8404     0CB4  1C70               	btfss	___fladd@b,0
  8405     0CB5  2CB7               	goto	u3121
  8406     0CB6  2CB8               	goto	u3120
  8407     0CB7                     u3121:
  8408     0CB7  2CB9               	goto	l3814
  8409     0CB8                     u3120:
  8410     0CB8                     l3812:
  8411     0CB8  17FB               	bsf	___fladd@grs,7
  8412     0CB9                     l3814:
  8413     0CB9  3001               	movlw	1
  8414     0CBA  0020               	movlb	0	; select bank0
  8415     0CBB  00A0               	movwf	??___fladd
  8416     0CBC                     u3135:
  8417     0CBC  37F3               	asrf	___fladd@b+3,f
  8418     0CBD  0CF2               	rrf	___fladd@b+2,f
  8419     0CBE  0CF1               	rrf	___fladd@b+1,f
  8420     0CBF  0CF0               	rrf	___fladd@b,f
  8421     0CC0  0BA0               	decfsz	??___fladd& (0+127),f
  8422     0CC1  2CBC               	goto	u3135
  8423     0CC2                     l3816:
  8424     0CC2  3001               	movlw	1
  8425     0CC3  00A0               	movwf	??___fladd
  8426     0CC4  0820               	movf	??___fladd,w
  8427     0CC5  07FA               	addwf	___fladd@bexp,f
  8428     0CC6  2D54               	goto	l3852
  8429     0CC7                     l3818:
  8430     0CC7  0873               	movf	___fladd@b+3,w
  8431     0CC8  3A80               	xorlw	128
  8432     0CC9  0020               	movlb	0	; select bank0
  8433     0CCA  00A0               	movwf	??___fladd
  8434     0CCB  0877               	movf	___fladd@a+3,w
  8435     0CCC  3A80               	xorlw	128
  8436     0CCD  0220               	subwf	??___fladd,w
  8437     0CCE  1D03               	skipz
  8438     0CCF  2CDA               	goto	u3143
  8439     0CD0  0876               	movf	___fladd@a+2,w
  8440     0CD1  0272               	subwf	___fladd@b+2,w
  8441     0CD2  1D03               	skipz
  8442     0CD3  2CDA               	goto	u3143
  8443     0CD4  0875               	movf	___fladd@a+1,w
  8444     0CD5  0271               	subwf	___fladd@b+1,w
  8445     0CD6  1D03               	skipz
  8446     0CD7  2CDA               	goto	u3143
  8447     0CD8  0874               	movf	___fladd@a,w
  8448     0CD9  0270               	subwf	___fladd@b,w
  8449     0CDA                     u3143:
  8450     0CDA  1803               	skipnc
  8451     0CDB  2CDD               	goto	u3141
  8452     0CDC  2CDE               	goto	u3140
  8453     0CDD                     u3141:
  8454     0CDD  2D16               	goto	l3828
  8455     0CDE                     u3140:
  8456     0CDE                     l3820:
  8457     0CDE  30FF               	movlw	255
  8458     0CDF  00A0               	movwf	??___fladd
  8459     0CE0  30FF               	movlw	255
  8460     0CE1  00A1               	movwf	??___fladd+1
  8461     0CE2  30FF               	movlw	255
  8462     0CE3  00A2               	movwf	??___fladd+2
  8463     0CE4  30FF               	movlw	255
  8464     0CE5  00A3               	movwf	??___fladd+3
  8465     0CE6  0870               	movf	___fladd@b,w
  8466     0CE7  0274               	subwf	___fladd@a,w
  8467     0CE8  00A4               	movwf	??___fladd+4
  8468     0CE9  0871               	movf	___fladd@b+1,w
  8469     0CEA  3B75               	subwfb	___fladd@a+1,w
  8470     0CEB  00A5               	movwf	??___fladd+5
  8471     0CEC  0872               	movf	___fladd@b+2,w
  8472     0CED  3B76               	subwfb	___fladd@a+2,w
  8473     0CEE  00A6               	movwf	??___fladd+6
  8474     0CEF  0873               	movf	___fladd@b+3,w
  8475     0CF0  3B77               	subwfb	___fladd@a+3,w
  8476     0CF1  00A7               	movwf	??___fladd+7
  8477     0CF2  0824               	movf	??___fladd+4,w
  8478     0CF3  07A0               	addwf	??___fladd,f
  8479     0CF4  0825               	movf	??___fladd+5,w
  8480     0CF5  3DA1               	addwfc	??___fladd+1,f
  8481     0CF6  0826               	movf	??___fladd+6,w
  8482     0CF7  3DA2               	addwfc	??___fladd+2,f
  8483     0CF8  0827               	movf	??___fladd+7,w
  8484     0CF9  3DA3               	addwfc	??___fladd+3,f
  8485     0CFA  0823               	movf	??___fladd+3,w
  8486     0CFB  00F3               	movwf	___fladd@b+3
  8487     0CFC  0822               	movf	??___fladd+2,w
  8488     0CFD  00F2               	movwf	___fladd@b+2
  8489     0CFE  0821               	movf	??___fladd+1,w
  8490     0CFF  00F1               	movwf	___fladd@b+1
  8491     0D00  0820               	movf	??___fladd,w
  8492     0D01  00F0               	movwf	___fladd@b
  8493     0D02                     l3822:
  8494     0D02  3080               	movlw	128
  8495     0D03  00A0               	movwf	??___fladd
  8496     0D04  0820               	movf	??___fladd,w
  8497     0D05  06F8               	xorwf	___fladd@signs,f
  8498     0D06  09FB               	comf	___fladd@grs,f
  8499     0D07  0AFB               	incf	___fladd@grs,f
  8500     0D08                     l3824:
  8501     0D08  087B               	movf	___fladd@grs,w
  8502     0D09  1D03               	btfss	3,2
  8503     0D0A  2D0C               	goto	u3151
  8504     0D0B  2D0D               	goto	u3150
  8505     0D0C                     u3151:
  8506     0D0C  2D1E               	goto	l897
  8507     0D0D                     u3150:
  8508     0D0D                     l3826:
  8509     0D0D  3001               	movlw	1
  8510     0D0E  07F0               	addwf	___fladd@b,f
  8511     0D0F  3000               	movlw	0
  8512     0D10  3DF1               	addwfc	___fladd@b+1,f
  8513     0D11  3000               	movlw	0
  8514     0D12  3DF2               	addwfc	___fladd@b+2,f
  8515     0D13  3000               	movlw	0
  8516     0D14  3DF3               	addwfc	___fladd@b+3,f
  8517     0D15  2D1E               	goto	l897
  8518     0D16                     l3828:
  8519     0D16  0874               	movf	___fladd@a,w
  8520     0D17  02F0               	subwf	___fladd@b,f
  8521     0D18  0875               	movf	___fladd@a+1,w
  8522     0D19  3BF1               	subwfb	___fladd@b+1,f
  8523     0D1A  0876               	movf	___fladd@a+2,w
  8524     0D1B  3BF2               	subwfb	___fladd@b+2,f
  8525     0D1C  0877               	movf	___fladd@a+3,w
  8526     0D1D  3BF3               	subwfb	___fladd@b+3,f
  8527     0D1E                     l897:
  8528     0D1E  0873               	movf	___fladd@b+3,w
  8529     0D1F  0472               	iorwf	___fladd@b+2,w
  8530     0D20  0471               	iorwf	___fladd@b+1,w
  8531     0D21  0470               	iorwf	___fladd@b,w
  8532     0D22  1D03               	skipz
  8533     0D23  2D25               	goto	u3161
  8534     0D24  2D26               	goto	u3160
  8535     0D25                     u3161:
  8536     0D25  2D50               	goto	l3850
  8537     0D26                     u3160:
  8538     0D26                     l3830:
  8539     0D26  087B               	movf	___fladd@grs,w
  8540     0D27  1D03               	btfss	3,2
  8541     0D28  2D2A               	goto	u3171
  8542     0D29  2D2B               	goto	u3170
  8543     0D2A                     u3171:
  8544     0D2A  2D50               	goto	l3850
  8545     0D2B                     u3170:
  8546     0D2B                     l3832:
  8547     0D2B  3000               	movlw	0
  8548     0D2C  00F3               	movwf	?___fladd+3
  8549     0D2D  3000               	movlw	0
  8550     0D2E  00F2               	movwf	?___fladd+2
  8551     0D2F  3000               	movlw	0
  8552     0D30  00F1               	movwf	?___fladd+1
  8553     0D31  3000               	movlw	0
  8554     0D32  00F0               	movwf	?___fladd
  8555     0D33  2DC4               	goto	l889
  8556     0D34                     l3836:
  8557     0D34  3001               	movlw	1
  8558     0D35                     u3185:
  8559     0D35  35F0               	lslf	___fladd@b,f
  8560     0D36  0DF1               	rlf	___fladd@b+1,f
  8561     0D37  0DF2               	rlf	___fladd@b+2,f
  8562     0D38  0DF3               	rlf	___fladd@b+3,f
  8563     0D39  0B89               	decfsz	9,f
  8564     0D3A  2D35               	goto	u3185
  8565     0D3B                     l3838:
  8566     0D3B  1FFB               	btfss	___fladd@grs,7
  8567     0D3C  2D3E               	goto	u3191
  8568     0D3D  2D3F               	goto	u3190
  8569     0D3E                     u3191:
  8570     0D3E  2D40               	goto	l901
  8571     0D3F                     u3190:
  8572     0D3F                     l3840:
  8573     0D3F  1470               	bsf	___fladd@b,0
  8574     0D40                     l901:
  8575     0D40  1C7B               	btfss	___fladd@grs,0
  8576     0D41  2D43               	goto	u3201
  8577     0D42  2D44               	goto	u3200
  8578     0D43                     u3201:
  8579     0D43  2D47               	goto	l3844
  8580     0D44                     u3200:
  8581     0D44                     l3842:
  8582     0D44  1403               	setc
  8583     0D45  0DFB               	rlf	___fladd@grs,f
  8584     0D46  2D49               	goto	l3846
  8585     0D47                     l3844:
  8586     0D47  1003               	clrc
  8587     0D48  0DFB               	rlf	___fladd@grs,f
  8588     0D49                     l3846:
  8589     0D49  087A               	movf	___fladd@bexp,w
  8590     0D4A  1903               	btfsc	3,2
  8591     0D4B  2D4D               	goto	u3211
  8592     0D4C  2D4E               	goto	u3210
  8593     0D4D                     u3211:
  8594     0D4D  2D50               	goto	l3850
  8595     0D4E                     u3210:
  8596     0D4E                     l3848:
  8597     0D4E  3001               	movlw	1
  8598     0D4F  02FA               	subwf	___fladd@bexp,f
  8599     0D50                     l3850:
  8600     0D50  1FF2               	btfss	___fladd@b+2,7
  8601     0D51  2D53               	goto	u3221
  8602     0D52  2D54               	goto	u3220
  8603     0D53                     u3221:
  8604     0D53  2D34               	goto	l3836
  8605     0D54                     u3220:
  8606     0D54                     l3852:
  8607     0D54  01F9               	clrf	___fladd@aexp
  8608     0D55                     l3854:
  8609     0D55  1FFB               	btfss	___fladd@grs,7
  8610     0D56  2D58               	goto	u3231
  8611     0D57  2D59               	goto	u3230
  8612     0D58                     u3231:
  8613     0D58  2D67               	goto	l3862
  8614     0D59                     u3230:
  8615     0D59                     l3856:
  8616     0D59  087B               	movf	___fladd@grs,w
  8617     0D5A  397F               	andlw	127
  8618     0D5B  1903               	btfsc	3,2
  8619     0D5C  2D5E               	goto	u3241
  8620     0D5D  2D5F               	goto	u3240
  8621     0D5E                     u3241:
  8622     0D5E  2D62               	goto	l907
  8623     0D5F                     u3240:
  8624     0D5F                     l3858:
  8625     0D5F  01F9               	clrf	___fladd@aexp
  8626     0D60  0AF9               	incf	___fladd@aexp,f
  8627     0D61  2D67               	goto	l3862
  8628     0D62                     l907:
  8629     0D62  1C70               	btfss	___fladd@b,0
  8630     0D63  2D65               	goto	u3251
  8631     0D64  2D66               	goto	u3250
  8632     0D65                     u3251:
  8633     0D65  2D67               	goto	l3862
  8634     0D66                     u3250:
  8635     0D66  2D5F               	goto	l3858
  8636     0D67                     l3862:
  8637     0D67  0879               	movf	___fladd@aexp,w
  8638     0D68  1903               	btfsc	3,2
  8639     0D69  2D6B               	goto	u3261
  8640     0D6A  2D6C               	goto	u3260
  8641     0D6B                     u3261:
  8642     0D6B  2D9A               	goto	l910
  8643     0D6C                     u3260:
  8644     0D6C                     l3864:
  8645     0D6C  3001               	movlw	1
  8646     0D6D  07F0               	addwf	___fladd@b,f
  8647     0D6E  3000               	movlw	0
  8648     0D6F  3DF1               	addwfc	___fladd@b+1,f
  8649     0D70  3000               	movlw	0
  8650     0D71  3DF2               	addwfc	___fladd@b+2,f
  8651     0D72  3000               	movlw	0
  8652     0D73  3DF3               	addwfc	___fladd@b+3,f
  8653     0D74                     l3866:
  8654     0D74  1C73               	btfss	___fladd@b+3,0
  8655     0D75  2D77               	goto	u3271
  8656     0D76  2D78               	goto	u3270
  8657     0D77                     u3271:
  8658     0D77  2D9A               	goto	l910
  8659     0D78                     u3270:
  8660     0D78                     l3868:
  8661     0D78  0870               	movf	___fladd@b,w
  8662     0D79  0020               	movlb	0	; select bank0
  8663     0D7A  00A0               	movwf	??___fladd
  8664     0D7B  0871               	movf	___fladd@b+1,w
  8665     0D7C  00A1               	movwf	??___fladd+1
  8666     0D7D  0872               	movf	___fladd@b+2,w
  8667     0D7E  00A2               	movwf	??___fladd+2
  8668     0D7F  0873               	movf	___fladd@b+3,w
  8669     0D80  00A3               	movwf	??___fladd+3
  8670     0D81  3001               	movlw	1
  8671     0D82  00A4               	movwf	??___fladd+4
  8672     0D83                     u3285:
  8673     0D83  37A3               	asrf	??___fladd+3,f
  8674     0D84  0CA2               	rrf	??___fladd+2,f
  8675     0D85  0CA1               	rrf	??___fladd+1,f
  8676     0D86  0CA0               	rrf	??___fladd,f
  8677     0D87                     u3280:
  8678     0D87  0BA4               	decfsz	??___fladd+4,f
  8679     0D88  2D83               	goto	u3285
  8680     0D89  0823               	movf	??___fladd+3,w
  8681     0D8A  00F3               	movwf	___fladd@b+3
  8682     0D8B  0822               	movf	??___fladd+2,w
  8683     0D8C  00F2               	movwf	___fladd@b+2
  8684     0D8D  0821               	movf	??___fladd+1,w
  8685     0D8E  00F1               	movwf	___fladd@b+1
  8686     0D8F  0820               	movf	??___fladd,w
  8687     0D90  00F0               	movwf	___fladd@b
  8688     0D91  0A7A               	incf	___fladd@bexp,w
  8689     0D92  1903               	btfsc	3,2
  8690     0D93  2D95               	goto	u3291
  8691     0D94  2D96               	goto	u3290
  8692     0D95                     u3291:
  8693     0D95  2D9A               	goto	l910
  8694     0D96                     u3290:
  8695     0D96                     l3870:
  8696     0D96  3001               	movlw	1
  8697     0D97  00A0               	movwf	??___fladd
  8698     0D98  0820               	movf	??___fladd,w
  8699     0D99  07FA               	addwf	___fladd@bexp,f
  8700     0D9A                     l910:
  8701     0D9A  0A7A               	incf	___fladd@bexp,w
  8702     0D9B  1903               	btfsc	3,2
  8703     0D9C  2D9E               	goto	u3301
  8704     0D9D  2D9F               	goto	u3300
  8705     0D9E                     u3301:
  8706     0D9E  2DA4               	goto	l3874
  8707     0D9F                     u3300:
  8708     0D9F                     l3872:
  8709     0D9F  087A               	movf	___fladd@bexp,w
  8710     0DA0  1D03               	btfss	3,2
  8711     0DA1  2DA3               	goto	u3311
  8712     0DA2  2DA4               	goto	u3310
  8713     0DA3                     u3311:
  8714     0DA3  2DB2               	goto	l3880
  8715     0DA4                     u3310:
  8716     0DA4                     l3874:
  8717     0DA4  3000               	movlw	0
  8718     0DA5  00F3               	movwf	___fladd@b+3
  8719     0DA6  3000               	movlw	0
  8720     0DA7  00F2               	movwf	___fladd@b+2
  8721     0DA8  3000               	movlw	0
  8722     0DA9  00F1               	movwf	___fladd@b+1
  8723     0DAA  3000               	movlw	0
  8724     0DAB  00F0               	movwf	___fladd@b
  8725     0DAC                     l3876:
  8726     0DAC  087A               	movf	___fladd@bexp,w
  8727     0DAD  1D03               	btfss	3,2
  8728     0DAE  2DB0               	goto	u3321
  8729     0DAF  2DB1               	goto	u3320
  8730     0DB0                     u3321:
  8731     0DB0  2DB2               	goto	l3880
  8732     0DB1                     u3320:
  8733     0DB1                     l3878:
  8734     0DB1  01F8               	clrf	___fladd@signs
  8735     0DB2                     l3880:
  8736     0DB2  1C7A               	btfss	___fladd@bexp,0
  8737     0DB3  2DB5               	goto	u3331
  8738     0DB4  2DB6               	goto	u3330
  8739     0DB5                     u3331:
  8740     0DB5  2DB8               	goto	l3884
  8741     0DB6                     u3330:
  8742     0DB6                     l3882:
  8743     0DB6  17F2               	bsf	___fladd@b+2,7
  8744     0DB7  2DBD               	goto	l918
  8745     0DB8                     l3884:
  8746     0DB8  307F               	movlw	127
  8747     0DB9  0020               	movlb	0	; select bank0
  8748     0DBA  00A0               	movwf	??___fladd
  8749     0DBB  0820               	movf	??___fladd,w
  8750     0DBC  05F2               	andwf	___fladd@b+2,f
  8751     0DBD                     l918:
  8752     0DBD  367A               	lsrf	___fladd@bexp,w
  8753     0DBE  00F3               	movwf	___fladd@b+3
  8754     0DBF                     l3886:
  8755     0DBF  1FF8               	btfss	___fladd@signs,7
  8756     0DC0  2DC2               	goto	u3341
  8757     0DC1  2DC3               	goto	u3340
  8758     0DC2                     u3341:
  8759     0DC2  2DC4               	goto	l919
  8760     0DC3                     u3340:
  8761     0DC3                     l3888:
  8762     0DC3  17F3               	bsf	___fladd@b+3,7
  8763     0DC4                     l919:
  8764     0DC4                     l889:
  8765     0DC4  0008               	return
  8766     0DC5                     __end_of___fladd:
  8767                           
  8768                           	psect	text23
  8769     198C                     __ptext23:	
  8770 ;; *************** function ___flneg *****************
  8771 ;; Defined at:
  8772 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flneg.c"
  8773 ;; Parameters:    Size  Location     Type
  8774 ;;  f1              4    0[COMMON] unsigned char 
  8775 ;; Auto vars:     Size  Location     Type
  8776 ;;		None
  8777 ;; Return value:  Size  Location     Type
  8778 ;;                  4    0[COMMON] unsigned char 
  8779 ;; Registers used:
  8780 ;;		wreg
  8781 ;; Tracked objects:
  8782 ;;		On entry : 0/0
  8783 ;;		On exit  : 0/0
  8784 ;;		Unchanged: 0/0
  8785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8786 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8789 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8790 ;;Total ram usage:        4 bytes
  8791 ;; Hardware stack levels used: 1
  8792 ;; This function calls:
  8793 ;;		Nothing
  8794 ;; This function is called by:
  8795 ;;		_efgtoa
  8796 ;; This function uses a non-reentrant model
  8797 ;;
  8798                           
  8799     198C                     ___flneg:	
  8800                           ;psect for function ___flneg
  8801                           
  8802     198C                     l3958:	
  8803                           ;incstack = 0
  8804                           ; Regs used in ___flneg: [wreg]
  8805                           
  8806     198C  0873               	movf	___flneg@f1+3,w
  8807     198D  0472               	iorwf	___flneg@f1+2,w
  8808     198E  0471               	iorwf	___flneg@f1+1,w
  8809     198F  0470               	iorwf	___flneg@f1,w
  8810     1990  1903               	skipnz
  8811     1991  2993               	goto	u3511
  8812     1992  2994               	goto	u3510
  8813     1993                     u3511:
  8814     1993  2996               	goto	l3962
  8815     1994                     u3510:
  8816     1994                     l3960:
  8817     1994  3080               	movlw	128
  8818     1995  06F3               	xorwf	___flneg@f1+3,f
  8819     1996                     l3962:
  8820     1996                     l765:
  8821     1996  0008               	return
  8822     1997                     __end_of___flneg:
  8823                           
  8824                           	psect	text24
  8825     0DC5                     __ptext24:	
  8826 ;; *************** function ___flmul *****************
  8827 ;; Defined at:
  8828 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;  b               4    0[BANK0 ] unsigned char 
  8831 ;;  a               4    4[BANK0 ] unsigned char 
  8832 ;; Auto vars:     Size  Location     Type
  8833 ;;  prod            4   20[BANK0 ] struct .
  8834 ;;  grs             4   14[BANK0 ] unsigned long 
  8835 ;;  temp            2   24[BANK0 ] struct .
  8836 ;;  bexp            1   19[BANK0 ] unsigned char 
  8837 ;;  aexp            1   18[BANK0 ] unsigned char 
  8838 ;;  sign            1   13[BANK0 ] unsigned char 
  8839 ;; Return value:  Size  Location     Type
  8840 ;;                  4    0[BANK0 ] unsigned char 
  8841 ;; Registers used:
  8842 ;;		wreg, status,2, status,0, pclath, cstack
  8843 ;; Tracked objects:
  8844 ;;		On entry : 0/0
  8845 ;;		On exit  : 0/0
  8846 ;;		Unchanged: 0/0
  8847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8848 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8849 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8850 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8851 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8852 ;;Total ram usage:       26 bytes
  8853 ;; Hardware stack levels used: 1
  8854 ;; Hardware stack levels required when called: 1
  8855 ;; This function calls:
  8856 ;;		__Umul8_16
  8857 ;; This function is called by:
  8858 ;;		_MenuSensores
  8859 ;;		_efgtoa
  8860 ;; This function uses a non-reentrant model
  8861 ;;
  8862                           
  8863     0DC5                     ___flmul:	
  8864                           ;psect for function ___flmul
  8865                           
  8866     0DC5                     l4148:	
  8867                           ;incstack = 0
  8868                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8869                           
  8870     0DC5  0020               	movlb	0	; select bank0
  8871     0DC6  0823               	movf	___flmul@b+3,w
  8872     0DC7  3980               	andlw	128
  8873     0DC8  00AD               	movwf	___flmul@sign
  8874     0DC9                     l4150:
  8875     0DC9  3523               	lslf	___flmul@b+3,w
  8876     0DCA  00B3               	movwf	___flmul@bexp
  8877     0DCB                     l4152:
  8878     0DCB  1FA2               	btfss	___flmul@b+2,7
  8879     0DCC  2DCE               	goto	u3911
  8880     0DCD  2DCF               	goto	u3910
  8881     0DCE                     u3911:
  8882     0DCE  2DD0               	goto	l4156
  8883     0DCF                     u3910:
  8884     0DCF                     l4154:
  8885     0DCF  1433               	bsf	___flmul@bexp,0
  8886     0DD0                     l4156:
  8887     0DD0  0833               	movf	___flmul@bexp,w
  8888     0DD1  1903               	btfsc	3,2
  8889     0DD2  2DD4               	goto	u3921
  8890     0DD3  2DD5               	goto	u3920
  8891     0DD4                     u3921:
  8892     0DD4  2DE4               	goto	l4164
  8893     0DD5                     u3920:
  8894     0DD5                     l4158:
  8895     0DD5  0A33               	incf	___flmul@bexp,w
  8896     0DD6  1D03               	btfss	3,2
  8897     0DD7  2DD9               	goto	u3931
  8898     0DD8  2DDA               	goto	u3930
  8899     0DD9                     u3931:
  8900     0DD9  2DE2               	goto	l4162
  8901     0DDA                     u3930:
  8902     0DDA                     l4160:
  8903     0DDA  3000               	movlw	0
  8904     0DDB  00A3               	movwf	___flmul@b+3
  8905     0DDC  3000               	movlw	0
  8906     0DDD  00A2               	movwf	___flmul@b+2
  8907     0DDE  3000               	movlw	0
  8908     0DDF  00A1               	movwf	___flmul@b+1
  8909     0DE0  3000               	movlw	0
  8910     0DE1  00A0               	movwf	___flmul@b
  8911     0DE2                     l4162:
  8912     0DE2  17A2               	bsf	___flmul@b+2,7
  8913     0DE3  2DEC               	goto	l4166
  8914     0DE4                     l4164:
  8915     0DE4  3000               	movlw	0
  8916     0DE5  00A3               	movwf	___flmul@b+3
  8917     0DE6  3000               	movlw	0
  8918     0DE7  00A2               	movwf	___flmul@b+2
  8919     0DE8  3000               	movlw	0
  8920     0DE9  00A1               	movwf	___flmul@b+1
  8921     0DEA  3000               	movlw	0
  8922     0DEB  00A0               	movwf	___flmul@b
  8923     0DEC                     l4166:
  8924     0DEC  0827               	movf	___flmul@a+3,w
  8925     0DED  3980               	andlw	128
  8926     0DEE  00A8               	movwf	??___flmul
  8927     0DEF  0828               	movf	??___flmul,w
  8928     0DF0  06AD               	xorwf	___flmul@sign,f
  8929     0DF1                     l4168:
  8930     0DF1  3527               	lslf	___flmul@a+3,w
  8931     0DF2  00B2               	movwf	___flmul@aexp
  8932     0DF3                     l4170:
  8933     0DF3  1FA6               	btfss	___flmul@a+2,7
  8934     0DF4  2DF6               	goto	u3941
  8935     0DF5  2DF7               	goto	u3940
  8936     0DF6                     u3941:
  8937     0DF6  2DF8               	goto	l4174
  8938     0DF7                     u3940:
  8939     0DF7                     l4172:
  8940     0DF7  1432               	bsf	___flmul@aexp,0
  8941     0DF8                     l4174:
  8942     0DF8  0832               	movf	___flmul@aexp,w
  8943     0DF9  1903               	btfsc	3,2
  8944     0DFA  2DFC               	goto	u3951
  8945     0DFB  2DFD               	goto	u3950
  8946     0DFC                     u3951:
  8947     0DFC  2E0C               	goto	l4182
  8948     0DFD                     u3950:
  8949     0DFD                     l4176:
  8950     0DFD  0A32               	incf	___flmul@aexp,w
  8951     0DFE  1D03               	btfss	3,2
  8952     0DFF  2E01               	goto	u3961
  8953     0E00  2E02               	goto	u3960
  8954     0E01                     u3961:
  8955     0E01  2E0A               	goto	l4180
  8956     0E02                     u3960:
  8957     0E02                     l4178:
  8958     0E02  3000               	movlw	0
  8959     0E03  00A7               	movwf	___flmul@a+3
  8960     0E04  3000               	movlw	0
  8961     0E05  00A6               	movwf	___flmul@a+2
  8962     0E06  3000               	movlw	0
  8963     0E07  00A5               	movwf	___flmul@a+1
  8964     0E08  3000               	movlw	0
  8965     0E09  00A4               	movwf	___flmul@a
  8966     0E0A                     l4180:
  8967     0E0A  17A6               	bsf	___flmul@a+2,7
  8968     0E0B  2E14               	goto	l4184
  8969     0E0C                     l4182:
  8970     0E0C  3000               	movlw	0
  8971     0E0D  00A7               	movwf	___flmul@a+3
  8972     0E0E  3000               	movlw	0
  8973     0E0F  00A6               	movwf	___flmul@a+2
  8974     0E10  3000               	movlw	0
  8975     0E11  00A5               	movwf	___flmul@a+1
  8976     0E12  3000               	movlw	0
  8977     0E13  00A4               	movwf	___flmul@a
  8978     0E14                     l4184:
  8979     0E14  0832               	movf	___flmul@aexp,w
  8980     0E15  1903               	btfsc	3,2
  8981     0E16  2E18               	goto	u3971
  8982     0E17  2E19               	goto	u3970
  8983     0E18                     u3971:
  8984     0E18  2E1E               	goto	l4188
  8985     0E19                     u3970:
  8986     0E19                     l4186:
  8987     0E19  0833               	movf	___flmul@bexp,w
  8988     0E1A  1D03               	btfss	3,2
  8989     0E1B  2E1D               	goto	u3981
  8990     0E1C  2E1E               	goto	u3980
  8991     0E1D                     u3981:
  8992     0E1D  2E27               	goto	l4192
  8993     0E1E                     u3980:
  8994     0E1E                     l4188:
  8995     0E1E  3000               	movlw	0
  8996     0E1F  00A3               	movwf	?___flmul+3
  8997     0E20  3000               	movlw	0
  8998     0E21  00A2               	movwf	?___flmul+2
  8999     0E22  3000               	movlw	0
  9000     0E23  00A1               	movwf	?___flmul+1
  9001     0E24  3000               	movlw	0
  9002     0E25  00A0               	movwf	?___flmul
  9003     0E26  2FFF               	goto	l972
  9004     0E27                     l4192:
  9005     0E27  0820               	movf	___flmul@b,w
  9006     0E28  00F0               	movwf	__Umul8_16@multiplicand
  9007     0E29  0826               	movf	___flmul@a+2,w
  9008     0E2A  319A  22DC  318D   	fcall	__Umul8_16
  9009     0E2D  0871               	movf	?__Umul8_16+1,w
  9010     0E2E  0020               	movlb	0	; select bank0
  9011     0E2F  00B9               	movwf	___flmul@temp+1
  9012     0E30  0870               	movf	?__Umul8_16,w
  9013     0E31  00B8               	movwf	___flmul@temp
  9014     0E32                     l4194:
  9015     0E32  0838               	movf	___flmul@temp,w
  9016     0E33  00A8               	movwf	??___flmul
  9017     0E34  01A9               	clrf	??___flmul+1
  9018     0E35  01AA               	clrf	??___flmul+2
  9019     0E36  01AB               	clrf	??___flmul+3
  9020     0E37  082B               	movf	??___flmul+3,w
  9021     0E38  00B1               	movwf	___flmul@grs+3
  9022     0E39  082A               	movf	??___flmul+2,w
  9023     0E3A  00B0               	movwf	___flmul@grs+2
  9024     0E3B  0829               	movf	??___flmul+1,w
  9025     0E3C  00AF               	movwf	___flmul@grs+1
  9026     0E3D  0828               	movf	??___flmul,w
  9027     0E3E  00AE               	movwf	___flmul@grs
  9028     0E3F                     l4196:
  9029     0E3F  0839               	movf	___flmul@temp+1,w
  9030     0E40  00A8               	movwf	??___flmul
  9031     0E41  01A9               	clrf	??___flmul+1
  9032     0E42  01AA               	clrf	??___flmul+2
  9033     0E43  01AB               	clrf	??___flmul+3
  9034     0E44  082B               	movf	??___flmul+3,w
  9035     0E45  00B7               	movwf	___flmul@prod+3
  9036     0E46  082A               	movf	??___flmul+2,w
  9037     0E47  00B6               	movwf	___flmul@prod+2
  9038     0E48  0829               	movf	??___flmul+1,w
  9039     0E49  00B5               	movwf	___flmul@prod+1
  9040     0E4A  0828               	movf	??___flmul,w
  9041     0E4B  00B4               	movwf	___flmul@prod
  9042     0E4C  0821               	movf	___flmul@b+1,w
  9043     0E4D  00F0               	movwf	__Umul8_16@multiplicand
  9044     0E4E  0825               	movf	___flmul@a+1,w
  9045     0E4F  319A  22DC  318D   	fcall	__Umul8_16
  9046     0E52  0871               	movf	?__Umul8_16+1,w
  9047     0E53  0020               	movlb	0	; select bank0
  9048     0E54  00B9               	movwf	___flmul@temp+1
  9049     0E55  0870               	movf	?__Umul8_16,w
  9050     0E56  00B8               	movwf	___flmul@temp
  9051     0E57                     l4198:
  9052     0E57  0838               	movf	___flmul@temp,w
  9053     0E58  00A8               	movwf	??___flmul
  9054     0E59  01A9               	clrf	??___flmul+1
  9055     0E5A  01AA               	clrf	??___flmul+2
  9056     0E5B  01AB               	clrf	??___flmul+3
  9057     0E5C  0828               	movf	??___flmul,w
  9058     0E5D  07AE               	addwf	___flmul@grs,f
  9059     0E5E  0829               	movf	??___flmul+1,w
  9060     0E5F  3DAF               	addwfc	___flmul@grs+1,f
  9061     0E60  082A               	movf	??___flmul+2,w
  9062     0E61  3DB0               	addwfc	___flmul@grs+2,f
  9063     0E62  082B               	movf	??___flmul+3,w
  9064     0E63  3DB1               	addwfc	___flmul@grs+3,f
  9065     0E64                     l4200:
  9066     0E64  0839               	movf	___flmul@temp+1,w
  9067     0E65  00A8               	movwf	??___flmul
  9068     0E66  01A9               	clrf	??___flmul+1
  9069     0E67  01AA               	clrf	??___flmul+2
  9070     0E68  01AB               	clrf	??___flmul+3
  9071     0E69  0828               	movf	??___flmul,w
  9072     0E6A  07B4               	addwf	___flmul@prod,f
  9073     0E6B  0829               	movf	??___flmul+1,w
  9074     0E6C  3DB5               	addwfc	___flmul@prod+1,f
  9075     0E6D  082A               	movf	??___flmul+2,w
  9076     0E6E  3DB6               	addwfc	___flmul@prod+2,f
  9077     0E6F  082B               	movf	??___flmul+3,w
  9078     0E70  3DB7               	addwfc	___flmul@prod+3,f
  9079     0E71  0822               	movf	___flmul@b+2,w
  9080     0E72  00F0               	movwf	__Umul8_16@multiplicand
  9081     0E73  0824               	movf	___flmul@a,w
  9082     0E74  319A  22DC  318D   	fcall	__Umul8_16
  9083     0E77  0871               	movf	?__Umul8_16+1,w
  9084     0E78  0020               	movlb	0	; select bank0
  9085     0E79  00B9               	movwf	___flmul@temp+1
  9086     0E7A  0870               	movf	?__Umul8_16,w
  9087     0E7B  00B8               	movwf	___flmul@temp
  9088     0E7C                     l4202:
  9089     0E7C  0838               	movf	___flmul@temp,w
  9090     0E7D  00A8               	movwf	??___flmul
  9091     0E7E  01A9               	clrf	??___flmul+1
  9092     0E7F  01AA               	clrf	??___flmul+2
  9093     0E80  01AB               	clrf	??___flmul+3
  9094     0E81  0828               	movf	??___flmul,w
  9095     0E82  07AE               	addwf	___flmul@grs,f
  9096     0E83  0829               	movf	??___flmul+1,w
  9097     0E84  3DAF               	addwfc	___flmul@grs+1,f
  9098     0E85  082A               	movf	??___flmul+2,w
  9099     0E86  3DB0               	addwfc	___flmul@grs+2,f
  9100     0E87  082B               	movf	??___flmul+3,w
  9101     0E88  3DB1               	addwfc	___flmul@grs+3,f
  9102     0E89                     l4204:
  9103     0E89  0839               	movf	___flmul@temp+1,w
  9104     0E8A  00A8               	movwf	??___flmul
  9105     0E8B  01A9               	clrf	??___flmul+1
  9106     0E8C  01AA               	clrf	??___flmul+2
  9107     0E8D  01AB               	clrf	??___flmul+3
  9108     0E8E  0828               	movf	??___flmul,w
  9109     0E8F  07B4               	addwf	___flmul@prod,f
  9110     0E90  0829               	movf	??___flmul+1,w
  9111     0E91  3DB5               	addwfc	___flmul@prod+1,f
  9112     0E92  082A               	movf	??___flmul+2,w
  9113     0E93  3DB6               	addwfc	___flmul@prod+2,f
  9114     0E94  082B               	movf	??___flmul+3,w
  9115     0E95  3DB7               	addwfc	___flmul@prod+3,f
  9116     0E96                     l4206:
  9117     0E96  3008               	movlw	8
  9118     0E97                     u3995:
  9119     0E97  35AE               	lslf	___flmul@grs,f
  9120     0E98  0DAF               	rlf	___flmul@grs+1,f
  9121     0E99  0DB0               	rlf	___flmul@grs+2,f
  9122     0E9A  0DB1               	rlf	___flmul@grs+3,f
  9123     0E9B  0B89               	decfsz	9,f
  9124     0E9C  2E97               	goto	u3995
  9125     0E9D                     l4208:
  9126     0E9D  0821               	movf	___flmul@b+1,w
  9127     0E9E  00F0               	movwf	__Umul8_16@multiplicand
  9128     0E9F  0824               	movf	___flmul@a,w
  9129     0EA0  319A  22DC  318D   	fcall	__Umul8_16
  9130     0EA3  0871               	movf	?__Umul8_16+1,w
  9131     0EA4  0020               	movlb	0	; select bank0
  9132     0EA5  00B9               	movwf	___flmul@temp+1
  9133     0EA6  0870               	movf	?__Umul8_16,w
  9134     0EA7  00B8               	movwf	___flmul@temp
  9135     0EA8                     l4210:
  9136     0EA8  0838               	movf	___flmul@temp,w
  9137     0EA9  07AE               	addwf	___flmul@grs,f
  9138     0EAA  0839               	movf	___flmul@temp+1,w
  9139     0EAB  3DAF               	addwfc	___flmul@grs+1,f
  9140     0EAC  3000               	movlw	0
  9141     0EAD  3DB0               	addwfc	___flmul@grs+2,f
  9142     0EAE  3DB1               	addwfc	___flmul@grs+3,f
  9143     0EAF                     l4212:
  9144     0EAF  0820               	movf	___flmul@b,w
  9145     0EB0  00F0               	movwf	__Umul8_16@multiplicand
  9146     0EB1  0825               	movf	___flmul@a+1,w
  9147     0EB2  319A  22DC  318D   	fcall	__Umul8_16
  9148     0EB5  0871               	movf	?__Umul8_16+1,w
  9149     0EB6  0020               	movlb	0	; select bank0
  9150     0EB7  00B9               	movwf	___flmul@temp+1
  9151     0EB8  0870               	movf	?__Umul8_16,w
  9152     0EB9  00B8               	movwf	___flmul@temp
  9153     0EBA                     l4214:
  9154     0EBA  0838               	movf	___flmul@temp,w
  9155     0EBB  07AE               	addwf	___flmul@grs,f
  9156     0EBC  0839               	movf	___flmul@temp+1,w
  9157     0EBD  3DAF               	addwfc	___flmul@grs+1,f
  9158     0EBE  3000               	movlw	0
  9159     0EBF  3DB0               	addwfc	___flmul@grs+2,f
  9160     0EC0  3DB1               	addwfc	___flmul@grs+3,f
  9161     0EC1                     l4216:
  9162     0EC1  3008               	movlw	8
  9163     0EC2                     u4005:
  9164     0EC2  35AE               	lslf	___flmul@grs,f
  9165     0EC3  0DAF               	rlf	___flmul@grs+1,f
  9166     0EC4  0DB0               	rlf	___flmul@grs+2,f
  9167     0EC5  0DB1               	rlf	___flmul@grs+3,f
  9168     0EC6  0B89               	decfsz	9,f
  9169     0EC7  2EC2               	goto	u4005
  9170     0EC8  0820               	movf	___flmul@b,w
  9171     0EC9  00F0               	movwf	__Umul8_16@multiplicand
  9172     0ECA  0824               	movf	___flmul@a,w
  9173     0ECB  319A  22DC  318D   	fcall	__Umul8_16
  9174     0ECE  0871               	movf	?__Umul8_16+1,w
  9175     0ECF  0020               	movlb	0	; select bank0
  9176     0ED0  00B9               	movwf	___flmul@temp+1
  9177     0ED1  0870               	movf	?__Umul8_16,w
  9178     0ED2  00B8               	movwf	___flmul@temp
  9179     0ED3                     l4218:
  9180     0ED3  0838               	movf	___flmul@temp,w
  9181     0ED4  07AE               	addwf	___flmul@grs,f
  9182     0ED5  0839               	movf	___flmul@temp+1,w
  9183     0ED6  3DAF               	addwfc	___flmul@grs+1,f
  9184     0ED7  3000               	movlw	0
  9185     0ED8  3DB0               	addwfc	___flmul@grs+2,f
  9186     0ED9  3DB1               	addwfc	___flmul@grs+3,f
  9187     0EDA                     l4220:
  9188     0EDA  0821               	movf	___flmul@b+1,w
  9189     0EDB  00F0               	movwf	__Umul8_16@multiplicand
  9190     0EDC  0826               	movf	___flmul@a+2,w
  9191     0EDD  319A  22DC  318D   	fcall	__Umul8_16
  9192     0EE0  0871               	movf	?__Umul8_16+1,w
  9193     0EE1  0020               	movlb	0	; select bank0
  9194     0EE2  00B9               	movwf	___flmul@temp+1
  9195     0EE3  0870               	movf	?__Umul8_16,w
  9196     0EE4  00B8               	movwf	___flmul@temp
  9197     0EE5  0838               	movf	___flmul@temp,w
  9198     0EE6  07B4               	addwf	___flmul@prod,f
  9199     0EE7  0839               	movf	___flmul@temp+1,w
  9200     0EE8  3DB5               	addwfc	___flmul@prod+1,f
  9201     0EE9  3000               	movlw	0
  9202     0EEA  3DB6               	addwfc	___flmul@prod+2,f
  9203     0EEB  3DB7               	addwfc	___flmul@prod+3,f
  9204     0EEC                     l4222:
  9205     0EEC  0822               	movf	___flmul@b+2,w
  9206     0EED  00F0               	movwf	__Umul8_16@multiplicand
  9207     0EEE  0825               	movf	___flmul@a+1,w
  9208     0EEF  319A  22DC  318D   	fcall	__Umul8_16
  9209     0EF2  0871               	movf	?__Umul8_16+1,w
  9210     0EF3  0020               	movlb	0	; select bank0
  9211     0EF4  00B9               	movwf	___flmul@temp+1
  9212     0EF5  0870               	movf	?__Umul8_16,w
  9213     0EF6  00B8               	movwf	___flmul@temp
  9214     0EF7                     l4224:
  9215     0EF7  0838               	movf	___flmul@temp,w
  9216     0EF8  07B4               	addwf	___flmul@prod,f
  9217     0EF9  0839               	movf	___flmul@temp+1,w
  9218     0EFA  3DB5               	addwfc	___flmul@prod+1,f
  9219     0EFB  3000               	movlw	0
  9220     0EFC  3DB6               	addwfc	___flmul@prod+2,f
  9221     0EFD  3DB7               	addwfc	___flmul@prod+3,f
  9222     0EFE  0822               	movf	___flmul@b+2,w
  9223     0EFF  00F0               	movwf	__Umul8_16@multiplicand
  9224     0F00  0826               	movf	___flmul@a+2,w
  9225     0F01  319A  22DC  318D   	fcall	__Umul8_16
  9226     0F04  0871               	movf	?__Umul8_16+1,w
  9227     0F05  0020               	movlb	0	; select bank0
  9228     0F06  00B9               	movwf	___flmul@temp+1
  9229     0F07  0870               	movf	?__Umul8_16,w
  9230     0F08  00B8               	movwf	___flmul@temp
  9231     0F09                     l4226:
  9232     0F09  0838               	movf	___flmul@temp,w
  9233     0F0A  00A8               	movwf	??___flmul
  9234     0F0B  0839               	movf	___flmul@temp+1,w
  9235     0F0C  00A9               	movwf	??___flmul+1
  9236     0F0D  01AA               	clrf	??___flmul+2
  9237     0F0E  01AB               	clrf	??___flmul+3
  9238     0F0F  3008               	movlw	8
  9239     0F10                     u4015:
  9240     0F10  35A8               	lslf	??___flmul,f
  9241     0F11  0DA9               	rlf	??___flmul+1,f
  9242     0F12  0DAA               	rlf	??___flmul+2,f
  9243     0F13  0DAB               	rlf	??___flmul+3,f
  9244     0F14                     u4010:
  9245     0F14  0B89               	decfsz	9,f
  9246     0F15  2F10               	goto	u4015
  9247     0F16  0828               	movf	??___flmul,w
  9248     0F17  07B4               	addwf	___flmul@prod,f
  9249     0F18  0829               	movf	??___flmul+1,w
  9250     0F19  3DB5               	addwfc	___flmul@prod+1,f
  9251     0F1A  082A               	movf	??___flmul+2,w
  9252     0F1B  3DB6               	addwfc	___flmul@prod+2,f
  9253     0F1C  082B               	movf	??___flmul+3,w
  9254     0F1D  3DB7               	addwfc	___flmul@prod+3,f
  9255     0F1E                     l4228:
  9256     0F1E  082E               	movf	___flmul@grs,w
  9257     0F1F  00A8               	movwf	??___flmul
  9258     0F20  082F               	movf	___flmul@grs+1,w
  9259     0F21  00A9               	movwf	??___flmul+1
  9260     0F22  0830               	movf	___flmul@grs+2,w
  9261     0F23  00AA               	movwf	??___flmul+2
  9262     0F24  0831               	movf	___flmul@grs+3,w
  9263     0F25  00AB               	movwf	??___flmul+3
  9264     0F26  3018               	movlw	24
  9265     0F27                     u4025:
  9266     0F27  36AB               	lsrf	??___flmul+3,f
  9267     0F28  0CAA               	rrf	??___flmul+2,f
  9268     0F29  0CA9               	rrf	??___flmul+1,f
  9269     0F2A  0CA8               	rrf	??___flmul,f
  9270     0F2B                     u4020:
  9271     0F2B  0B89               	decfsz	9,f
  9272     0F2C  2F27               	goto	u4025
  9273     0F2D  0828               	movf	??___flmul,w
  9274     0F2E  07B4               	addwf	___flmul@prod,f
  9275     0F2F  0829               	movf	??___flmul+1,w
  9276     0F30  3DB5               	addwfc	___flmul@prod+1,f
  9277     0F31  082A               	movf	??___flmul+2,w
  9278     0F32  3DB6               	addwfc	___flmul@prod+2,f
  9279     0F33  082B               	movf	??___flmul+3,w
  9280     0F34  3DB7               	addwfc	___flmul@prod+3,f
  9281     0F35                     l4230:
  9282     0F35  3008               	movlw	8
  9283     0F36                     u4035:
  9284     0F36  35AE               	lslf	___flmul@grs,f
  9285     0F37  0DAF               	rlf	___flmul@grs+1,f
  9286     0F38  0DB0               	rlf	___flmul@grs+2,f
  9287     0F39  0DB1               	rlf	___flmul@grs+3,f
  9288     0F3A  0B89               	decfsz	9,f
  9289     0F3B  2F36               	goto	u4035
  9290     0F3C                     l4232:
  9291     0F3C  0833               	movf	___flmul@bexp,w
  9292     0F3D  0732               	addwf	___flmul@aexp,w
  9293     0F3E  00A8               	movwf	??___flmul
  9294     0F3F  01A9               	clrf	??___flmul+1
  9295     0F40  0DA9               	rlf	??___flmul+1,f
  9296     0F41  0828               	movf	??___flmul,w
  9297     0F42  3E82               	addlw	130
  9298     0F43  00B8               	movwf	___flmul@temp
  9299     0F44  30FF               	movlw	255
  9300     0F45  3D29               	addwfc	??___flmul+1,w
  9301     0F46  00B9               	movwf	___flmul@temp+1
  9302     0F47  2F5F               	goto	l4244
  9303     0F48                     l4234:
  9304     0F48  3001               	movlw	1
  9305     0F49                     u4045:
  9306     0F49  35B4               	lslf	___flmul@prod,f
  9307     0F4A  0DB5               	rlf	___flmul@prod+1,f
  9308     0F4B  0DB6               	rlf	___flmul@prod+2,f
  9309     0F4C  0DB7               	rlf	___flmul@prod+3,f
  9310     0F4D  0B89               	decfsz	9,f
  9311     0F4E  2F49               	goto	u4045
  9312     0F4F                     l4236:
  9313     0F4F  1FB1               	btfss	___flmul@grs+3,7
  9314     0F50  2F52               	goto	u4051
  9315     0F51  2F53               	goto	u4050
  9316     0F52                     u4051:
  9317     0F52  2F54               	goto	l4240
  9318     0F53                     u4050:
  9319     0F53                     l4238:
  9320     0F53  1434               	bsf	___flmul@prod,0
  9321     0F54                     l4240:
  9322     0F54  3001               	movlw	1
  9323     0F55                     u4065:
  9324     0F55  35AE               	lslf	___flmul@grs,f
  9325     0F56  0DAF               	rlf	___flmul@grs+1,f
  9326     0F57  0DB0               	rlf	___flmul@grs+2,f
  9327     0F58  0DB1               	rlf	___flmul@grs+3,f
  9328     0F59  0B89               	decfsz	9,f
  9329     0F5A  2F55               	goto	u4065
  9330     0F5B                     l4242:
  9331     0F5B  30FF               	movlw	255
  9332     0F5C  07B8               	addwf	___flmul@temp,f
  9333     0F5D  30FF               	movlw	255
  9334     0F5E  3DB9               	addwfc	___flmul@temp+1,f
  9335     0F5F                     l4244:
  9336     0F5F  1FB6               	btfss	___flmul@prod+2,7
  9337     0F60  2F62               	goto	u4071
  9338     0F61  2F63               	goto	u4070
  9339     0F62                     u4071:
  9340     0F62  2F48               	goto	l4234
  9341     0F63                     u4070:
  9342     0F63                     l4246:
  9343     0F63  01B2               	clrf	___flmul@aexp
  9344     0F64                     l4248:
  9345     0F64  1FB1               	btfss	___flmul@grs+3,7
  9346     0F65  2F67               	goto	u4081
  9347     0F66  2F68               	goto	u4080
  9348     0F67                     u4081:
  9349     0F67  2F84               	goto	l4256
  9350     0F68                     u4080:
  9351     0F68                     l4250:
  9352     0F68  30FF               	movlw	255
  9353     0F69  052E               	andwf	___flmul@grs,w
  9354     0F6A  00A8               	movwf	??___flmul
  9355     0F6B  30FF               	movlw	255
  9356     0F6C  052F               	andwf	___flmul@grs+1,w
  9357     0F6D  00A9               	movwf	??___flmul+1
  9358     0F6E  30FF               	movlw	255
  9359     0F6F  0530               	andwf	___flmul@grs+2,w
  9360     0F70  00AA               	movwf	??___flmul+2
  9361     0F71  307F               	movlw	127
  9362     0F72  0531               	andwf	___flmul@grs+3,w
  9363     0F73  00AB               	movwf	??___flmul+3
  9364     0F74  082B               	movf	??___flmul+3,w
  9365     0F75  042A               	iorwf	??___flmul+2,w
  9366     0F76  0429               	iorwf	??___flmul+1,w
  9367     0F77  0428               	iorwf	??___flmul,w
  9368     0F78  1903               	skipnz
  9369     0F79  2F7B               	goto	u4091
  9370     0F7A  2F7C               	goto	u4090
  9371     0F7B                     u4091:
  9372     0F7B  2F7F               	goto	l978
  9373     0F7C                     u4090:
  9374     0F7C                     l4252:
  9375     0F7C  01B2               	clrf	___flmul@aexp
  9376     0F7D  0AB2               	incf	___flmul@aexp,f
  9377     0F7E  2F84               	goto	l4256
  9378     0F7F                     l978:
  9379     0F7F  1C34               	btfss	___flmul@prod,0
  9380     0F80  2F82               	goto	u4101
  9381     0F81  2F83               	goto	u4100
  9382     0F82                     u4101:
  9383     0F82  2F84               	goto	l4256
  9384     0F83                     u4100:
  9385     0F83  2F7C               	goto	l4252
  9386     0F84                     l4256:
  9387     0F84  0832               	movf	___flmul@aexp,w
  9388     0F85  1903               	btfsc	3,2
  9389     0F86  2F88               	goto	u4111
  9390     0F87  2F89               	goto	u4110
  9391     0F88                     u4111:
  9392     0F88  2FB1               	goto	l4266
  9393     0F89                     u4110:
  9394     0F89                     l4258:
  9395     0F89  3001               	movlw	1
  9396     0F8A  07B4               	addwf	___flmul@prod,f
  9397     0F8B  3000               	movlw	0
  9398     0F8C  3DB5               	addwfc	___flmul@prod+1,f
  9399     0F8D  3000               	movlw	0
  9400     0F8E  3DB6               	addwfc	___flmul@prod+2,f
  9401     0F8F  3000               	movlw	0
  9402     0F90  3DB7               	addwfc	___flmul@prod+3,f
  9403     0F91                     l4260:
  9404     0F91  1C37               	btfss	___flmul@prod+3,0
  9405     0F92  2F94               	goto	u4121
  9406     0F93  2F95               	goto	u4120
  9407     0F94                     u4121:
  9408     0F94  2FB1               	goto	l4266
  9409     0F95                     u4120:
  9410     0F95                     l4262:
  9411     0F95  0834               	movf	___flmul@prod,w
  9412     0F96  00A8               	movwf	??___flmul
  9413     0F97  0835               	movf	___flmul@prod+1,w
  9414     0F98  00A9               	movwf	??___flmul+1
  9415     0F99  0836               	movf	___flmul@prod+2,w
  9416     0F9A  00AA               	movwf	??___flmul+2
  9417     0F9B  0837               	movf	___flmul@prod+3,w
  9418     0F9C  00AB               	movwf	??___flmul+3
  9419     0F9D  3001               	movlw	1
  9420     0F9E  00AC               	movwf	??___flmul+4
  9421     0F9F                     u4135:
  9422     0F9F  37AB               	asrf	??___flmul+3,f
  9423     0FA0  0CAA               	rrf	??___flmul+2,f
  9424     0FA1  0CA9               	rrf	??___flmul+1,f
  9425     0FA2  0CA8               	rrf	??___flmul,f
  9426     0FA3                     u4130:
  9427     0FA3  0BAC               	decfsz	??___flmul+4,f
  9428     0FA4  2F9F               	goto	u4135
  9429     0FA5  082B               	movf	??___flmul+3,w
  9430     0FA6  00B7               	movwf	___flmul@prod+3
  9431     0FA7  082A               	movf	??___flmul+2,w
  9432     0FA8  00B6               	movwf	___flmul@prod+2
  9433     0FA9  0829               	movf	??___flmul+1,w
  9434     0FAA  00B5               	movwf	___flmul@prod+1
  9435     0FAB  0828               	movf	??___flmul,w
  9436     0FAC  00B4               	movwf	___flmul@prod
  9437     0FAD                     l4264:
  9438     0FAD  3001               	movlw	1
  9439     0FAE  07B8               	addwf	___flmul@temp,f
  9440     0FAF  3000               	movlw	0
  9441     0FB0  3DB9               	addwfc	___flmul@temp+1,f
  9442     0FB1                     l4266:
  9443     0FB1  0839               	movf	___flmul@temp+1,w
  9444     0FB2  3A80               	xorlw	128
  9445     0FB3  00A8               	movwf	??___flmul
  9446     0FB4  3080               	movlw	128
  9447     0FB5  0228               	subwf	??___flmul,w
  9448     0FB6  1D03               	skipz
  9449     0FB7  2FBA               	goto	u4145
  9450     0FB8  30FF               	movlw	255
  9451     0FB9  0238               	subwf	___flmul@temp,w
  9452     0FBA                     u4145:
  9453     0FBA  1C03               	skipc
  9454     0FBB  2FBD               	goto	u4141
  9455     0FBC  2FBE               	goto	u4140
  9456     0FBD                     u4141:
  9457     0FBD  2FC8               	goto	l4270
  9458     0FBE                     u4140:
  9459     0FBE                     l4268:
  9460     0FBE  307F               	movlw	127
  9461     0FBF  0020               	movlb	0	; select bank0
  9462     0FC0  00B7               	movwf	___flmul@prod+3
  9463     0FC1  3080               	movlw	128
  9464     0FC2  00B6               	movwf	___flmul@prod+2
  9465     0FC3  3000               	movlw	0
  9466     0FC4  00B5               	movwf	___flmul@prod+1
  9467     0FC5  3000               	movlw	0
  9468     0FC6  00B4               	movwf	___flmul@prod
  9469     0FC7  2FF3               	goto	l984
  9470     0FC8                     l4270:
  9471     0FC8  0020               	movlb	0	; select bank0
  9472     0FC9  0839               	movf	___flmul@temp+1,w
  9473     0FCA  3A80               	xorlw	128
  9474     0FCB  00A8               	movwf	??___flmul
  9475     0FCC  3080               	movlw	128
  9476     0FCD  0228               	subwf	??___flmul,w
  9477     0FCE  1D03               	skipz
  9478     0FCF  2FD2               	goto	u4155
  9479     0FD0  3001               	movlw	1
  9480     0FD1  0238               	subwf	___flmul@temp,w
  9481     0FD2                     u4155:
  9482     0FD2  1803               	skipnc
  9483     0FD3  2FD5               	goto	u4151
  9484     0FD4  2FD6               	goto	u4150
  9485     0FD5                     u4151:
  9486     0FD5  2FE1               	goto	l4276
  9487     0FD6                     u4150:
  9488     0FD6                     l4272:
  9489     0FD6  3000               	movlw	0
  9490     0FD7  0020               	movlb	0	; select bank0
  9491     0FD8  00B7               	movwf	___flmul@prod+3
  9492     0FD9  3000               	movlw	0
  9493     0FDA  00B6               	movwf	___flmul@prod+2
  9494     0FDB  3000               	movlw	0
  9495     0FDC  00B5               	movwf	___flmul@prod+1
  9496     0FDD  3000               	movlw	0
  9497     0FDE  00B4               	movwf	___flmul@prod
  9498     0FDF                     l4274:
  9499     0FDF  01AD               	clrf	___flmul@sign
  9500     0FE0  2FF3               	goto	l984
  9501     0FE1                     l4276:
  9502     0FE1  0020               	movlb	0	; select bank0
  9503     0FE2  0838               	movf	___flmul@temp,w
  9504     0FE3  00B3               	movwf	___flmul@bexp
  9505     0FE4  30FF               	movlw	255
  9506     0FE5  05B4               	andwf	___flmul@prod,f
  9507     0FE6  30FF               	movlw	255
  9508     0FE7  05B5               	andwf	___flmul@prod+1,f
  9509     0FE8  307F               	movlw	127
  9510     0FE9  05B6               	andwf	___flmul@prod+2,f
  9511     0FEA  3000               	movlw	0
  9512     0FEB  05B7               	andwf	___flmul@prod+3,f
  9513     0FEC                     l4278:
  9514     0FEC  1C33               	btfss	___flmul@bexp,0
  9515     0FED  2FEF               	goto	u4161
  9516     0FEE  2FF0               	goto	u4160
  9517     0FEF                     u4161:
  9518     0FEF  2FF1               	goto	l4282
  9519     0FF0                     u4160:
  9520     0FF0                     l4280:
  9521     0FF0  17B6               	bsf	___flmul@prod+2,7
  9522     0FF1                     l4282:
  9523     0FF1  3633               	lsrf	___flmul@bexp,w
  9524     0FF2  00B7               	movwf	___flmul@prod+3
  9525     0FF3                     l984:
  9526     0FF3  082D               	movf	___flmul@sign,w
  9527     0FF4  00A8               	movwf	??___flmul
  9528     0FF5  0828               	movf	??___flmul,w
  9529     0FF6  04B7               	iorwf	___flmul@prod+3,f
  9530     0FF7                     l4284:
  9531     0FF7  0837               	movf	___flmul@prod+3,w
  9532     0FF8  00A3               	movwf	?___flmul+3
  9533     0FF9  0836               	movf	___flmul@prod+2,w
  9534     0FFA  00A2               	movwf	?___flmul+2
  9535     0FFB  0835               	movf	___flmul@prod+1,w
  9536     0FFC  00A1               	movwf	?___flmul+1
  9537     0FFD  0834               	movf	___flmul@prod,w
  9538     0FFE  00A0               	movwf	?___flmul
  9539     0FFF                     l972:
  9540     0FFF  0008               	return
  9541     1000                     __end_of___flmul:
  9542                           
  9543                           	psect	text25
  9544     1ADC                     __ptext25:	
  9545 ;; *************** function __Umul8_16 *****************
  9546 ;; Defined at:
  9547 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul8_16.c"
  9548 ;; Parameters:    Size  Location     Type
  9549 ;;  multiplier      1    wreg     unsigned char 
  9550 ;;  multiplicand    1    0[COMMON] unsigned char 
  9551 ;; Auto vars:     Size  Location     Type
  9552 ;;  multiplier      1    8[COMMON] unsigned char 
  9553 ;;  word_mpld       2    6[COMMON] unsigned int 
  9554 ;;  product         2    4[COMMON] unsigned int 
  9555 ;; Return value:  Size  Location     Type
  9556 ;;                  2    0[COMMON] unsigned int 
  9557 ;; Registers used:
  9558 ;;		wreg, status,2, status,0
  9559 ;; Tracked objects:
  9560 ;;		On entry : 0/0
  9561 ;;		On exit  : 0/0
  9562 ;;		Unchanged: 0/0
  9563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9564 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9565 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9566 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9567 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9568 ;;Total ram usage:        9 bytes
  9569 ;; Hardware stack levels used: 1
  9570 ;; This function calls:
  9571 ;;		Nothing
  9572 ;; This function is called by:
  9573 ;;		___flmul
  9574 ;; This function uses a non-reentrant model
  9575 ;;
  9576                           
  9577     1ADC                     __Umul8_16:	
  9578                           ;psect for function __Umul8_16
  9579                           
  9580                           
  9581                           ;incstack = 0
  9582                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9583                           ;__Umul8_16@multiplier stored from wreg
  9584     1ADC  00F8               	movwf	__Umul8_16@multiplier
  9585     1ADD                     l3890:
  9586     1ADD  01F4               	clrf	__Umul8_16@product
  9587     1ADE  01F5               	clrf	__Umul8_16@product+1
  9588     1ADF                     l3892:
  9589     1ADF  0870               	movf	__Umul8_16@multiplicand,w
  9590     1AE0  00F2               	movwf	??__Umul8_16
  9591     1AE1  01F3               	clrf	??__Umul8_16+1
  9592     1AE2  0872               	movf	??__Umul8_16,w
  9593     1AE3  00F6               	movwf	__Umul8_16@word_mpld
  9594     1AE4  0873               	movf	??__Umul8_16+1,w
  9595     1AE5  00F7               	movwf	__Umul8_16@word_mpld+1
  9596     1AE6                     l3894:
  9597     1AE6  1C78               	btfss	__Umul8_16@multiplier,0
  9598     1AE7  2AE9               	goto	u3351
  9599     1AE8  2AEA               	goto	u3350
  9600     1AE9                     u3351:
  9601     1AE9  2AEE               	goto	l991
  9602     1AEA                     u3350:
  9603     1AEA                     l3896:
  9604     1AEA  0876               	movf	__Umul8_16@word_mpld,w
  9605     1AEB  07F4               	addwf	__Umul8_16@product,f
  9606     1AEC  0877               	movf	__Umul8_16@word_mpld+1,w
  9607     1AED  3DF5               	addwfc	__Umul8_16@product+1,f
  9608     1AEE                     l991:
  9609     1AEE  3001               	movlw	1
  9610     1AEF                     u3365:
  9611     1AEF  35F6               	lslf	__Umul8_16@word_mpld,f
  9612     1AF0  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9613     1AF1  0B89               	decfsz	9,f
  9614     1AF2  2AEF               	goto	u3365
  9615     1AF3  1003               	clrc
  9616     1AF4  0CF8               	rrf	__Umul8_16@multiplier,f
  9617     1AF5                     l3898:
  9618     1AF5  0878               	movf	__Umul8_16@multiplier,w
  9619     1AF6  1D03               	btfss	3,2
  9620     1AF7  2AF9               	goto	u3371
  9621     1AF8  2AFA               	goto	u3370
  9622     1AF9                     u3371:
  9623     1AF9  2AE6               	goto	l3894
  9624     1AFA                     u3370:
  9625     1AFA                     l3900:
  9626     1AFA  0875               	movf	__Umul8_16@product+1,w
  9627     1AFB  00F1               	movwf	?__Umul8_16+1
  9628     1AFC  0874               	movf	__Umul8_16@product,w
  9629     1AFD  00F0               	movwf	?__Umul8_16
  9630     1AFE                     l993:
  9631     1AFE  0008               	return
  9632     1AFF                     __end_of__Umul8_16:
  9633                           
  9634                           	psect	text26
  9635     1045                     __ptext26:	
  9636 ;; *************** function ___flge *****************
  9637 ;; Defined at:
  9638 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flge.c"
  9639 ;; Parameters:    Size  Location     Type
  9640 ;;  ff1             4   26[BANK0 ] unsigned int 
  9641 ;;  ff2             4   30[BANK0 ] unsigned int 
  9642 ;; Auto vars:     Size  Location     Type
  9643 ;;		None
  9644 ;; Return value:  Size  Location     Type
  9645 ;;		None               void
  9646 ;; Registers used:
  9647 ;;		wreg, status,2, status,0
  9648 ;; Tracked objects:
  9649 ;;		On entry : 0/0
  9650 ;;		On exit  : 0/0
  9651 ;;		Unchanged: 0/0
  9652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9653 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9655 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9656 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9657 ;;Total ram usage:       12 bytes
  9658 ;; Hardware stack levels used: 1
  9659 ;; This function calls:
  9660 ;;		Nothing
  9661 ;; This function is called by:
  9662 ;;		_efgtoa
  9663 ;; This function uses a non-reentrant model
  9664 ;;
  9665                           
  9666     1045                     ___flge:	
  9667                           ;psect for function ___flge
  9668                           
  9669     1045                     l3938:	
  9670                           ;incstack = 0
  9671                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9672                           
  9673     1045  3000               	movlw	0
  9674     1046  0020               	movlb	0	; select bank0
  9675     1047  053A               	andwf	___flge@ff1,w
  9676     1048  00C2               	movwf	??___flge
  9677     1049  3000               	movlw	0
  9678     104A  053B               	andwf	___flge@ff1+1,w
  9679     104B  00C3               	movwf	??___flge+1
  9680     104C  3080               	movlw	128
  9681     104D  053C               	andwf	___flge@ff1+2,w
  9682     104E  00C4               	movwf	??___flge+2
  9683     104F  307F               	movlw	127
  9684     1050  053D               	andwf	___flge@ff1+3,w
  9685     1051  00C5               	movwf	??___flge+3
  9686     1052  0845               	movf	??___flge+3,w
  9687     1053  0444               	iorwf	??___flge+2,w
  9688     1054  0443               	iorwf	??___flge+1,w
  9689     1055  0442               	iorwf	??___flge,w
  9690     1056  1D03               	skipz
  9691     1057  2859               	goto	u3461
  9692     1058  285A               	goto	u3460
  9693     1059                     u3461:
  9694     1059  2862               	goto	l753
  9695     105A                     u3460:
  9696     105A                     l3940:
  9697     105A  3000               	movlw	0
  9698     105B  00BD               	movwf	___flge@ff1+3
  9699     105C  3000               	movlw	0
  9700     105D  00BC               	movwf	___flge@ff1+2
  9701     105E  3000               	movlw	0
  9702     105F  00BB               	movwf	___flge@ff1+1
  9703     1060  3000               	movlw	0
  9704     1061  00BA               	movwf	___flge@ff1
  9705     1062                     l753:
  9706     1062  3000               	movlw	0
  9707     1063  053E               	andwf	___flge@ff2,w
  9708     1064  00C2               	movwf	??___flge
  9709     1065  3000               	movlw	0
  9710     1066  053F               	andwf	___flge@ff2+1,w
  9711     1067  00C3               	movwf	??___flge+1
  9712     1068  3080               	movlw	128
  9713     1069  0540               	andwf	___flge@ff2+2,w
  9714     106A  00C4               	movwf	??___flge+2
  9715     106B  307F               	movlw	127
  9716     106C  0541               	andwf	___flge@ff2+3,w
  9717     106D  00C5               	movwf	??___flge+3
  9718     106E  0845               	movf	??___flge+3,w
  9719     106F  0444               	iorwf	??___flge+2,w
  9720     1070  0443               	iorwf	??___flge+1,w
  9721     1071  0442               	iorwf	??___flge,w
  9722     1072  1D03               	skipz
  9723     1073  2875               	goto	u3471
  9724     1074  2876               	goto	u3470
  9725     1075                     u3471:
  9726     1075  287E               	goto	l3944
  9727     1076                     u3470:
  9728     1076                     l3942:
  9729     1076  3000               	movlw	0
  9730     1077  00C1               	movwf	___flge@ff2+3
  9731     1078  3000               	movlw	0
  9732     1079  00C0               	movwf	___flge@ff2+2
  9733     107A  3000               	movlw	0
  9734     107B  00BF               	movwf	___flge@ff2+1
  9735     107C  3000               	movlw	0
  9736     107D  00BE               	movwf	___flge@ff2
  9737     107E                     l3944:
  9738     107E  1FBD               	btfss	___flge@ff1+3,7
  9739     107F  2881               	goto	u3481
  9740     1080  2882               	goto	u3480
  9741     1081                     u3481:
  9742     1081  289A               	goto	l3948
  9743     1082                     u3480:
  9744     1082                     l3946:
  9745     1082  3000               	movlw	0
  9746     1083  00C2               	movwf	??___flge
  9747     1084  3000               	movlw	0
  9748     1085  00C3               	movwf	??___flge+1
  9749     1086  3000               	movlw	0
  9750     1087  00C4               	movwf	??___flge+2
  9751     1088  3080               	movlw	128
  9752     1089  00C5               	movwf	??___flge+3
  9753     108A  083A               	movf	___flge@ff1,w
  9754     108B  02C2               	subwf	??___flge,f
  9755     108C  083B               	movf	___flge@ff1+1,w
  9756     108D  3BC3               	subwfb	??___flge+1,f
  9757     108E  083C               	movf	___flge@ff1+2,w
  9758     108F  3BC4               	subwfb	??___flge+2,f
  9759     1090  083D               	movf	___flge@ff1+3,w
  9760     1091  3BC5               	subwfb	??___flge+3,f
  9761     1092  0845               	movf	??___flge+3,w
  9762     1093  00BD               	movwf	___flge@ff1+3
  9763     1094  0844               	movf	??___flge+2,w
  9764     1095  00BC               	movwf	___flge@ff1+2
  9765     1096  0843               	movf	??___flge+1,w
  9766     1097  00BB               	movwf	___flge@ff1+1
  9767     1098  0842               	movf	??___flge,w
  9768     1099  00BA               	movwf	___flge@ff1
  9769     109A                     l3948:
  9770     109A  1FC1               	btfss	___flge@ff2+3,7
  9771     109B  289D               	goto	u3491
  9772     109C  289E               	goto	u3490
  9773     109D                     u3491:
  9774     109D  28B6               	goto	l756
  9775     109E                     u3490:
  9776     109E                     l3950:
  9777     109E  3000               	movlw	0
  9778     109F  00C2               	movwf	??___flge
  9779     10A0  3000               	movlw	0
  9780     10A1  00C3               	movwf	??___flge+1
  9781     10A2  3000               	movlw	0
  9782     10A3  00C4               	movwf	??___flge+2
  9783     10A4  3080               	movlw	128
  9784     10A5  00C5               	movwf	??___flge+3
  9785     10A6  083E               	movf	___flge@ff2,w
  9786     10A7  02C2               	subwf	??___flge,f
  9787     10A8  083F               	movf	___flge@ff2+1,w
  9788     10A9  3BC3               	subwfb	??___flge+1,f
  9789     10AA  0840               	movf	___flge@ff2+2,w
  9790     10AB  3BC4               	subwfb	??___flge+2,f
  9791     10AC  0841               	movf	___flge@ff2+3,w
  9792     10AD  3BC5               	subwfb	??___flge+3,f
  9793     10AE  0845               	movf	??___flge+3,w
  9794     10AF  00C1               	movwf	___flge@ff2+3
  9795     10B0  0844               	movf	??___flge+2,w
  9796     10B1  00C0               	movwf	___flge@ff2+2
  9797     10B2  0843               	movf	??___flge+1,w
  9798     10B3  00BF               	movwf	___flge@ff2+1
  9799     10B4  0842               	movf	??___flge,w
  9800     10B5  00BE               	movwf	___flge@ff2
  9801     10B6                     l756:
  9802     10B6  3080               	movlw	128
  9803     10B7  06BD               	xorwf	___flge@ff1+3,f
  9804     10B8  3080               	movlw	128
  9805     10B9  06C1               	xorwf	___flge@ff2+3,f
  9806     10BA  0841               	movf	___flge@ff2+3,w
  9807     10BB  023D               	subwf	___flge@ff1+3,w
  9808     10BC  1D03               	skipz
  9809     10BD  28C8               	goto	u3505
  9810     10BE  0840               	movf	___flge@ff2+2,w
  9811     10BF  023C               	subwf	___flge@ff1+2,w
  9812     10C0  1D03               	skipz
  9813     10C1  28C8               	goto	u3505
  9814     10C2  083F               	movf	___flge@ff2+1,w
  9815     10C3  023B               	subwf	___flge@ff1+1,w
  9816     10C4  1D03               	skipz
  9817     10C5  28C8               	goto	u3505
  9818     10C6  083E               	movf	___flge@ff2,w
  9819     10C7  023A               	subwf	___flge@ff1,w
  9820     10C8                     u3505:
  9821     10C8  1803               	skipnc
  9822     10C9  28CB               	goto	u3501
  9823     10CA  28CC               	goto	u3500
  9824     10CB                     u3501:
  9825     10CB  28CE               	goto	l3954
  9826     10CC                     u3500:
  9827     10CC                     l3952:
  9828     10CC  1003               	clrc
  9829     10CD  28CF               	goto	l761
  9830     10CE                     l3954:
  9831     10CE  1403               	setc
  9832     10CF                     l761:
  9833     10CF  0008               	return
  9834     10D0                     __end_of___flge:
  9835                           
  9836                           	psect	text27
  9837     1BE5                     __ptext27:	
  9838 ;; *************** function ___fleq *****************
  9839 ;; Defined at:
  9840 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fleq.c"
  9841 ;; Parameters:    Size  Location     Type
  9842 ;;  ff1             4    0[COMMON] unsigned int 
  9843 ;;  ff2             4    4[COMMON] unsigned int 
  9844 ;; Auto vars:     Size  Location     Type
  9845 ;;		None
  9846 ;; Return value:  Size  Location     Type
  9847 ;;		None               void
  9848 ;; Registers used:
  9849 ;;		wreg, status,2, status,0
  9850 ;; Tracked objects:
  9851 ;;		On entry : 0/0
  9852 ;;		On exit  : 0/0
  9853 ;;		Unchanged: 0/0
  9854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9855 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9857 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9858 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9859 ;;Total ram usage:       12 bytes
  9860 ;; Hardware stack levels used: 1
  9861 ;; This function calls:
  9862 ;;		Nothing
  9863 ;; This function is called by:
  9864 ;;		_efgtoa
  9865 ;; This function uses a non-reentrant model
  9866 ;;
  9867                           
  9868     1BE5                     ___fleq:	
  9869                           ;psect for function ___fleq
  9870                           
  9871     1BE5                     l3926:	
  9872                           ;incstack = 0
  9873                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9874                           
  9875     1BE5  3000               	movlw	0
  9876     1BE6  0570               	andwf	___fleq@ff1,w
  9877     1BE7  00F8               	movwf	??___fleq
  9878     1BE8  3000               	movlw	0
  9879     1BE9  0571               	andwf	___fleq@ff1+1,w
  9880     1BEA  00F9               	movwf	??___fleq+1
  9881     1BEB  3080               	movlw	128
  9882     1BEC  0572               	andwf	___fleq@ff1+2,w
  9883     1BED  00FA               	movwf	??___fleq+2
  9884     1BEE  307F               	movlw	127
  9885     1BEF  0573               	andwf	___fleq@ff1+3,w
  9886     1BF0  00FB               	movwf	??___fleq+3
  9887     1BF1  087B               	movf	??___fleq+3,w
  9888     1BF2  047A               	iorwf	??___fleq+2,w
  9889     1BF3  0479               	iorwf	??___fleq+1,w
  9890     1BF4  0478               	iorwf	??___fleq,w
  9891     1BF5  1D03               	skipz
  9892     1BF6  2BF8               	goto	u3431
  9893     1BF7  2BF9               	goto	u3430
  9894     1BF8                     u3431:
  9895     1BF8  2C01               	goto	l744
  9896     1BF9                     u3430:
  9897     1BF9                     l3928:
  9898     1BF9  3000               	movlw	0
  9899     1BFA  00F3               	movwf	___fleq@ff1+3
  9900     1BFB  3000               	movlw	0
  9901     1BFC  00F2               	movwf	___fleq@ff1+2
  9902     1BFD  3000               	movlw	0
  9903     1BFE  00F1               	movwf	___fleq@ff1+1
  9904     1BFF  3000               	movlw	0
  9905     1C00  00F0               	movwf	___fleq@ff1
  9906     1C01                     l744:
  9907     1C01  3000               	movlw	0
  9908     1C02  0574               	andwf	___fleq@ff2,w
  9909     1C03  00F8               	movwf	??___fleq
  9910     1C04  3000               	movlw	0
  9911     1C05  0575               	andwf	___fleq@ff2+1,w
  9912     1C06  00F9               	movwf	??___fleq+1
  9913     1C07  3080               	movlw	128
  9914     1C08  0576               	andwf	___fleq@ff2+2,w
  9915     1C09  00FA               	movwf	??___fleq+2
  9916     1C0A  307F               	movlw	127
  9917     1C0B  0577               	andwf	___fleq@ff2+3,w
  9918     1C0C  00FB               	movwf	??___fleq+3
  9919     1C0D  087B               	movf	??___fleq+3,w
  9920     1C0E  047A               	iorwf	??___fleq+2,w
  9921     1C0F  0479               	iorwf	??___fleq+1,w
  9922     1C10  0478               	iorwf	??___fleq,w
  9923     1C11  1D03               	skipz
  9924     1C12  2C14               	goto	u3441
  9925     1C13  2C15               	goto	u3440
  9926     1C14                     u3441:
  9927     1C14  2C1D               	goto	l745
  9928     1C15                     u3440:
  9929     1C15                     l3930:
  9930     1C15  3000               	movlw	0
  9931     1C16  00F7               	movwf	___fleq@ff2+3
  9932     1C17  3000               	movlw	0
  9933     1C18  00F6               	movwf	___fleq@ff2+2
  9934     1C19  3000               	movlw	0
  9935     1C1A  00F5               	movwf	___fleq@ff2+1
  9936     1C1B  3000               	movlw	0
  9937     1C1C  00F4               	movwf	___fleq@ff2
  9938     1C1D                     l745:
  9939     1C1D  0877               	movf	___fleq@ff2+3,w
  9940     1C1E  0673               	xorwf	___fleq@ff1+3,w
  9941     1C1F  1D03               	skipz
  9942     1C20  2C2B               	goto	u3455
  9943     1C21  0876               	movf	___fleq@ff2+2,w
  9944     1C22  0672               	xorwf	___fleq@ff1+2,w
  9945     1C23  1D03               	skipz
  9946     1C24  2C2B               	goto	u3455
  9947     1C25  0875               	movf	___fleq@ff2+1,w
  9948     1C26  0671               	xorwf	___fleq@ff1+1,w
  9949     1C27  1D03               	skipz
  9950     1C28  2C2B               	goto	u3455
  9951     1C29  0874               	movf	___fleq@ff2,w
  9952     1C2A  0670               	xorwf	___fleq@ff1,w
  9953     1C2B                     u3455:
  9954     1C2B  1903               	skipnz
  9955     1C2C  2C2E               	goto	u3451
  9956     1C2D  2C2F               	goto	u3450
  9957     1C2E                     u3451:
  9958     1C2E  2C31               	goto	l3934
  9959     1C2F                     u3450:
  9960     1C2F                     l3932:
  9961     1C2F  1003               	clrc
  9962     1C30  2C32               	goto	l750
  9963     1C31                     l3934:
  9964     1C31  1403               	setc
  9965     1C32                     l750:
  9966     1C32  0008               	return
  9967     1C33                     __end_of___fleq:
  9968                           
  9969                           	psect	text28
  9970     0A0F                     __ptext28:	
  9971 ;; *************** function ___fldiv *****************
  9972 ;; Defined at:
  9973 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  9974 ;; Parameters:    Size  Location     Type
  9975 ;;  a               4   26[BANK0 ] unsigned int 
  9976 ;;  b               4   30[BANK0 ] unsigned int 
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;  grs             4   46[BANK0 ] unsigned long 
  9979 ;;  rem             4   39[BANK0 ] unsigned long 
  9980 ;;  new_exp         2   44[BANK0 ] int 
  9981 ;;  aexp            1   51[BANK0 ] unsigned char 
  9982 ;;  bexp            1   50[BANK0 ] unsigned char 
  9983 ;;  sign            1   43[BANK0 ] unsigned char 
  9984 ;; Return value:  Size  Location     Type
  9985 ;;                  4   26[BANK0 ] unsigned char 
  9986 ;; Registers used:
  9987 ;;		wreg, status,2, status,0
  9988 ;; Tracked objects:
  9989 ;;		On entry : 0/0
  9990 ;;		On exit  : 0/0
  9991 ;;		Unchanged: 0/0
  9992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9993 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9994 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9995 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9996 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9997 ;;Total ram usage:       26 bytes
  9998 ;; Hardware stack levels used: 1
  9999 ;; This function calls:
 10000 ;;		Nothing
 10001 ;; This function is called by:
 10002 ;;		_MenuSensores
 10003 ;;		_efgtoa
 10004 ;; This function uses a non-reentrant model
 10005 ;;
 10006                           
 10007     0A0F                     ___fldiv:	
 10008                           ;psect for function ___fldiv
 10009                           
 10010     0A0F                     l4008:	
 10011                           ;incstack = 0
 10012                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 10013                           
 10014     0A0F  0020               	movlb	0	; select bank0
 10015     0A10  0841               	movf	___fldiv@b+3,w
 10016     0A11  3980               	andlw	128
 10017     0A12  00CB               	movwf	___fldiv@sign
 10018     0A13                     l4010:
 10019     0A13  3541               	lslf	___fldiv@b+3,w
 10020     0A14  00D2               	movwf	___fldiv@bexp
 10021     0A15                     l4012:
 10022     0A15  1FC0               	btfss	___fldiv@b+2,7
 10023     0A16  2A18               	goto	u3621
 10024     0A17  2A19               	goto	u3620
 10025     0A18                     u3621:
 10026     0A18  2A1A               	goto	l4016
 10027     0A19                     u3620:
 10028     0A19                     l4014:
 10029     0A19  1452               	bsf	___fldiv@bexp,0
 10030     0A1A                     l4016:
 10031     0A1A  0852               	movf	___fldiv@bexp,w
 10032     0A1B  1903               	btfsc	3,2
 10033     0A1C  2A1E               	goto	u3631
 10034     0A1D  2A1F               	goto	u3630
 10035     0A1E                     u3631:
 10036     0A1E  2A2F               	goto	l4026
 10037     0A1F                     u3630:
 10038     0A1F                     l4018:
 10039     0A1F  0A52               	incf	___fldiv@bexp,w
 10040     0A20  1D03               	btfss	3,2
 10041     0A21  2A23               	goto	u3641
 10042     0A22  2A24               	goto	u3640
 10043     0A23                     u3641:
 10044     0A23  2A2C               	goto	l4022
 10045     0A24                     u3640:
 10046     0A24                     l4020:
 10047     0A24  3000               	movlw	0
 10048     0A25  00C1               	movwf	___fldiv@b+3
 10049     0A26  3000               	movlw	0
 10050     0A27  00C0               	movwf	___fldiv@b+2
 10051     0A28  3000               	movlw	0
 10052     0A29  00BF               	movwf	___fldiv@b+1
 10053     0A2A  3000               	movlw	0
 10054     0A2B  00BE               	movwf	___fldiv@b
 10055     0A2C                     l4022:
 10056     0A2C  17C0               	bsf	___fldiv@b+2,7
 10057     0A2D                     l4024:
 10058     0A2D  01C1               	clrf	___fldiv@b+3
 10059     0A2E  2A37               	goto	l4028
 10060     0A2F                     l4026:
 10061     0A2F  3000               	movlw	0
 10062     0A30  00C1               	movwf	___fldiv@b+3
 10063     0A31  3000               	movlw	0
 10064     0A32  00C0               	movwf	___fldiv@b+2
 10065     0A33  3000               	movlw	0
 10066     0A34  00BF               	movwf	___fldiv@b+1
 10067     0A35  3000               	movlw	0
 10068     0A36  00BE               	movwf	___fldiv@b
 10069     0A37                     l4028:
 10070     0A37  083D               	movf	___fldiv@a+3,w
 10071     0A38  3980               	andlw	128
 10072     0A39  00C2               	movwf	??___fldiv
 10073     0A3A  0842               	movf	??___fldiv,w
 10074     0A3B  06CB               	xorwf	___fldiv@sign,f
 10075     0A3C                     l4030:
 10076     0A3C  353D               	lslf	___fldiv@a+3,w
 10077     0A3D  00D3               	movwf	___fldiv@aexp
 10078     0A3E                     l4032:
 10079     0A3E  1FBC               	btfss	___fldiv@a+2,7
 10080     0A3F  2A41               	goto	u3651
 10081     0A40  2A42               	goto	u3650
 10082     0A41                     u3651:
 10083     0A41  2A43               	goto	l4036
 10084     0A42                     u3650:
 10085     0A42                     l4034:
 10086     0A42  1453               	bsf	___fldiv@aexp,0
 10087     0A43                     l4036:
 10088     0A43  0853               	movf	___fldiv@aexp,w
 10089     0A44  1903               	btfsc	3,2
 10090     0A45  2A47               	goto	u3661
 10091     0A46  2A48               	goto	u3660
 10092     0A47                     u3661:
 10093     0A47  2A58               	goto	l4046
 10094     0A48                     u3660:
 10095     0A48                     l4038:
 10096     0A48  0A53               	incf	___fldiv@aexp,w
 10097     0A49  1D03               	btfss	3,2
 10098     0A4A  2A4C               	goto	u3671
 10099     0A4B  2A4D               	goto	u3670
 10100     0A4C                     u3671:
 10101     0A4C  2A55               	goto	l4042
 10102     0A4D                     u3670:
 10103     0A4D                     l4040:
 10104     0A4D  3000               	movlw	0
 10105     0A4E  00BD               	movwf	___fldiv@a+3
 10106     0A4F  3000               	movlw	0
 10107     0A50  00BC               	movwf	___fldiv@a+2
 10108     0A51  3000               	movlw	0
 10109     0A52  00BB               	movwf	___fldiv@a+1
 10110     0A53  3000               	movlw	0
 10111     0A54  00BA               	movwf	___fldiv@a
 10112     0A55                     l4042:
 10113     0A55  17BC               	bsf	___fldiv@a+2,7
 10114     0A56                     l4044:
 10115     0A56  01BD               	clrf	___fldiv@a+3
 10116     0A57  2A60               	goto	l932
 10117     0A58                     l4046:
 10118     0A58  3000               	movlw	0
 10119     0A59  00BD               	movwf	___fldiv@a+3
 10120     0A5A  3000               	movlw	0
 10121     0A5B  00BC               	movwf	___fldiv@a+2
 10122     0A5C  3000               	movlw	0
 10123     0A5D  00BB               	movwf	___fldiv@a+1
 10124     0A5E  3000               	movlw	0
 10125     0A5F  00BA               	movwf	___fldiv@a
 10126     0A60                     l932:
 10127     0A60  083D               	movf	___fldiv@a+3,w
 10128     0A61  043C               	iorwf	___fldiv@a+2,w
 10129     0A62  043B               	iorwf	___fldiv@a+1,w
 10130     0A63  043A               	iorwf	___fldiv@a,w
 10131     0A64  1D03               	skipz
 10132     0A65  2A67               	goto	u3681
 10133     0A66  2A68               	goto	u3680
 10134     0A67                     u3681:
 10135     0A67  2A81               	goto	l4056
 10136     0A68                     u3680:
 10137     0A68                     l4048:
 10138     0A68  3000               	movlw	0
 10139     0A69  00C1               	movwf	___fldiv@b+3
 10140     0A6A  3000               	movlw	0
 10141     0A6B  00C0               	movwf	___fldiv@b+2
 10142     0A6C  3000               	movlw	0
 10143     0A6D  00BF               	movwf	___fldiv@b+1
 10144     0A6E  3000               	movlw	0
 10145     0A6F  00BE               	movwf	___fldiv@b
 10146     0A70  3080               	movlw	128
 10147     0A71  04C0               	iorwf	___fldiv@b+2,f
 10148     0A72  307F               	movlw	127
 10149     0A73  04C1               	iorwf	___fldiv@b+3,f
 10150     0A74                     l4050:
 10151     0A74  084B               	movf	___fldiv@sign,w
 10152     0A75  00C2               	movwf	??___fldiv
 10153     0A76  0842               	movf	??___fldiv,w
 10154     0A77  04C1               	iorwf	___fldiv@b+3,f
 10155     0A78                     l4052:
 10156     0A78  0841               	movf	___fldiv@b+3,w
 10157     0A79  00BD               	movwf	?___fldiv+3
 10158     0A7A  0840               	movf	___fldiv@b+2,w
 10159     0A7B  00BC               	movwf	?___fldiv+2
 10160     0A7C  083F               	movf	___fldiv@b+1,w
 10161     0A7D  00BB               	movwf	?___fldiv+1
 10162     0A7E  083E               	movf	___fldiv@b,w
 10163     0A7F  00BA               	movwf	?___fldiv
 10164     0A80  2BB8               	goto	l934
 10165     0A81                     l4056:
 10166     0A81  0852               	movf	___fldiv@bexp,w
 10167     0A82  1D03               	btfss	3,2
 10168     0A83  2A85               	goto	u3691
 10169     0A84  2A86               	goto	u3690
 10170     0A85                     u3691:
 10171     0A85  2A8F               	goto	l4062
 10172     0A86                     u3690:
 10173     0A86                     l4058:
 10174     0A86  3000               	movlw	0
 10175     0A87  00BD               	movwf	?___fldiv+3
 10176     0A88  3000               	movlw	0
 10177     0A89  00BC               	movwf	?___fldiv+2
 10178     0A8A  3000               	movlw	0
 10179     0A8B  00BB               	movwf	?___fldiv+1
 10180     0A8C  3000               	movlw	0
 10181     0A8D  00BA               	movwf	?___fldiv
 10182     0A8E  2BB8               	goto	l934
 10183     0A8F                     l4062:
 10184     0A8F  0852               	movf	___fldiv@bexp,w
 10185     0A90  00C2               	movwf	??___fldiv
 10186     0A91  01C3               	clrf	??___fldiv+1
 10187     0A92  0843               	movf	??___fldiv+1,w
 10188     0A93  00C5               	movwf	??___fldiv+3
 10189     0A94  0853               	movf	___fldiv@aexp,w
 10190     0A95  0242               	subwf	??___fldiv,w
 10191     0A96  00C4               	movwf	??___fldiv+2
 10192     0A97  1C03               	skipc
 10193     0A98  03C5               	decf	??___fldiv+3,f
 10194     0A99  0844               	movf	??___fldiv+2,w
 10195     0A9A  3E7F               	addlw	127
 10196     0A9B  00CC               	movwf	___fldiv@new_exp
 10197     0A9C  3000               	movlw	0
 10198     0A9D  3D45               	addwfc	??___fldiv+3,w
 10199     0A9E  00CD               	movwf	___fldiv@new_exp+1
 10200     0A9F                     l4064:
 10201     0A9F  0841               	movf	___fldiv@b+3,w
 10202     0AA0  00CA               	movwf	___fldiv@rem+3
 10203     0AA1  0840               	movf	___fldiv@b+2,w
 10204     0AA2  00C9               	movwf	___fldiv@rem+2
 10205     0AA3  083F               	movf	___fldiv@b+1,w
 10206     0AA4  00C8               	movwf	___fldiv@rem+1
 10207     0AA5  083E               	movf	___fldiv@b,w
 10208     0AA6  00C7               	movwf	___fldiv@rem
 10209     0AA7                     l4066:
 10210     0AA7  3000               	movlw	0
 10211     0AA8  00C1               	movwf	___fldiv@b+3
 10212     0AA9  3000               	movlw	0
 10213     0AAA  00C0               	movwf	___fldiv@b+2
 10214     0AAB  3000               	movlw	0
 10215     0AAC  00BF               	movwf	___fldiv@b+1
 10216     0AAD  3000               	movlw	0
 10217     0AAE  00BE               	movwf	___fldiv@b
 10218     0AAF                     l4068:
 10219     0AAF  3000               	movlw	0
 10220     0AB0  00D1               	movwf	___fldiv@grs+3
 10221     0AB1  3000               	movlw	0
 10222     0AB2  00D0               	movwf	___fldiv@grs+2
 10223     0AB3  3000               	movlw	0
 10224     0AB4  00CF               	movwf	___fldiv@grs+1
 10225     0AB5  3000               	movlw	0
 10226     0AB6  00CE               	movwf	___fldiv@grs
 10227     0AB7                     l4070:
 10228     0AB7  01D3               	clrf	___fldiv@aexp
 10229     0AB8  2AF7               	goto	l4090
 10230     0AB9                     l4072:
 10231     0AB9  0853               	movf	___fldiv@aexp,w
 10232     0ABA  1903               	btfsc	3,2
 10233     0ABB  2ABD               	goto	u3701
 10234     0ABC  2ABE               	goto	u3700
 10235     0ABD                     u3701:
 10236     0ABD  2AD8               	goto	l4082
 10237     0ABE                     u3700:
 10238     0ABE                     l4074:
 10239     0ABE  3001               	movlw	1
 10240     0ABF                     u3715:
 10241     0ABF  35C7               	lslf	___fldiv@rem,f
 10242     0AC0  0DC8               	rlf	___fldiv@rem+1,f
 10243     0AC1  0DC9               	rlf	___fldiv@rem+2,f
 10244     0AC2  0DCA               	rlf	___fldiv@rem+3,f
 10245     0AC3  0B89               	decfsz	9,f
 10246     0AC4  2ABF               	goto	u3715
 10247     0AC5  3001               	movlw	1
 10248     0AC6                     u3725:
 10249     0AC6  35BE               	lslf	___fldiv@b,f
 10250     0AC7  0DBF               	rlf	___fldiv@b+1,f
 10251     0AC8  0DC0               	rlf	___fldiv@b+2,f
 10252     0AC9  0DC1               	rlf	___fldiv@b+3,f
 10253     0ACA  0B89               	decfsz	9,f
 10254     0ACB  2AC6               	goto	u3725
 10255     0ACC                     l4076:
 10256     0ACC  1FD1               	btfss	___fldiv@grs+3,7
 10257     0ACD  2ACF               	goto	u3731
 10258     0ACE  2AD0               	goto	u3730
 10259     0ACF                     u3731:
 10260     0ACF  2AD1               	goto	l4080
 10261     0AD0                     u3730:
 10262     0AD0                     l4078:
 10263     0AD0  143E               	bsf	___fldiv@b,0
 10264     0AD1                     l4080:
 10265     0AD1  3001               	movlw	1
 10266     0AD2                     u3745:
 10267     0AD2  35CE               	lslf	___fldiv@grs,f
 10268     0AD3  0DCF               	rlf	___fldiv@grs+1,f
 10269     0AD4  0DD0               	rlf	___fldiv@grs+2,f
 10270     0AD5  0DD1               	rlf	___fldiv@grs+3,f
 10271     0AD6  0B89               	decfsz	9,f
 10272     0AD7  2AD2               	goto	u3745
 10273     0AD8                     l4082:
 10274     0AD8  083D               	movf	___fldiv@a+3,w
 10275     0AD9  024A               	subwf	___fldiv@rem+3,w
 10276     0ADA  1D03               	skipz
 10277     0ADB  2AE6               	goto	u3755
 10278     0ADC  083C               	movf	___fldiv@a+2,w
 10279     0ADD  0249               	subwf	___fldiv@rem+2,w
 10280     0ADE  1D03               	skipz
 10281     0ADF  2AE6               	goto	u3755
 10282     0AE0  083B               	movf	___fldiv@a+1,w
 10283     0AE1  0248               	subwf	___fldiv@rem+1,w
 10284     0AE2  1D03               	skipz
 10285     0AE3  2AE6               	goto	u3755
 10286     0AE4  083A               	movf	___fldiv@a,w
 10287     0AE5  0247               	subwf	___fldiv@rem,w
 10288     0AE6                     u3755:
 10289     0AE6  1C03               	skipc
 10290     0AE7  2AE9               	goto	u3751
 10291     0AE8  2AEA               	goto	u3750
 10292     0AE9                     u3751:
 10293     0AE9  2AF3               	goto	l4088
 10294     0AEA                     u3750:
 10295     0AEA                     l4084:
 10296     0AEA  1751               	bsf	___fldiv@grs+3,6
 10297     0AEB                     l4086:
 10298     0AEB  083A               	movf	___fldiv@a,w
 10299     0AEC  02C7               	subwf	___fldiv@rem,f
 10300     0AED  083B               	movf	___fldiv@a+1,w
 10301     0AEE  3BC8               	subwfb	___fldiv@rem+1,f
 10302     0AEF  083C               	movf	___fldiv@a+2,w
 10303     0AF0  3BC9               	subwfb	___fldiv@rem+2,f
 10304     0AF1  083D               	movf	___fldiv@a+3,w
 10305     0AF2  3BCA               	subwfb	___fldiv@rem+3,f
 10306     0AF3                     l4088:
 10307     0AF3  3001               	movlw	1
 10308     0AF4  00C2               	movwf	??___fldiv
 10309     0AF5  0842               	movf	??___fldiv,w
 10310     0AF6  07D3               	addwf	___fldiv@aexp,f
 10311     0AF7                     l4090:
 10312     0AF7  301A               	movlw	26
 10313     0AF8  0253               	subwf	___fldiv@aexp,w
 10314     0AF9  1C03               	skipc
 10315     0AFA  2AFC               	goto	u3761
 10316     0AFB  2AFD               	goto	u3760
 10317     0AFC                     u3761:
 10318     0AFC  2AB9               	goto	l4072
 10319     0AFD                     u3760:
 10320     0AFD                     l4092:
 10321     0AFD  084A               	movf	___fldiv@rem+3,w
 10322     0AFE  0449               	iorwf	___fldiv@rem+2,w
 10323     0AFF  0448               	iorwf	___fldiv@rem+1,w
 10324     0B00  0447               	iorwf	___fldiv@rem,w
 10325     0B01  1903               	skipnz
 10326     0B02  2B04               	goto	u3771
 10327     0B03  2B05               	goto	u3770
 10328     0B04                     u3771:
 10329     0B04  2B1E               	goto	l4106
 10330     0B05                     u3770:
 10331     0B05                     l4094:
 10332     0B05  144E               	bsf	___fldiv@grs,0
 10333     0B06  2B1E               	goto	l4106
 10334     0B07                     l4096:
 10335     0B07  3001               	movlw	1
 10336     0B08                     u3785:
 10337     0B08  35BE               	lslf	___fldiv@b,f
 10338     0B09  0DBF               	rlf	___fldiv@b+1,f
 10339     0B0A  0DC0               	rlf	___fldiv@b+2,f
 10340     0B0B  0DC1               	rlf	___fldiv@b+3,f
 10341     0B0C  0B89               	decfsz	9,f
 10342     0B0D  2B08               	goto	u3785
 10343     0B0E                     l4098:
 10344     0B0E  1FD1               	btfss	___fldiv@grs+3,7
 10345     0B0F  2B11               	goto	u3791
 10346     0B10  2B12               	goto	u3790
 10347     0B11                     u3791:
 10348     0B11  2B13               	goto	l4102
 10349     0B12                     u3790:
 10350     0B12                     l4100:
 10351     0B12  143E               	bsf	___fldiv@b,0
 10352     0B13                     l4102:
 10353     0B13  3001               	movlw	1
 10354     0B14                     u3805:
 10355     0B14  35CE               	lslf	___fldiv@grs,f
 10356     0B15  0DCF               	rlf	___fldiv@grs+1,f
 10357     0B16  0DD0               	rlf	___fldiv@grs+2,f
 10358     0B17  0DD1               	rlf	___fldiv@grs+3,f
 10359     0B18  0B89               	decfsz	9,f
 10360     0B19  2B14               	goto	u3805
 10361     0B1A                     l4104:
 10362     0B1A  30FF               	movlw	255
 10363     0B1B  07CC               	addwf	___fldiv@new_exp,f
 10364     0B1C  30FF               	movlw	255
 10365     0B1D  3DCD               	addwfc	___fldiv@new_exp+1,f
 10366     0B1E                     l4106:
 10367     0B1E  1FC0               	btfss	___fldiv@b+2,7
 10368     0B1F  2B21               	goto	u3811
 10369     0B20  2B22               	goto	u3810
 10370     0B21                     u3811:
 10371     0B21  2B07               	goto	l4096
 10372     0B22                     u3810:
 10373     0B22                     l4108:
 10374     0B22  01D3               	clrf	___fldiv@aexp
 10375     0B23                     l4110:
 10376     0B23  1FD1               	btfss	___fldiv@grs+3,7
 10377     0B24  2B26               	goto	u3821
 10378     0B25  2B27               	goto	u3820
 10379     0B26                     u3821:
 10380     0B26  2B43               	goto	l4118
 10381     0B27                     u3820:
 10382     0B27                     l4112:
 10383     0B27  30FF               	movlw	255
 10384     0B28  054E               	andwf	___fldiv@grs,w
 10385     0B29  00C2               	movwf	??___fldiv
 10386     0B2A  30FF               	movlw	255
 10387     0B2B  054F               	andwf	___fldiv@grs+1,w
 10388     0B2C  00C3               	movwf	??___fldiv+1
 10389     0B2D  30FF               	movlw	255
 10390     0B2E  0550               	andwf	___fldiv@grs+2,w
 10391     0B2F  00C4               	movwf	??___fldiv+2
 10392     0B30  307F               	movlw	127
 10393     0B31  0551               	andwf	___fldiv@grs+3,w
 10394     0B32  00C5               	movwf	??___fldiv+3
 10395     0B33  0845               	movf	??___fldiv+3,w
 10396     0B34  0444               	iorwf	??___fldiv+2,w
 10397     0B35  0443               	iorwf	??___fldiv+1,w
 10398     0B36  0442               	iorwf	??___fldiv,w
 10399     0B37  1903               	skipnz
 10400     0B38  2B3A               	goto	u3831
 10401     0B39  2B3B               	goto	u3830
 10402     0B3A                     u3831:
 10403     0B3A  2B3E               	goto	l948
 10404     0B3B                     u3830:
 10405     0B3B                     l4114:
 10406     0B3B  01D3               	clrf	___fldiv@aexp
 10407     0B3C  0AD3               	incf	___fldiv@aexp,f
 10408     0B3D  2B43               	goto	l4118
 10409     0B3E                     l948:
 10410     0B3E  1C3E               	btfss	___fldiv@b,0
 10411     0B3F  2B41               	goto	u3841
 10412     0B40  2B42               	goto	u3840
 10413     0B41                     u3841:
 10414     0B41  2B43               	goto	l4118
 10415     0B42                     u3840:
 10416     0B42  2B3B               	goto	l4114
 10417     0B43                     l4118:
 10418     0B43  0853               	movf	___fldiv@aexp,w
 10419     0B44  1903               	btfsc	3,2
 10420     0B45  2B47               	goto	u3851
 10421     0B46  2B48               	goto	u3850
 10422     0B47                     u3851:
 10423     0B47  2B70               	goto	l4128
 10424     0B48                     u3850:
 10425     0B48                     l4120:
 10426     0B48  3001               	movlw	1
 10427     0B49  07BE               	addwf	___fldiv@b,f
 10428     0B4A  3000               	movlw	0
 10429     0B4B  3DBF               	addwfc	___fldiv@b+1,f
 10430     0B4C  3000               	movlw	0
 10431     0B4D  3DC0               	addwfc	___fldiv@b+2,f
 10432     0B4E  3000               	movlw	0
 10433     0B4F  3DC1               	addwfc	___fldiv@b+3,f
 10434     0B50                     l4122:
 10435     0B50  1C41               	btfss	___fldiv@b+3,0
 10436     0B51  2B53               	goto	u3861
 10437     0B52  2B54               	goto	u3860
 10438     0B53                     u3861:
 10439     0B53  2B70               	goto	l4128
 10440     0B54                     u3860:
 10441     0B54                     l4124:
 10442     0B54  083E               	movf	___fldiv@b,w
 10443     0B55  00C2               	movwf	??___fldiv
 10444     0B56  083F               	movf	___fldiv@b+1,w
 10445     0B57  00C3               	movwf	??___fldiv+1
 10446     0B58  0840               	movf	___fldiv@b+2,w
 10447     0B59  00C4               	movwf	??___fldiv+2
 10448     0B5A  0841               	movf	___fldiv@b+3,w
 10449     0B5B  00C5               	movwf	??___fldiv+3
 10450     0B5C  3001               	movlw	1
 10451     0B5D  00C6               	movwf	??___fldiv+4
 10452     0B5E                     u3875:
 10453     0B5E  37C5               	asrf	??___fldiv+3,f
 10454     0B5F  0CC4               	rrf	??___fldiv+2,f
 10455     0B60  0CC3               	rrf	??___fldiv+1,f
 10456     0B61  0CC2               	rrf	??___fldiv,f
 10457     0B62                     u3870:
 10458     0B62  0BC6               	decfsz	??___fldiv+4,f
 10459     0B63  2B5E               	goto	u3875
 10460     0B64  0845               	movf	??___fldiv+3,w
 10461     0B65  00C1               	movwf	___fldiv@b+3
 10462     0B66  0844               	movf	??___fldiv+2,w
 10463     0B67  00C0               	movwf	___fldiv@b+2
 10464     0B68  0843               	movf	??___fldiv+1,w
 10465     0B69  00BF               	movwf	___fldiv@b+1
 10466     0B6A  0842               	movf	??___fldiv,w
 10467     0B6B  00BE               	movwf	___fldiv@b
 10468     0B6C                     l4126:
 10469     0B6C  3001               	movlw	1
 10470     0B6D  07CC               	addwf	___fldiv@new_exp,f
 10471     0B6E  3000               	movlw	0
 10472     0B6F  3DCD               	addwfc	___fldiv@new_exp+1,f
 10473     0B70                     l4128:
 10474     0B70  084D               	movf	___fldiv@new_exp+1,w
 10475     0B71  3A80               	xorlw	128
 10476     0B72  00C2               	movwf	??___fldiv
 10477     0B73  3080               	movlw	128
 10478     0B74  0242               	subwf	??___fldiv,w
 10479     0B75  1D03               	skipz
 10480     0B76  2B79               	goto	u3885
 10481     0B77  30FF               	movlw	255
 10482     0B78  024C               	subwf	___fldiv@new_exp,w
 10483     0B79                     u3885:
 10484     0B79  1C03               	skipc
 10485     0B7A  2B7C               	goto	u3881
 10486     0B7B  2B7D               	goto	u3880
 10487     0B7C                     u3881:
 10488     0B7C  2B8A               	goto	l953
 10489     0B7D                     u3880:
 10490     0B7D                     l4130:
 10491     0B7D  30FF               	movlw	255
 10492     0B7E  0020               	movlb	0	; select bank0
 10493     0B7F  00CC               	movwf	___fldiv@new_exp
 10494     0B80  3000               	movlw	0
 10495     0B81  00CD               	movwf	___fldiv@new_exp+1
 10496     0B82  3000               	movlw	0
 10497     0B83  00C1               	movwf	___fldiv@b+3
 10498     0B84  3000               	movlw	0
 10499     0B85  00C0               	movwf	___fldiv@b+2
 10500     0B86  3000               	movlw	0
 10501     0B87  00BF               	movwf	___fldiv@b+1
 10502     0B88  3000               	movlw	0
 10503     0B89  00BE               	movwf	___fldiv@b
 10504     0B8A                     l953:
 10505     0B8A  0020               	movlb	0	; select bank0
 10506     0B8B  084D               	movf	___fldiv@new_exp+1,w
 10507     0B8C  3A80               	xorlw	128
 10508     0B8D  00C2               	movwf	??___fldiv
 10509     0B8E  3080               	movlw	128
 10510     0B8F  0242               	subwf	??___fldiv,w
 10511     0B90  1D03               	skipz
 10512     0B91  2B94               	goto	u3895
 10513     0B92  3001               	movlw	1
 10514     0B93  024C               	subwf	___fldiv@new_exp,w
 10515     0B94                     u3895:
 10516     0B94  1803               	skipnc
 10517     0B95  2B97               	goto	u3891
 10518     0B96  2B98               	goto	u3890
 10519     0B97                     u3891:
 10520     0B97  2BA4               	goto	l954
 10521     0B98                     u3890:
 10522     0B98                     l4132:
 10523     0B98  0020               	movlb	0	; select bank0
 10524     0B99  01CC               	clrf	___fldiv@new_exp
 10525     0B9A  01CD               	clrf	___fldiv@new_exp+1
 10526     0B9B                     l4134:
 10527     0B9B  3000               	movlw	0
 10528     0B9C  00C1               	movwf	___fldiv@b+3
 10529     0B9D  3000               	movlw	0
 10530     0B9E  00C0               	movwf	___fldiv@b+2
 10531     0B9F  3000               	movlw	0
 10532     0BA0  00BF               	movwf	___fldiv@b+1
 10533     0BA1  3000               	movlw	0
 10534     0BA2  00BE               	movwf	___fldiv@b
 10535     0BA3                     l4136:
 10536     0BA3  01CB               	clrf	___fldiv@sign
 10537     0BA4                     l954:
 10538     0BA4  0020               	movlb	0	; select bank0
 10539     0BA5  084C               	movf	___fldiv@new_exp,w
 10540     0BA6  00D2               	movwf	___fldiv@bexp
 10541     0BA7                     l4138:
 10542     0BA7  1C52               	btfss	___fldiv@bexp,0
 10543     0BA8  2BAA               	goto	u3901
 10544     0BA9  2BAB               	goto	u3900
 10545     0BAA                     u3901:
 10546     0BAA  2BAD               	goto	l4142
 10547     0BAB                     u3900:
 10548     0BAB                     l4140:
 10549     0BAB  17C0               	bsf	___fldiv@b+2,7
 10550     0BAC  2BB1               	goto	l956
 10551     0BAD                     l4142:
 10552     0BAD  307F               	movlw	127
 10553     0BAE  00C2               	movwf	??___fldiv
 10554     0BAF  0842               	movf	??___fldiv,w
 10555     0BB0  05C0               	andwf	___fldiv@b+2,f
 10556     0BB1                     l956:
 10557     0BB1  3652               	lsrf	___fldiv@bexp,w
 10558     0BB2  00C1               	movwf	___fldiv@b+3
 10559     0BB3  084B               	movf	___fldiv@sign,w
 10560     0BB4  00C2               	movwf	??___fldiv
 10561     0BB5  0842               	movf	??___fldiv,w
 10562     0BB6  04C1               	iorwf	___fldiv@b+3,f
 10563     0BB7  2A78               	goto	l4052
 10564     0BB8                     l934:
 10565     0BB8  0008               	return
 10566     0BB9                     __end_of___fldiv:
 10567                           
 10568                           	psect	text29
 10569     0833                     __ptext29:	
 10570 ;; *************** function ___xxtofl *****************
 10571 ;; Defined at:
 10572 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
 10573 ;; Parameters:    Size  Location     Type
 10574 ;;  sign            1    wreg     unsigned char 
 10575 ;;  val             4    0[COMMON] long 
 10576 ;; Auto vars:     Size  Location     Type
 10577 ;;  sign            1    8[COMMON] unsigned char 
 10578 ;;  arg             4   10[COMMON] unsigned long 
 10579 ;;  exp             1    9[COMMON] unsigned char 
 10580 ;; Return value:  Size  Location     Type
 10581 ;;                  4    0[COMMON] unsigned char 
 10582 ;; Registers used:
 10583 ;;		wreg, status,2, status,0
 10584 ;; Tracked objects:
 10585 ;;		On entry : 0/0
 10586 ;;		On exit  : 0/0
 10587 ;;		Unchanged: 0/0
 10588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10589 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10590 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10591 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10592 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10593 ;;Total ram usage:       14 bytes
 10594 ;; Hardware stack levels used: 1
 10595 ;; This function calls:
 10596 ;;		Nothing
 10597 ;; This function is called by:
 10598 ;;		_MenuSensores
 10599 ;; This function uses a non-reentrant model
 10600 ;;
 10601                           
 10602     0833                     ___xxtofl:	
 10603                           ;psect for function ___xxtofl
 10604                           
 10605                           
 10606                           ;incstack = 0
 10607                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10608                           ;___xxtofl@sign stored from wreg
 10609     0833  00F8               	movwf	___xxtofl@sign
 10610     0834                     l4842:
 10611     0834  0878               	movf	___xxtofl@sign,w
 10612     0835  1903               	btfsc	3,2
 10613     0836  2838               	goto	u4941
 10614     0837  2839               	goto	u4940
 10615     0838                     u4941:
 10616     0838  284D               	goto	l4848
 10617     0839                     u4940:
 10618     0839                     l4844:
 10619     0839  1FF3               	btfss	___xxtofl@val+3,7
 10620     083A  283C               	goto	u4951
 10621     083B  283D               	goto	u4950
 10622     083C                     u4951:
 10623     083C  284D               	goto	l4848
 10624     083D                     u4950:
 10625     083D                     l4846:
 10626     083D  0970               	comf	___xxtofl@val,w
 10627     083E  00FA               	movwf	___xxtofl@arg
 10628     083F  0971               	comf	___xxtofl@val+1,w
 10629     0840  00FB               	movwf	___xxtofl@arg+1
 10630     0841  0972               	comf	___xxtofl@val+2,w
 10631     0842  00FC               	movwf	___xxtofl@arg+2
 10632     0843  0973               	comf	___xxtofl@val+3,w
 10633     0844  00FD               	movwf	___xxtofl@arg+3
 10634     0845  0AFA               	incf	___xxtofl@arg,f
 10635     0846  1903               	skipnz
 10636     0847  0AFB               	incf	___xxtofl@arg+1,f
 10637     0848  1903               	skipnz
 10638     0849  0AFC               	incf	___xxtofl@arg+2,f
 10639     084A  1903               	skipnz
 10640     084B  0AFD               	incf	___xxtofl@arg+3,f
 10641     084C  2855               	goto	l1016
 10642     084D                     l4848:
 10643     084D  0873               	movf	___xxtofl@val+3,w
 10644     084E  00FD               	movwf	___xxtofl@arg+3
 10645     084F  0872               	movf	___xxtofl@val+2,w
 10646     0850  00FC               	movwf	___xxtofl@arg+2
 10647     0851  0871               	movf	___xxtofl@val+1,w
 10648     0852  00FB               	movwf	___xxtofl@arg+1
 10649     0853  0870               	movf	___xxtofl@val,w
 10650     0854  00FA               	movwf	___xxtofl@arg
 10651     0855                     l1016:
 10652     0855  0873               	movf	___xxtofl@val+3,w
 10653     0856  0472               	iorwf	___xxtofl@val+2,w
 10654     0857  0471               	iorwf	___xxtofl@val+1,w
 10655     0858  0470               	iorwf	___xxtofl@val,w
 10656     0859  1D03               	skipz
 10657     085A  285C               	goto	u4961
 10658     085B  285D               	goto	u4960
 10659     085C                     u4961:
 10660     085C  2866               	goto	l4854
 10661     085D                     u4960:
 10662     085D                     l4850:
 10663     085D  3000               	movlw	0
 10664     085E  00F3               	movwf	?___xxtofl+3
 10665     085F  3000               	movlw	0
 10666     0860  00F2               	movwf	?___xxtofl+2
 10667     0861  3000               	movlw	0
 10668     0862  00F1               	movwf	?___xxtofl+1
 10669     0863  3000               	movlw	0
 10670     0864  00F0               	movwf	?___xxtofl
 10671     0865  28DC               	goto	l1018
 10672     0866                     l4854:
 10673     0866  3096               	movlw	150
 10674     0867  00F9               	movwf	___xxtofl@exp
 10675     0868  2874               	goto	l4858
 10676     0869                     l4856:
 10677     0869  3001               	movlw	1
 10678     086A  00F4               	movwf	??___xxtofl
 10679     086B  0874               	movf	??___xxtofl,w
 10680     086C  07F9               	addwf	___xxtofl@exp,f
 10681     086D  3001               	movlw	1
 10682     086E                     u4975:
 10683     086E  36FD               	lsrf	___xxtofl@arg+3,f
 10684     086F  0CFC               	rrf	___xxtofl@arg+2,f
 10685     0870  0CFB               	rrf	___xxtofl@arg+1,f
 10686     0871  0CFA               	rrf	___xxtofl@arg,f
 10687     0872  0B89               	decfsz	9,f
 10688     0873  286E               	goto	u4975
 10689     0874                     l4858:
 10690     0874  30FE               	movlw	254
 10691     0875  057D               	andwf	___xxtofl@arg+3,w
 10692     0876  1D03               	btfss	3,2
 10693     0877  2879               	goto	u4981
 10694     0878  287A               	goto	u4980
 10695     0879                     u4981:
 10696     0879  2869               	goto	l4856
 10697     087A                     u4980:
 10698     087A  288E               	goto	l1022
 10699     087B                     l4860:
 10700     087B  3001               	movlw	1
 10701     087C  00F4               	movwf	??___xxtofl
 10702     087D  0874               	movf	??___xxtofl,w
 10703     087E  07F9               	addwf	___xxtofl@exp,f
 10704     087F                     l4862:
 10705     087F  3001               	movlw	1
 10706     0880  07FA               	addwf	___xxtofl@arg,f
 10707     0881  3000               	movlw	0
 10708     0882  3DFB               	addwfc	___xxtofl@arg+1,f
 10709     0883  3000               	movlw	0
 10710     0884  3DFC               	addwfc	___xxtofl@arg+2,f
 10711     0885  3000               	movlw	0
 10712     0886  3DFD               	addwfc	___xxtofl@arg+3,f
 10713     0887                     l4864:
 10714     0887  3001               	movlw	1
 10715     0888                     u4995:
 10716     0888  36FD               	lsrf	___xxtofl@arg+3,f
 10717     0889  0CFC               	rrf	___xxtofl@arg+2,f
 10718     088A  0CFB               	rrf	___xxtofl@arg+1,f
 10719     088B  0CFA               	rrf	___xxtofl@arg,f
 10720     088C  0B89               	decfsz	9,f
 10721     088D  2888               	goto	u4995
 10722     088E                     l1022:
 10723     088E  30FF               	movlw	255
 10724     088F  057D               	andwf	___xxtofl@arg+3,w
 10725     0890  1D03               	btfss	3,2
 10726     0891  2893               	goto	u5001
 10727     0892  2894               	goto	u5000
 10728     0893                     u5001:
 10729     0893  287B               	goto	l4860
 10730     0894                     u5000:
 10731     0894  289E               	goto	l4868
 10732     0895                     l4866:
 10733     0895  3001               	movlw	1
 10734     0896  02F9               	subwf	___xxtofl@exp,f
 10735     0897  3001               	movlw	1
 10736     0898                     u5015:
 10737     0898  35FA               	lslf	___xxtofl@arg,f
 10738     0899  0DFB               	rlf	___xxtofl@arg+1,f
 10739     089A  0DFC               	rlf	___xxtofl@arg+2,f
 10740     089B  0DFD               	rlf	___xxtofl@arg+3,f
 10741     089C  0B89               	decfsz	9,f
 10742     089D  2898               	goto	u5015
 10743     089E                     l4868:
 10744     089E  1BFC               	btfsc	___xxtofl@arg+2,7
 10745     089F  28A1               	goto	u5021
 10746     08A0  28A2               	goto	u5020
 10747     08A1                     u5021:
 10748     08A1  28A8               	goto	l1029
 10749     08A2                     u5020:
 10750     08A2                     l4870:
 10751     08A2  3002               	movlw	2
 10752     08A3  0279               	subwf	___xxtofl@exp,w
 10753     08A4  1803               	skipnc
 10754     08A5  28A7               	goto	u5031
 10755     08A6  28A8               	goto	u5030
 10756     08A7                     u5031:
 10757     08A7  2895               	goto	l4866
 10758     08A8                     u5030:
 10759     08A8                     l1029:
 10760     08A8  1879               	btfsc	___xxtofl@exp,0
 10761     08A9  28AB               	goto	u5041
 10762     08AA  28AC               	goto	u5040
 10763     08AB                     u5041:
 10764     08AB  28B4               	goto	l1030
 10765     08AC                     u5040:
 10766     08AC                     l4872:
 10767     08AC  30FF               	movlw	255
 10768     08AD  05FA               	andwf	___xxtofl@arg,f
 10769     08AE  30FF               	movlw	255
 10770     08AF  05FB               	andwf	___xxtofl@arg+1,f
 10771     08B0  307F               	movlw	127
 10772     08B1  05FC               	andwf	___xxtofl@arg+2,f
 10773     08B2  30FF               	movlw	255
 10774     08B3  05FD               	andwf	___xxtofl@arg+3,f
 10775     08B4                     l1030:
 10776     08B4  1003               	clrc
 10777     08B5  0CF9               	rrf	___xxtofl@exp,f
 10778     08B6                     l4874:
 10779     08B6  0879               	movf	___xxtofl@exp,w
 10780     08B7  00F4               	movwf	??___xxtofl
 10781     08B8  01F5               	clrf	??___xxtofl+1
 10782     08B9  01F6               	clrf	??___xxtofl+2
 10783     08BA  01F7               	clrf	??___xxtofl+3
 10784     08BB  3018               	movlw	24
 10785     08BC                     u5055:
 10786     08BC  35F4               	lslf	??___xxtofl,f
 10787     08BD  0DF5               	rlf	??___xxtofl+1,f
 10788     08BE  0DF6               	rlf	??___xxtofl+2,f
 10789     08BF  0DF7               	rlf	??___xxtofl+3,f
 10790     08C0                     u5050:
 10791     08C0  0B89               	decfsz	9,f
 10792     08C1  28BC               	goto	u5055
 10793     08C2  0874               	movf	??___xxtofl,w
 10794     08C3  04FA               	iorwf	___xxtofl@arg,f
 10795     08C4  0875               	movf	??___xxtofl+1,w
 10796     08C5  04FB               	iorwf	___xxtofl@arg+1,f
 10797     08C6  0876               	movf	??___xxtofl+2,w
 10798     08C7  04FC               	iorwf	___xxtofl@arg+2,f
 10799     08C8  0877               	movf	??___xxtofl+3,w
 10800     08C9  04FD               	iorwf	___xxtofl@arg+3,f
 10801     08CA                     l4876:
 10802     08CA  0878               	movf	___xxtofl@sign,w
 10803     08CB  1903               	btfsc	3,2
 10804     08CC  28CE               	goto	u5061
 10805     08CD  28CF               	goto	u5060
 10806     08CE                     u5061:
 10807     08CE  28D4               	goto	l4882
 10808     08CF                     u5060:
 10809     08CF                     l4878:
 10810     08CF  1FF3               	btfss	___xxtofl@val+3,7
 10811     08D0  28D2               	goto	u5071
 10812     08D1  28D3               	goto	u5070
 10813     08D2                     u5071:
 10814     08D2  28D4               	goto	l4882
 10815     08D3                     u5070:
 10816     08D3                     l4880:
 10817     08D3  17FD               	bsf	___xxtofl@arg+3,7
 10818     08D4                     l4882:
 10819     08D4  087D               	movf	___xxtofl@arg+3,w
 10820     08D5  00F3               	movwf	?___xxtofl+3
 10821     08D6  087C               	movf	___xxtofl@arg+2,w
 10822     08D7  00F2               	movwf	?___xxtofl+2
 10823     08D8  087B               	movf	___xxtofl@arg+1,w
 10824     08D9  00F1               	movwf	?___xxtofl+1
 10825     08DA  087A               	movf	___xxtofl@arg,w
 10826     08DB  00F0               	movwf	?___xxtofl
 10827     08DC                     l1018:
 10828     08DC  0008               	return
 10829     08DD                     __end_of___xxtofl:
 10830                           
 10831                           	psect	text30
 10832     19CB                     __ptext30:	
 10833 ;; *************** function _ADC_Get_Value *****************
 10834 ;; Defined at:
 10835 ;;		line 11 in file "ADC.c"
 10836 ;; Parameters:    Size  Location     Type
 10837 ;;  ch              1    wreg     unsigned char 
 10838 ;; Auto vars:     Size  Location     Type
 10839 ;;  ch              1    3[COMMON] unsigned char 
 10840 ;; Return value:  Size  Location     Type
 10841 ;;                  2    0[COMMON] int 
 10842 ;; Registers used:
 10843 ;;		wreg, status,2, status,0
 10844 ;; Tracked objects:
 10845 ;;		On entry : 0/0
 10846 ;;		On exit  : 0/0
 10847 ;;		Unchanged: 0/0
 10848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10849 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10850 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10851 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10852 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10853 ;;Total ram usage:        4 bytes
 10854 ;; Hardware stack levels used: 1
 10855 ;; This function calls:
 10856 ;;		Nothing
 10857 ;; This function is called by:
 10858 ;;		_MenuSensores
 10859 ;; This function uses a non-reentrant model
 10860 ;;
 10861                           
 10862     19CB                     _ADC_Get_Value:	
 10863                           ;psect for function _ADC_Get_Value
 10864                           
 10865                           
 10866                           ;incstack = 0
 10867                           ; Regs used in _ADC_Get_Value: [wreg+status,2+status,0]
 10868                           ;ADC_Get_Value@ch stored from wreg
 10869     19CB  00F3               	movwf	ADC_Get_Value@ch
 10870     19CC                     l4770:
 10871                           
 10872                           ;ADC.c: 12:     ADCON0bits.CHS = ch & 0x1F;
 10873     19CC  0873               	movf	ADC_Get_Value@ch,w
 10874     19CD  391F               	andlw	31
 10875     19CE  00F2               	movwf	??_ADC_Get_Value
 10876     19CF  0DF2               	rlf	??_ADC_Get_Value,f
 10877     19D0  0DF2               	rlf	??_ADC_Get_Value,f
 10878     19D1  0021               	movlb	1	; select bank1
 10879     19D2  081D               	movf	29,w	;volatile
 10880     19D3  0672               	xorwf	??_ADC_Get_Value,w
 10881     19D4  3983               	andlw	-125
 10882     19D5  0672               	xorwf	??_ADC_Get_Value,w
 10883     19D6  009D               	movwf	29	;volatile
 10884     19D7                     l4772:
 10885                           
 10886                           ;ADC.c: 13:     ADCON0bits.GO_nDONE = 1;
 10887     19D7  149D               	bsf	29,1	;volatile
 10888     19D8                     l57:	
 10889                           ;ADC.c: 14:     while(ADCON0bits.GO_nDONE == 1);
 10890                           
 10891     19D8  189D               	btfsc	29,1	;volatile
 10892     19D9  29DB               	goto	u4921
 10893     19DA  29DC               	goto	u4920
 10894     19DB                     u4921:
 10895     19DB  29D8               	goto	l57
 10896     19DC                     u4920:
 10897     19DC                     l4774:
 10898                           
 10899                           ;ADC.c: 15:     return ( (ADRESH<<8) | ADRESL );
 10900     19DC  081C               	movf	28,w	;volatile
 10901     19DD  00F1               	movwf	?_ADC_Get_Value+1
 10902     19DE  081B               	movf	27,w	;volatile
 10903     19DF  00F0               	movwf	?_ADC_Get_Value
 10904     19E0                     l60:
 10905     19E0  0008               	return
 10906     19E1                     __end_of_ADC_Get_Value:
 10907                           
 10908                           	psect	text31
 10909     1398                     __ptext31:	
 10910 ;; *************** function _MenuPPAL *****************
 10911 ;; Defined at:
 10912 ;;		line 108 in file "Menu.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;		None
 10915 ;; Auto vars:     Size  Location     Type
 10916 ;;		None
 10917 ;; Return value:  Size  Location     Type
 10918 ;;                  1    wreg      void 
 10919 ;; Registers used:
 10920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10921 ;; Tracked objects:
 10922 ;;		On entry : 0/0
 10923 ;;		On exit  : 0/0
 10924 ;;		Unchanged: 0/0
 10925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10928 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10929 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10930 ;;Total ram usage:        2 bytes
 10931 ;; Hardware stack levels used: 1
 10932 ;; Hardware stack levels required when called: 4
 10933 ;; This function calls:
 10934 ;;		_LCD_Cmd
 10935 ;;		_LCD_Write
 10936 ;;		_LCD_Write_Text
 10937 ;; This function is called by:
 10938 ;;		_main
 10939 ;; This function uses a non-reentrant model
 10940 ;;
 10941                           
 10942     1398                     _MenuPPAL:	
 10943                           ;psect for function _MenuPPAL
 10944                           
 10945     1398                     l4958:	
 10946                           ;incstack = 0
 10947                           ; Regs used in _MenuPPAL: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10948                           
 10949                           
 10950                           ;Menu.c: 110:     LCD_Write_Text(1,1,"       MENU PPAL    ");
 10951     1398  01FA               	clrf	LCD_Write_Text@col
 10952     1399  0AFA               	incf	LCD_Write_Text@col,f
 10953     139A  303B               	movlw	low (STR_1| (0+32768))
 10954     139B  00FB               	movwf	LCD_Write_Text@text
 10955     139C  30A1               	movlw	high (STR_1| (0+32768))
 10956     139D  00FC               	movwf	LCD_Write_Text@text+1
 10957     139E  3001               	movlw	1
 10958     139F  3199  21FD  3193   	fcall	_LCD_Write_Text
 10959                           
 10960                           ;Menu.c: 111:     LCD_Write_Text(2,1,"1.MOTORES   3.LEDS  ");
 10961     13A2  01FA               	clrf	LCD_Write_Text@col
 10962     13A3  0AFA               	incf	LCD_Write_Text@col,f
 10963     13A4  30A4               	movlw	low (STR_2| (0+32768))
 10964     13A5  00FB               	movwf	LCD_Write_Text@text
 10965     13A6  30A1               	movlw	high (STR_2| (0+32768))
 10966     13A7  00FC               	movwf	LCD_Write_Text@text+1
 10967     13A8  3002               	movlw	2
 10968     13A9  3199  21FD  3193   	fcall	_LCD_Write_Text
 10969                           
 10970                           ;Menu.c: 112:     LCD_Write_Text(3,1,"2.SENSORES          ");
 10971     13AC  01FA               	clrf	LCD_Write_Text@col
 10972     13AD  0AFA               	incf	LCD_Write_Text@col,f
 10973     13AE  303F               	movlw	low (STR_3| (0+32768))
 10974     13AF  00FB               	movwf	LCD_Write_Text@text
 10975     13B0  30A0               	movlw	high (STR_3| (0+32768))
 10976     13B1  00FC               	movwf	LCD_Write_Text@text+1
 10977     13B2  3003               	movlw	3
 10978     13B3  3199  21FD  3193   	fcall	_LCD_Write_Text
 10979                           
 10980                           ;Menu.c: 113:     LCD_Write_Text(4,1,"OP:                 ");
 10981     13B6  01FA               	clrf	LCD_Write_Text@col
 10982     13B7  0AFA               	incf	LCD_Write_Text@col,f
 10983     13B8  3000               	movlw	low (STR_4| (0+32768))
 10984     13B9  00FB               	movwf	LCD_Write_Text@text
 10985     13BA  30A0               	movlw	high (STR_4| (0+32768))
 10986     13BB  00FC               	movwf	LCD_Write_Text@text+1
 10987     13BC  3004               	movlw	4
 10988     13BD  3199  21FD  3193   	fcall	_LCD_Write_Text
 10989                           
 10990                           ;Menu.c: 114:     LCD_Write(4,4,op+48);
 10991     13C0  3004               	movlw	4
 10992     13C1  00FA               	movwf	LCD_Write@col
 10993     13C2  0021               	movlb	1	; select bank1
 10994     13C3  086F               	movf	_op^(0+128),w
 10995     13C4  3E30               	addlw	48
 10996     13C5  00FB               	movwf	LCD_Write@letra
 10997     13C6  3004               	movlw	4
 10998     13C7  3190  2001  3193   	fcall	_LCD_Write
 10999                           
 11000                           ;Menu.c: 116:     switch(op){
 11001     13CA  2C16               	goto	l4968
 11002     13CB                     l4960:
 11003     13CB  300A               	movlw	10
 11004     13CC  00FA               	movwf	LCD_Write@col
 11005     13CD  303C               	movlw	60
 11006     13CE  00FB               	movwf	LCD_Write@letra
 11007     13CF  3002               	movlw	2
 11008     13D0  3190  2001  3193   	fcall	_LCD_Write
 11009                           
 11010                           ;Menu.c: 118:                 LCD_Write(3,11,' ');
 11011     13D3  300B               	movlw	11
 11012     13D4  00FA               	movwf	LCD_Write@col
 11013     13D5  3020               	movlw	32
 11014     13D6  00FB               	movwf	LCD_Write@letra
 11015     13D7  3003               	movlw	3
 11016     13D8  3190  2001  3193   	fcall	_LCD_Write
 11017                           
 11018                           ;Menu.c: 119:                 LCD_Write(2,19,' ');
 11019     13DB  3013               	movlw	19
 11020     13DC  00FA               	movwf	LCD_Write@col
 11021     13DD  3020               	movlw	32
 11022     13DE  00FB               	movwf	LCD_Write@letra
 11023     13DF  3002               	movlw	2
 11024     13E0  3190  2001  3193   	fcall	_LCD_Write
 11025                           
 11026                           ;Menu.c: 120:                 break;
 11027     13E3  2C2B               	goto	l201
 11028     13E4                     l4962:
 11029     13E4  300A               	movlw	10
 11030     13E5  00FA               	movwf	LCD_Write@col
 11031     13E6  3020               	movlw	32
 11032     13E7  00FB               	movwf	LCD_Write@letra
 11033     13E8  3002               	movlw	2
 11034     13E9  3190  2001  3193   	fcall	_LCD_Write
 11035                           
 11036                           ;Menu.c: 122:                 LCD_Write(3,11,'<');
 11037     13EC  300B               	movlw	11
 11038     13ED  00FA               	movwf	LCD_Write@col
 11039     13EE  303C               	movlw	60
 11040     13EF  00FB               	movwf	LCD_Write@letra
 11041     13F0  3003               	movlw	3
 11042     13F1  3190  2001  3193   	fcall	_LCD_Write
 11043                           
 11044                           ;Menu.c: 123:                 LCD_Write(2,19,' ');
 11045     13F4  3013               	movlw	19
 11046     13F5  00FA               	movwf	LCD_Write@col
 11047     13F6  3020               	movlw	32
 11048     13F7  00FB               	movwf	LCD_Write@letra
 11049     13F8  3002               	movlw	2
 11050     13F9  3190  2001  3193   	fcall	_LCD_Write
 11051                           
 11052                           ;Menu.c: 124:                 break;
 11053     13FC  2C2B               	goto	l201
 11054     13FD                     l4964:
 11055     13FD  300A               	movlw	10
 11056     13FE  00FA               	movwf	LCD_Write@col
 11057     13FF  3020               	movlw	32
 11058     1400  00FB               	movwf	LCD_Write@letra
 11059     1401  3002               	movlw	2
 11060     1402  3190  2001  3193   	fcall	_LCD_Write
 11061                           
 11062                           ;Menu.c: 126:                 LCD_Write(3,11,' ');
 11063     1405  300B               	movlw	11
 11064     1406  00FA               	movwf	LCD_Write@col
 11065     1407  3020               	movlw	32
 11066     1408  00FB               	movwf	LCD_Write@letra
 11067     1409  3003               	movlw	3
 11068     140A  3190  2001  3193   	fcall	_LCD_Write
 11069                           
 11070                           ;Menu.c: 127:                 LCD_Write(2,19,'<');
 11071     140D  3013               	movlw	19
 11072     140E  00FA               	movwf	LCD_Write@col
 11073     140F  303C               	movlw	60
 11074     1410  00FB               	movwf	LCD_Write@letra
 11075     1411  3002               	movlw	2
 11076     1412  3190  2001  3193   	fcall	_LCD_Write
 11077                           
 11078                           ;Menu.c: 128:                 break;
 11079     1415  2C2B               	goto	l201
 11080     1416                     l4968:
 11081     1416  0021               	movlb	1	; select bank1
 11082     1417  086F               	movf	_op^(0+128),w
 11083     1418  0020               	movlb	0	; select bank0
 11084     1419  00A1               	movwf	??_MenuPPAL
 11085     141A  01A2               	clrf	??_MenuPPAL+1
 11086                           
 11087                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11088                           ; Switch size 1, requested type "simple"
 11089                           ; Number of cases is 1, Range of values is 0 to 0
 11090                           ; switch strategies available:
 11091                           ; Name         Instructions Cycles
 11092                           ; simple_byte            4     3 (average)
 11093                           ; direct_byte            8     6 (fixed)
 11094                           ; jumptable            260     6 (fixed)
 11095                           ;	Chosen strategy is simple_byte
 11096     141B  0822               	movf	??_MenuPPAL+1,w
 11097     141C  3A00               	xorlw	0	; case 0
 11098     141D  1903               	skipnz
 11099     141E  2C20               	goto	l5886
 11100     141F  2C2B               	goto	l201
 11101     1420                     l5886:
 11102                           
 11103                           ; Switch size 1, requested type "simple"
 11104                           ; Number of cases is 3, Range of values is 1 to 3
 11105                           ; switch strategies available:
 11106                           ; Name         Instructions Cycles
 11107                           ; simple_byte           10     6 (average)
 11108                           ; direct_byte           15     9 (fixed)
 11109                           ; jumptable            263     9 (fixed)
 11110                           ;	Chosen strategy is simple_byte
 11111     1420  0821               	movf	??_MenuPPAL,w
 11112     1421  3A01               	xorlw	1	; case 1
 11113     1422  1903               	skipnz
 11114     1423  2BCB               	goto	l4960
 11115     1424  3A03               	xorlw	3	; case 2
 11116     1425  1903               	skipnz
 11117     1426  2BE4               	goto	l4962
 11118     1427  3A01               	xorlw	1	; case 3
 11119     1428  1903               	skipnz
 11120     1429  2BFD               	goto	l4964
 11121     142A  2C2B               	goto	l201
 11122     142B                     l201:
 11123                           
 11124                           ;Menu.c: 131:     if(PORTBbits.RB0 == 1){
 11125     142B  0020               	movlb	0	; select bank0
 11126     142C  1C0D               	btfss	13,0	;volatile
 11127     142D  2C2F               	goto	u5081
 11128     142E  2C30               	goto	u5080
 11129     142F                     u5081:
 11130     142F  2C41               	goto	l204
 11131     1430                     u5080:
 11132     1430                     l205:
 11133     1430  180D               	btfsc	13,0	;volatile
 11134     1431  2C33               	goto	u5091
 11135     1432  2C34               	goto	u5090
 11136     1433                     u5091:
 11137     1433  2C30               	goto	l205
 11138     1434                     u5090:
 11139     1434                     l4972:
 11140                           
 11141                           ;Menu.c: 133:         op++;
 11142     1434  3001               	movlw	1
 11143     1435  00A1               	movwf	??_MenuPPAL
 11144     1436  0821               	movf	??_MenuPPAL,w
 11145     1437  0021               	movlb	1	; select bank1
 11146     1438  07EF               	addwf	_op^(0+128),f
 11147     1439                     l4974:
 11148                           
 11149                           ;Menu.c: 134:         if(op>3)
 11150     1439  3004               	movlw	4
 11151     143A  026F               	subwf	_op^(0+128),w
 11152     143B  1C03               	skipc
 11153     143C  2C3E               	goto	u5101
 11154     143D  2C3F               	goto	u5100
 11155     143E                     u5101:
 11156     143E  2C41               	goto	l204
 11157     143F                     u5100:
 11158     143F                     l4976:
 11159                           
 11160                           ;Menu.c: 135:             op=1;
 11161     143F  01EF               	clrf	_op^(0+128)
 11162     1440  0AEF               	incf	_op^(0+128),f
 11163     1441                     l204:	
 11164                           ;Menu.c: 136:     }
 11165                           
 11166                           
 11167                           ;Menu.c: 137:     if(PORTBbits.RB1 == 1){
 11168     1441  0020               	movlb	0	; select bank0
 11169     1442  1C8D               	btfss	13,1	;volatile
 11170     1443  2C45               	goto	u5111
 11171     1444  2C46               	goto	u5110
 11172     1445                     u5111:
 11173     1445  2C54               	goto	l4984
 11174     1446                     u5110:
 11175     1446                     l210:
 11176     1446  188D               	btfsc	13,1	;volatile
 11177     1447  2C49               	goto	u5121
 11178     1448  2C4A               	goto	u5120
 11179     1449                     u5121:
 11180     1449  2C46               	goto	l210
 11181     144A                     u5120:
 11182     144A                     l4980:
 11183                           
 11184                           ;Menu.c: 139:         op--;
 11185     144A  3001               	movlw	1
 11186     144B  0021               	movlb	1	; select bank1
 11187     144C  02EF               	subwf	_op^(0+128),f
 11188                           
 11189                           ;Menu.c: 140:         if(op<1)
 11190     144D  086F               	movf	_op^(0+128),w
 11191     144E  1D03               	btfss	3,2
 11192     144F  2C51               	goto	u5131
 11193     1450  2C52               	goto	u5130
 11194     1451                     u5131:
 11195     1451  2C54               	goto	l4984
 11196     1452                     u5130:
 11197     1452                     l4982:
 11198                           
 11199                           ;Menu.c: 141:             op=3;
 11200     1452  3003               	movlw	3
 11201     1453  00EF               	movwf	_op^(0+128)
 11202     1454                     l4984:
 11203                           
 11204                           ;Menu.c: 143:     if(PORTBbits.RB2 == 1){
 11205     1454  0020               	movlb	0	; select bank0
 11206     1455  1D0D               	btfss	13,2	;volatile
 11207     1456  2C58               	goto	u5141
 11208     1457  2C59               	goto	u5140
 11209     1458                     u5141:
 11210     1458  2C89               	goto	l223
 11211     1459                     u5140:
 11212     1459                     l215:
 11213     1459  190D               	btfsc	13,2	;volatile
 11214     145A  2C5C               	goto	u5151
 11215     145B  2C5D               	goto	u5150
 11216     145C                     u5151:
 11217     145C  2C59               	goto	l215
 11218     145D                     u5150:
 11219     145D  2C70               	goto	l4998
 11220     145E                     l4988:
 11221     145E  3003               	movlw	3
 11222     145F  0022               	movlb	2	; select bank2
 11223     1460  00B6               	movwf	_cMenu^(0+256)
 11224     1461                     l4990:
 11225     1461  0021               	movlb	1	; select bank1
 11226     1462  01EF               	clrf	_op^(0+128)
 11227     1463  0AEF               	incf	_op^(0+128),f
 11228     1464  2C85               	goto	l5000
 11229     1465                     l221:	
 11230                           ;Menu.c: 147:             case 2: cMenu=MSENSORES; op=1; break;
 11231                           
 11232     1465  0022               	movlb	2	; select bank2
 11233     1466  01B6               	clrf	_cMenu^(0+256)
 11234     1467  0AB6               	incf	_cMenu^(0+256),f
 11235     1468  0021               	movlb	1	; select bank1
 11236     1469  01EF               	clrf	_op^(0+128)
 11237     146A  0AEF               	incf	_op^(0+128),f
 11238     146B  2C85               	goto	l5000
 11239     146C                     l4992:
 11240     146C  3002               	movlw	2
 11241     146D  0022               	movlb	2	; select bank2
 11242     146E  00B6               	movwf	_cMenu^(0+256)
 11243     146F  2C61               	goto	l4990
 11244     1470                     l4998:
 11245     1470  0021               	movlb	1	; select bank1
 11246     1471  086F               	movf	_op^(0+128),w
 11247     1472  0020               	movlb	0	; select bank0
 11248     1473  00A1               	movwf	??_MenuPPAL
 11249     1474  01A2               	clrf	??_MenuPPAL+1
 11250                           
 11251                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11252                           ; Switch size 1, requested type "simple"
 11253                           ; Number of cases is 1, Range of values is 0 to 0
 11254                           ; switch strategies available:
 11255                           ; Name         Instructions Cycles
 11256                           ; simple_byte            4     3 (average)
 11257                           ; direct_byte            8     6 (fixed)
 11258                           ; jumptable            260     6 (fixed)
 11259                           ;	Chosen strategy is simple_byte
 11260     1475  0822               	movf	??_MenuPPAL+1,w
 11261     1476  3A00               	xorlw	0	; case 0
 11262     1477  1903               	skipnz
 11263     1478  2C7A               	goto	l5888
 11264     1479  2C85               	goto	l5000
 11265     147A                     l5888:
 11266                           
 11267                           ; Switch size 1, requested type "simple"
 11268                           ; Number of cases is 3, Range of values is 1 to 3
 11269                           ; switch strategies available:
 11270                           ; Name         Instructions Cycles
 11271                           ; simple_byte           10     6 (average)
 11272                           ; direct_byte           15     9 (fixed)
 11273                           ; jumptable            263     9 (fixed)
 11274                           ;	Chosen strategy is simple_byte
 11275     147A  0821               	movf	??_MenuPPAL,w
 11276     147B  3A01               	xorlw	1	; case 1
 11277     147C  1903               	skipnz
 11278     147D  2C5E               	goto	l4988
 11279     147E  3A03               	xorlw	3	; case 2
 11280     147F  1903               	skipnz
 11281     1480  2C65               	goto	l221
 11282     1481  3A01               	xorlw	1	; case 3
 11283     1482  1903               	skipnz
 11284     1483  2C6C               	goto	l4992
 11285     1484  2C85               	goto	l5000
 11286     1485                     l5000:
 11287                           
 11288                           ;Menu.c: 150:         LCD_Cmd(1);
 11289     1485  3001               	movlw	1
 11290     1486  3199  21E1  3193   	fcall	_LCD_Cmd
 11291     1489                     l223:
 11292     1489  0008               	return
 11293     148A                     __end_of_MenuPPAL:
 11294                           
 11295                           	psect	text32
 11296     12AA                     __ptext32:	
 11297 ;; *************** function _MenuMotores *****************
 11298 ;; Defined at:
 11299 ;;		line 185 in file "Menu.c"
 11300 ;; Parameters:    Size  Location     Type
 11301 ;;		None
 11302 ;; Auto vars:     Size  Location     Type
 11303 ;;		None
 11304 ;; Return value:  Size  Location     Type
 11305 ;;                  1    wreg      void 
 11306 ;; Registers used:
 11307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11308 ;; Tracked objects:
 11309 ;;		On entry : 0/0
 11310 ;;		On exit  : 0/0
 11311 ;;		Unchanged: 0/0
 11312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11315 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11316 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11317 ;;Total ram usage:        2 bytes
 11318 ;; Hardware stack levels used: 1
 11319 ;; Hardware stack levels required when called: 4
 11320 ;; This function calls:
 11321 ;;		_LCD_Cmd
 11322 ;;		_LCD_Write
 11323 ;;		_LCD_Write_Text
 11324 ;; This function is called by:
 11325 ;;		_main
 11326 ;; This function uses a non-reentrant model
 11327 ;;
 11328                           
 11329     12AA                     _MenuMotores:	
 11330                           ;psect for function _MenuMotores
 11331                           
 11332     12AA                     l5096:	
 11333                           ;incstack = 0
 11334                           ; Regs used in _MenuMotores: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11335                           
 11336                           
 11337                           ;Menu.c: 187:     LCD_Write_Text(1,1,"   MENU MOTORES     ");
 11338     12AA  01FA               	clrf	LCD_Write_Text@col
 11339     12AB  0AFA               	incf	LCD_Write_Text@col,f
 11340     12AC  30A8               	movlw	low (STR_9| (0+32768))
 11341     12AD  00FB               	movwf	LCD_Write_Text@text
 11342     12AE  30A0               	movlw	high (STR_9| (0+32768))
 11343     12AF  00FC               	movwf	LCD_Write_Text@text+1
 11344     12B0  3001               	movlw	1
 11345     12B1  3199  21FD  3192   	fcall	_LCD_Write_Text
 11346                           
 11347                           ;Menu.c: 188:     LCD_Write_Text(2,1,"1.MOTORA    3.BACK  ");
 11348     12B4  01FA               	clrf	LCD_Write_Text@col
 11349     12B5  0AFA               	incf	LCD_Write_Text@col,f
 11350     12B6  308F               	movlw	low (STR_10| (0+32768))
 11351     12B7  00FB               	movwf	LCD_Write_Text@text
 11352     12B8  30A1               	movlw	high (STR_10| (0+32768))
 11353     12B9  00FC               	movwf	LCD_Write_Text@text+1
 11354     12BA  3002               	movlw	2
 11355     12BB  3199  21FD  3192   	fcall	_LCD_Write_Text
 11356                           
 11357                           ;Menu.c: 189:     LCD_Write_Text(3,1,"2.MOTORB            ");
 11358     12BE  01FA               	clrf	LCD_Write_Text@col
 11359     12BF  0AFA               	incf	LCD_Write_Text@col,f
 11360     12C0  302A               	movlw	low (STR_11| (0+32768))
 11361     12C1  00FB               	movwf	LCD_Write_Text@text
 11362     12C2  30A0               	movlw	high (STR_11| (0+32768))
 11363     12C3  00FC               	movwf	LCD_Write_Text@text+1
 11364     12C4  3003               	movlw	3
 11365     12C5  3199  21FD  3192   	fcall	_LCD_Write_Text
 11366                           
 11367                           ;Menu.c: 190:     LCD_Write_Text(4,1,"OP:                 ");
 11368     12C8  01FA               	clrf	LCD_Write_Text@col
 11369     12C9  0AFA               	incf	LCD_Write_Text@col,f
 11370     12CA  3000               	movlw	low (STR_4| (0+32768))
 11371     12CB  00FB               	movwf	LCD_Write_Text@text
 11372     12CC  30A0               	movlw	high (STR_4| (0+32768))
 11373     12CD  00FC               	movwf	LCD_Write_Text@text+1
 11374     12CE  3004               	movlw	4
 11375     12CF  3199  21FD  3192   	fcall	_LCD_Write_Text
 11376                           
 11377                           ;Menu.c: 192:     LCD_Write(4,4,op+48);
 11378     12D2  3004               	movlw	4
 11379     12D3  00FA               	movwf	LCD_Write@col
 11380     12D4  0021               	movlb	1	; select bank1
 11381     12D5  086F               	movf	_op^(0+128),w
 11382     12D6  3E30               	addlw	48
 11383     12D7  00FB               	movwf	LCD_Write@letra
 11384     12D8  3004               	movlw	4
 11385     12D9  3190  2001  3192   	fcall	_LCD_Write
 11386                           
 11387                           ;Menu.c: 194:     switch(op){
 11388     12DC  2B28               	goto	l5106
 11389     12DD                     l5098:
 11390     12DD  3009               	movlw	9
 11391     12DE  00FA               	movwf	LCD_Write@col
 11392     12DF  303C               	movlw	60
 11393     12E0  00FB               	movwf	LCD_Write@letra
 11394     12E1  3002               	movlw	2
 11395     12E2  3190  2001  3192   	fcall	_LCD_Write
 11396                           
 11397                           ;Menu.c: 196:                 LCD_Write(3,9,' ');
 11398     12E5  3009               	movlw	9
 11399     12E6  00FA               	movwf	LCD_Write@col
 11400     12E7  3020               	movlw	32
 11401     12E8  00FB               	movwf	LCD_Write@letra
 11402     12E9  3003               	movlw	3
 11403     12EA  3190  2001  3192   	fcall	_LCD_Write
 11404                           
 11405                           ;Menu.c: 197:                 LCD_Write(2,19,' ');
 11406     12ED  3013               	movlw	19
 11407     12EE  00FA               	movwf	LCD_Write@col
 11408     12EF  3020               	movlw	32
 11409     12F0  00FB               	movwf	LCD_Write@letra
 11410     12F1  3002               	movlw	2
 11411     12F2  3190  2001  3192   	fcall	_LCD_Write
 11412                           
 11413                           ;Menu.c: 198:                 break;
 11414     12F5  2B3D               	goto	l235
 11415     12F6                     l5100:
 11416     12F6  3009               	movlw	9
 11417     12F7  00FA               	movwf	LCD_Write@col
 11418     12F8  3020               	movlw	32
 11419     12F9  00FB               	movwf	LCD_Write@letra
 11420     12FA  3002               	movlw	2
 11421     12FB  3190  2001  3192   	fcall	_LCD_Write
 11422                           
 11423                           ;Menu.c: 200:                 LCD_Write(3,9,'<');
 11424     12FE  3009               	movlw	9
 11425     12FF  00FA               	movwf	LCD_Write@col
 11426     1300  303C               	movlw	60
 11427     1301  00FB               	movwf	LCD_Write@letra
 11428     1302  3003               	movlw	3
 11429     1303  3190  2001  3192   	fcall	_LCD_Write
 11430                           
 11431                           ;Menu.c: 201:                 LCD_Write(2,19,' ');
 11432     1306  3013               	movlw	19
 11433     1307  00FA               	movwf	LCD_Write@col
 11434     1308  3020               	movlw	32
 11435     1309  00FB               	movwf	LCD_Write@letra
 11436     130A  3002               	movlw	2
 11437     130B  3190  2001  3192   	fcall	_LCD_Write
 11438                           
 11439                           ;Menu.c: 202:                 break;
 11440     130E  2B3D               	goto	l235
 11441     130F                     l5102:
 11442     130F  3009               	movlw	9
 11443     1310  00FA               	movwf	LCD_Write@col
 11444     1311  3020               	movlw	32
 11445     1312  00FB               	movwf	LCD_Write@letra
 11446     1313  3002               	movlw	2
 11447     1314  3190  2001  3192   	fcall	_LCD_Write
 11448                           
 11449                           ;Menu.c: 204:                 LCD_Write(3,9,' ');
 11450     1317  3009               	movlw	9
 11451     1318  00FA               	movwf	LCD_Write@col
 11452     1319  3020               	movlw	32
 11453     131A  00FB               	movwf	LCD_Write@letra
 11454     131B  3003               	movlw	3
 11455     131C  3190  2001  3192   	fcall	_LCD_Write
 11456                           
 11457                           ;Menu.c: 205:                 LCD_Write(2,19,'<');
 11458     131F  3013               	movlw	19
 11459     1320  00FA               	movwf	LCD_Write@col
 11460     1321  303C               	movlw	60
 11461     1322  00FB               	movwf	LCD_Write@letra
 11462     1323  3002               	movlw	2
 11463     1324  3190  2001  3192   	fcall	_LCD_Write
 11464                           
 11465                           ;Menu.c: 206:                 break;
 11466     1327  2B3D               	goto	l235
 11467     1328                     l5106:
 11468     1328  0021               	movlb	1	; select bank1
 11469     1329  086F               	movf	_op^(0+128),w
 11470     132A  0020               	movlb	0	; select bank0
 11471     132B  00A1               	movwf	??_MenuMotores
 11472     132C  01A2               	clrf	??_MenuMotores+1
 11473                           
 11474                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11475                           ; Switch size 1, requested type "simple"
 11476                           ; Number of cases is 1, Range of values is 0 to 0
 11477                           ; switch strategies available:
 11478                           ; Name         Instructions Cycles
 11479                           ; simple_byte            4     3 (average)
 11480                           ; direct_byte            8     6 (fixed)
 11481                           ; jumptable            260     6 (fixed)
 11482                           ;	Chosen strategy is simple_byte
 11483     132D  0822               	movf	??_MenuMotores+1,w
 11484     132E  3A00               	xorlw	0	; case 0
 11485     132F  1903               	skipnz
 11486     1330  2B32               	goto	l5890
 11487     1331  2B3D               	goto	l235
 11488     1332                     l5890:
 11489                           
 11490                           ; Switch size 1, requested type "simple"
 11491                           ; Number of cases is 3, Range of values is 1 to 3
 11492                           ; switch strategies available:
 11493                           ; Name         Instructions Cycles
 11494                           ; simple_byte           10     6 (average)
 11495                           ; direct_byte           15     9 (fixed)
 11496                           ; jumptable            263     9 (fixed)
 11497                           ;	Chosen strategy is simple_byte
 11498     1332  0821               	movf	??_MenuMotores,w
 11499     1333  3A01               	xorlw	1	; case 1
 11500     1334  1903               	skipnz
 11501     1335  2ADD               	goto	l5098
 11502     1336  3A03               	xorlw	3	; case 2
 11503     1337  1903               	skipnz
 11504     1338  2AF6               	goto	l5100
 11505     1339  3A01               	xorlw	1	; case 3
 11506     133A  1903               	skipnz
 11507     133B  2B0F               	goto	l5102
 11508     133C  2B3D               	goto	l235
 11509     133D                     l235:
 11510                           
 11511                           ;Menu.c: 209:     if(PORTBbits.RB0 == 1){
 11512     133D  0020               	movlb	0	; select bank0
 11513     133E  1C0D               	btfss	13,0	;volatile
 11514     133F  2B41               	goto	u5261
 11515     1340  2B42               	goto	u5260
 11516     1341                     u5261:
 11517     1341  2B53               	goto	l238
 11518     1342                     u5260:
 11519     1342                     l239:
 11520     1342  180D               	btfsc	13,0	;volatile
 11521     1343  2B45               	goto	u5271
 11522     1344  2B46               	goto	u5270
 11523     1345                     u5271:
 11524     1345  2B42               	goto	l239
 11525     1346                     u5270:
 11526     1346                     l5110:
 11527                           
 11528                           ;Menu.c: 211:         op++;
 11529     1346  3001               	movlw	1
 11530     1347  00A1               	movwf	??_MenuMotores
 11531     1348  0821               	movf	??_MenuMotores,w
 11532     1349  0021               	movlb	1	; select bank1
 11533     134A  07EF               	addwf	_op^(0+128),f
 11534     134B                     l5112:
 11535                           
 11536                           ;Menu.c: 212:         if(op>3)
 11537     134B  3004               	movlw	4
 11538     134C  026F               	subwf	_op^(0+128),w
 11539     134D  1C03               	skipc
 11540     134E  2B50               	goto	u5281
 11541     134F  2B51               	goto	u5280
 11542     1350                     u5281:
 11543     1350  2B53               	goto	l238
 11544     1351                     u5280:
 11545     1351                     l5114:
 11546                           
 11547                           ;Menu.c: 213:             op=1;
 11548     1351  01EF               	clrf	_op^(0+128)
 11549     1352  0AEF               	incf	_op^(0+128),f
 11550     1353                     l238:	
 11551                           ;Menu.c: 214:     }
 11552                           
 11553                           
 11554                           ;Menu.c: 215:     if(PORTBbits.RB1 == 1){
 11555     1353  0020               	movlb	0	; select bank0
 11556     1354  1C8D               	btfss	13,1	;volatile
 11557     1355  2B57               	goto	u5291
 11558     1356  2B58               	goto	u5290
 11559     1357                     u5291:
 11560     1357  2B66               	goto	l5122
 11561     1358                     u5290:
 11562     1358                     l244:
 11563     1358  188D               	btfsc	13,1	;volatile
 11564     1359  2B5B               	goto	u5301
 11565     135A  2B5C               	goto	u5300
 11566     135B                     u5301:
 11567     135B  2B58               	goto	l244
 11568     135C                     u5300:
 11569     135C                     l5118:
 11570                           
 11571                           ;Menu.c: 217:         op--;
 11572     135C  3001               	movlw	1
 11573     135D  0021               	movlb	1	; select bank1
 11574     135E  02EF               	subwf	_op^(0+128),f
 11575                           
 11576                           ;Menu.c: 218:         if(op<1)
 11577     135F  086F               	movf	_op^(0+128),w
 11578     1360  1D03               	btfss	3,2
 11579     1361  2B63               	goto	u5311
 11580     1362  2B64               	goto	u5310
 11581     1363                     u5311:
 11582     1363  2B66               	goto	l5122
 11583     1364                     u5310:
 11584     1364                     l5120:
 11585                           
 11586                           ;Menu.c: 219:             op=3;
 11587     1364  3003               	movlw	3
 11588     1365  00EF               	movwf	_op^(0+128)
 11589     1366                     l5122:
 11590                           
 11591                           ;Menu.c: 221:     if(PORTBbits.RB2 == 1){
 11592     1366  0020               	movlb	0	; select bank0
 11593     1367  1D0D               	btfss	13,2	;volatile
 11594     1368  2B6A               	goto	u5321
 11595     1369  2B6B               	goto	u5320
 11596     136A                     u5321:
 11597     136A  2B97               	goto	l257
 11598     136B                     u5320:
 11599     136B                     l249:
 11600     136B  190D               	btfsc	13,2	;volatile
 11601     136C  2B6E               	goto	u5331
 11602     136D  2B6F               	goto	u5330
 11603     136E                     u5331:
 11604     136E  2B6B               	goto	l249
 11605     136F                     u5330:
 11606     136F  2B7E               	goto	l5140
 11607     1370                     l5126:
 11608     1370  3007               	movlw	7
 11609     1371  0022               	movlb	2	; select bank2
 11610     1372  00B6               	movwf	_cMenu^(0+256)
 11611     1373                     l5128:
 11612     1373  0021               	movlb	1	; select bank1
 11613     1374  01EF               	clrf	_op^(0+128)
 11614     1375  0AEF               	incf	_op^(0+128),f
 11615     1376  2B93               	goto	l5142
 11616     1377                     l5130:
 11617     1377  3008               	movlw	8
 11618     1378  0022               	movlb	2	; select bank2
 11619     1379  00B6               	movwf	_cMenu^(0+256)
 11620     137A  2B73               	goto	l5128
 11621     137B                     l5134:
 11622     137B  0022               	movlb	2	; select bank2
 11623     137C  01B6               	clrf	_cMenu^(0+256)
 11624     137D  2B73               	goto	l5128
 11625     137E                     l5140:
 11626     137E  0021               	movlb	1	; select bank1
 11627     137F  086F               	movf	_op^(0+128),w
 11628     1380  0020               	movlb	0	; select bank0
 11629     1381  00A1               	movwf	??_MenuMotores
 11630     1382  01A2               	clrf	??_MenuMotores+1
 11631                           
 11632                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11633                           ; Switch size 1, requested type "simple"
 11634                           ; Number of cases is 1, Range of values is 0 to 0
 11635                           ; switch strategies available:
 11636                           ; Name         Instructions Cycles
 11637                           ; simple_byte            4     3 (average)
 11638                           ; direct_byte            8     6 (fixed)
 11639                           ; jumptable            260     6 (fixed)
 11640                           ;	Chosen strategy is simple_byte
 11641     1383  0822               	movf	??_MenuMotores+1,w
 11642     1384  3A00               	xorlw	0	; case 0
 11643     1385  1903               	skipnz
 11644     1386  2B88               	goto	l5892
 11645     1387  2B93               	goto	l5142
 11646     1388                     l5892:
 11647                           
 11648                           ; Switch size 1, requested type "simple"
 11649                           ; Number of cases is 3, Range of values is 1 to 3
 11650                           ; switch strategies available:
 11651                           ; Name         Instructions Cycles
 11652                           ; simple_byte           10     6 (average)
 11653                           ; direct_byte           15     9 (fixed)
 11654                           ; jumptable            263     9 (fixed)
 11655                           ;	Chosen strategy is simple_byte
 11656     1388  0821               	movf	??_MenuMotores,w
 11657     1389  3A01               	xorlw	1	; case 1
 11658     138A  1903               	skipnz
 11659     138B  2B70               	goto	l5126
 11660     138C  3A03               	xorlw	3	; case 2
 11661     138D  1903               	skipnz
 11662     138E  2B77               	goto	l5130
 11663     138F  3A01               	xorlw	1	; case 3
 11664     1390  1903               	skipnz
 11665     1391  2B7B               	goto	l5134
 11666     1392  2B93               	goto	l5142
 11667     1393                     l5142:
 11668                           
 11669                           ;Menu.c: 228:         LCD_Cmd(1);
 11670     1393  3001               	movlw	1
 11671     1394  3199  21E1  3192   	fcall	_LCD_Cmd
 11672     1397                     l257:
 11673     1397  0008               	return
 11674     1398                     __end_of_MenuMotores:
 11675                           
 11676                           	psect	text33
 11677     08DD                     __ptext33:	
 11678 ;; *************** function _MenuMOTORB *****************
 11679 ;; Defined at:
 11680 ;;		line 481 in file "Menu.c"
 11681 ;; Parameters:    Size  Location     Type
 11682 ;;		None
 11683 ;; Auto vars:     Size  Location     Type
 11684 ;;		None
 11685 ;; Return value:  Size  Location     Type
 11686 ;;                  1    wreg      void 
 11687 ;; Registers used:
 11688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11689 ;; Tracked objects:
 11690 ;;		On entry : 0/0
 11691 ;;		On exit  : 0/0
 11692 ;;		Unchanged: 0/0
 11693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11696 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11697 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11698 ;;Total ram usage:        2 bytes
 11699 ;; Hardware stack levels used: 1
 11700 ;; Hardware stack levels required when called: 4
 11701 ;; This function calls:
 11702 ;;		_LCD_Cmd
 11703 ;;		_LCD_Write
 11704 ;;		_LCD_Write_Text
 11705 ;;		_MB_Off
 11706 ;;		_MB_TurnL
 11707 ;;		_MB_TurnR
 11708 ;; This function is called by:
 11709 ;;		_main
 11710 ;; This function uses a non-reentrant model
 11711 ;;
 11712                           
 11713     08DD                     _MenuMOTORB:	
 11714                           ;psect for function _MenuMOTORB
 11715                           
 11716     08DD                     l5352:	
 11717                           ;incstack = 0
 11718                           ; Regs used in _MenuMOTORB: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11719                           
 11720                           
 11721                           ;Menu.c: 483:     LCD_Write_Text(1,1,"     MENU MOTORB    ");
 11722     08DD  01FA               	clrf	LCD_Write_Text@col
 11723     08DE  0AFA               	incf	LCD_Write_Text@col,f
 11724     08DF  3011               	movlw	low (STR_33| (0+32768))
 11725     08E0  00FB               	movwf	LCD_Write_Text@text
 11726     08E1  30A1               	movlw	high (STR_33| (0+32768))
 11727     08E2  00FC               	movwf	LCD_Write_Text@text+1
 11728     08E3  3001               	movlw	1
 11729     08E4  3199  21FD  3188   	fcall	_LCD_Write_Text
 11730                           
 11731                           ;Menu.c: 484:     LCD_Write_Text(2,1,"1.TURNR    3.OFF    ");
 11732     08E7  01FA               	clrf	LCD_Write_Text@col
 11733     08E8  0AFA               	incf	LCD_Write_Text@col,f
 11734     08E9  3026               	movlw	low (STR_30| (0+32768))
 11735     08EA  00FB               	movwf	LCD_Write_Text@text
 11736     08EB  30A1               	movlw	high (STR_30| (0+32768))
 11737     08EC  00FC               	movwf	LCD_Write_Text@text+1
 11738     08ED  3002               	movlw	2
 11739     08EE  3199  21FD  3188   	fcall	_LCD_Write_Text
 11740                           
 11741                           ;Menu.c: 485:     LCD_Write_Text(3,1,"2.TURNL    4.BACK   ");
 11742     08F1  01FA               	clrf	LCD_Write_Text@col
 11743     08F2  0AFA               	incf	LCD_Write_Text@col,f
 11744     08F3  307A               	movlw	low (STR_31| (0+32768))
 11745     08F4  00FB               	movwf	LCD_Write_Text@text
 11746     08F5  30A1               	movlw	high (STR_31| (0+32768))
 11747     08F6  00FC               	movwf	LCD_Write_Text@text+1
 11748     08F7  3003               	movlw	3
 11749     08F8  3199  21FD  3188   	fcall	_LCD_Write_Text
 11750                           
 11751                           ;Menu.c: 486:     LCD_Write_Text(4,1,"OP:                 ");
 11752     08FB  01FA               	clrf	LCD_Write_Text@col
 11753     08FC  0AFA               	incf	LCD_Write_Text@col,f
 11754     08FD  3000               	movlw	low (STR_4| (0+32768))
 11755     08FE  00FB               	movwf	LCD_Write_Text@text
 11756     08FF  30A0               	movlw	high (STR_4| (0+32768))
 11757     0900  00FC               	movwf	LCD_Write_Text@text+1
 11758     0901  3004               	movlw	4
 11759     0902  3199  21FD  3188   	fcall	_LCD_Write_Text
 11760                           
 11761                           ;Menu.c: 488:     LCD_Write(4,4,op+48);
 11762     0905  3004               	movlw	4
 11763     0906  00FA               	movwf	LCD_Write@col
 11764     0907  0021               	movlb	1	; select bank1
 11765     0908  086F               	movf	_op^(0+128),w
 11766     0909  3E30               	addlw	48
 11767     090A  00FB               	movwf	LCD_Write@letra
 11768     090B  3004               	movlw	4
 11769     090C  3190  2001  3188   	fcall	_LCD_Write
 11770                           
 11771                           ;Menu.c: 490:     switch(op){
 11772     090F  2994               	goto	l5364
 11773     0910                     l5354:
 11774     0910  3008               	movlw	8
 11775     0911  00FA               	movwf	LCD_Write@col
 11776     0912  303C               	movlw	60
 11777     0913  00FB               	movwf	LCD_Write@letra
 11778     0914  3002               	movlw	2
 11779     0915  3190  2001  3188   	fcall	_LCD_Write
 11780                           
 11781                           ;Menu.c: 492:                 LCD_Write(3,8,' ');
 11782     0918  3008               	movlw	8
 11783     0919  00FA               	movwf	LCD_Write@col
 11784     091A  3020               	movlw	32
 11785     091B  00FB               	movwf	LCD_Write@letra
 11786     091C  3003               	movlw	3
 11787     091D  3190  2001  3188   	fcall	_LCD_Write
 11788                           
 11789                           ;Menu.c: 493:                 LCD_Write(2,17,' ');
 11790     0920  3011               	movlw	17
 11791     0921  00FA               	movwf	LCD_Write@col
 11792     0922  3020               	movlw	32
 11793     0923  00FB               	movwf	LCD_Write@letra
 11794     0924  3002               	movlw	2
 11795     0925  3190  2001  3188   	fcall	_LCD_Write
 11796                           
 11797                           ;Menu.c: 494:                 LCD_Write(3,18,' ');
 11798     0928  3012               	movlw	18
 11799     0929  00FA               	movwf	LCD_Write@col
 11800     092A  3020               	movlw	32
 11801     092B  00FB               	movwf	LCD_Write@letra
 11802     092C  3003               	movlw	3
 11803     092D  3190  2001  3188   	fcall	_LCD_Write
 11804                           
 11805                           ;Menu.c: 495:                 break;
 11806     0930  29AC               	goto	l401
 11807     0931                     l5356:
 11808     0931  3008               	movlw	8
 11809     0932  00FA               	movwf	LCD_Write@col
 11810     0933  3020               	movlw	32
 11811     0934  00FB               	movwf	LCD_Write@letra
 11812     0935  3002               	movlw	2
 11813     0936  3190  2001  3188   	fcall	_LCD_Write
 11814                           
 11815                           ;Menu.c: 497:                 LCD_Write(3,8,'<');
 11816     0939  3008               	movlw	8
 11817     093A  00FA               	movwf	LCD_Write@col
 11818     093B  303C               	movlw	60
 11819     093C  00FB               	movwf	LCD_Write@letra
 11820     093D  3003               	movlw	3
 11821     093E  3190  2001  3188   	fcall	_LCD_Write
 11822                           
 11823                           ;Menu.c: 498:                 LCD_Write(2,17,' ');
 11824     0941  3011               	movlw	17
 11825     0942  00FA               	movwf	LCD_Write@col
 11826     0943  3020               	movlw	32
 11827     0944  00FB               	movwf	LCD_Write@letra
 11828     0945  3002               	movlw	2
 11829     0946  3190  2001  3188   	fcall	_LCD_Write
 11830                           
 11831                           ;Menu.c: 499:                 LCD_Write(3,18,' ');
 11832     0949  3012               	movlw	18
 11833     094A  00FA               	movwf	LCD_Write@col
 11834     094B  3020               	movlw	32
 11835     094C  00FB               	movwf	LCD_Write@letra
 11836     094D  3003               	movlw	3
 11837     094E  3190  2001  3188   	fcall	_LCD_Write
 11838                           
 11839                           ;Menu.c: 500:                 break;
 11840     0951  29AC               	goto	l401
 11841     0952                     l5358:
 11842     0952  3008               	movlw	8
 11843     0953  00FA               	movwf	LCD_Write@col
 11844     0954  3020               	movlw	32
 11845     0955  00FB               	movwf	LCD_Write@letra
 11846     0956  3002               	movlw	2
 11847     0957  3190  2001  3188   	fcall	_LCD_Write
 11848                           
 11849                           ;Menu.c: 502:                 LCD_Write(3,8,' ');
 11850     095A  3008               	movlw	8
 11851     095B  00FA               	movwf	LCD_Write@col
 11852     095C  3020               	movlw	32
 11853     095D  00FB               	movwf	LCD_Write@letra
 11854     095E  3003               	movlw	3
 11855     095F  3190  2001  3188   	fcall	_LCD_Write
 11856                           
 11857                           ;Menu.c: 503:                 LCD_Write(2,17,'<');
 11858     0962  3011               	movlw	17
 11859     0963  00FA               	movwf	LCD_Write@col
 11860     0964  303C               	movlw	60
 11861     0965  00FB               	movwf	LCD_Write@letra
 11862     0966  3002               	movlw	2
 11863     0967  3190  2001  3188   	fcall	_LCD_Write
 11864                           
 11865                           ;Menu.c: 504:                 LCD_Write(3,18,' ');
 11866     096A  3012               	movlw	18
 11867     096B  00FA               	movwf	LCD_Write@col
 11868     096C  3020               	movlw	32
 11869     096D  00FB               	movwf	LCD_Write@letra
 11870     096E  3003               	movlw	3
 11871     096F  3190  2001  3188   	fcall	_LCD_Write
 11872                           
 11873                           ;Menu.c: 505:                 break;
 11874     0972  29AC               	goto	l401
 11875     0973                     l5360:
 11876     0973  3008               	movlw	8
 11877     0974  00FA               	movwf	LCD_Write@col
 11878     0975  3020               	movlw	32
 11879     0976  00FB               	movwf	LCD_Write@letra
 11880     0977  3002               	movlw	2
 11881     0978  3190  2001  3188   	fcall	_LCD_Write
 11882                           
 11883                           ;Menu.c: 507:                 LCD_Write(3,8,' ');
 11884     097B  3008               	movlw	8
 11885     097C  00FA               	movwf	LCD_Write@col
 11886     097D  3020               	movlw	32
 11887     097E  00FB               	movwf	LCD_Write@letra
 11888     097F  3003               	movlw	3
 11889     0980  3190  2001  3188   	fcall	_LCD_Write
 11890                           
 11891                           ;Menu.c: 508:                 LCD_Write(2,17,' ');
 11892     0983  3011               	movlw	17
 11893     0984  00FA               	movwf	LCD_Write@col
 11894     0985  3020               	movlw	32
 11895     0986  00FB               	movwf	LCD_Write@letra
 11896     0987  3002               	movlw	2
 11897     0988  3190  2001  3188   	fcall	_LCD_Write
 11898                           
 11899                           ;Menu.c: 509:                 LCD_Write(3,18,'<');
 11900     098B  3012               	movlw	18
 11901     098C  00FA               	movwf	LCD_Write@col
 11902     098D  303C               	movlw	60
 11903     098E  00FB               	movwf	LCD_Write@letra
 11904     098F  3003               	movlw	3
 11905     0990  3190  2001  3188   	fcall	_LCD_Write
 11906                           
 11907                           ;Menu.c: 510:                 break;
 11908     0993  29AC               	goto	l401
 11909     0994                     l5364:
 11910     0994  0021               	movlb	1	; select bank1
 11911     0995  086F               	movf	_op^(0+128),w
 11912     0996  0020               	movlb	0	; select bank0
 11913     0997  00A1               	movwf	??_MenuMOTORB
 11914     0998  01A2               	clrf	??_MenuMOTORB+1
 11915                           
 11916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11917                           ; Switch size 1, requested type "simple"
 11918                           ; Number of cases is 1, Range of values is 0 to 0
 11919                           ; switch strategies available:
 11920                           ; Name         Instructions Cycles
 11921                           ; simple_byte            4     3 (average)
 11922                           ; direct_byte            8     6 (fixed)
 11923                           ; jumptable            260     6 (fixed)
 11924                           ;	Chosen strategy is simple_byte
 11925     0999  0822               	movf	??_MenuMOTORB+1,w
 11926     099A  3A00               	xorlw	0	; case 0
 11927     099B  1903               	skipnz
 11928     099C  299E               	goto	l5894
 11929     099D  29AC               	goto	l401
 11930     099E                     l5894:
 11931                           
 11932                           ; Switch size 1, requested type "simple"
 11933                           ; Number of cases is 4, Range of values is 1 to 4
 11934                           ; switch strategies available:
 11935                           ; Name         Instructions Cycles
 11936                           ; simple_byte           13     7 (average)
 11937                           ; direct_byte           17     9 (fixed)
 11938                           ; jumptable            263     9 (fixed)
 11939                           ;	Chosen strategy is simple_byte
 11940     099E  0821               	movf	??_MenuMOTORB,w
 11941     099F  3A01               	xorlw	1	; case 1
 11942     09A0  1903               	skipnz
 11943     09A1  2910               	goto	l5354
 11944     09A2  3A03               	xorlw	3	; case 2
 11945     09A3  1903               	skipnz
 11946     09A4  2931               	goto	l5356
 11947     09A5  3A01               	xorlw	1	; case 3
 11948     09A6  1903               	skipnz
 11949     09A7  2952               	goto	l5358
 11950     09A8  3A07               	xorlw	7	; case 4
 11951     09A9  1903               	skipnz
 11952     09AA  2973               	goto	l5360
 11953     09AB  29AC               	goto	l401
 11954     09AC                     l401:
 11955                           
 11956                           ;Menu.c: 513:     if(PORTBbits.RB0 == 1){
 11957     09AC  0020               	movlb	0	; select bank0
 11958     09AD  1C0D               	btfss	13,0	;volatile
 11959     09AE  29B0               	goto	u5661
 11960     09AF  29B1               	goto	u5660
 11961     09B0                     u5661:
 11962     09B0  29C2               	goto	l405
 11963     09B1                     u5660:
 11964     09B1                     l406:
 11965     09B1  180D               	btfsc	13,0	;volatile
 11966     09B2  29B4               	goto	u5671
 11967     09B3  29B5               	goto	u5670
 11968     09B4                     u5671:
 11969     09B4  29B1               	goto	l406
 11970     09B5                     u5670:
 11971     09B5                     l5368:
 11972                           
 11973                           ;Menu.c: 515:         op++;
 11974     09B5  3001               	movlw	1
 11975     09B6  00A1               	movwf	??_MenuMOTORB
 11976     09B7  0821               	movf	??_MenuMOTORB,w
 11977     09B8  0021               	movlb	1	; select bank1
 11978     09B9  07EF               	addwf	_op^(0+128),f
 11979     09BA                     l5370:
 11980                           
 11981                           ;Menu.c: 516:         if(op>4)
 11982     09BA  3005               	movlw	5
 11983     09BB  026F               	subwf	_op^(0+128),w
 11984     09BC  1C03               	skipc
 11985     09BD  29BF               	goto	u5681
 11986     09BE  29C0               	goto	u5680
 11987     09BF                     u5681:
 11988     09BF  29C2               	goto	l405
 11989     09C0                     u5680:
 11990     09C0                     l5372:
 11991                           
 11992                           ;Menu.c: 517:             op=1;
 11993     09C0  01EF               	clrf	_op^(0+128)
 11994     09C1  0AEF               	incf	_op^(0+128),f
 11995     09C2                     l405:	
 11996                           ;Menu.c: 518:     }
 11997                           
 11998                           
 11999                           ;Menu.c: 519:     if(PORTBbits.RB1 == 1){
 12000     09C2  0020               	movlb	0	; select bank0
 12001     09C3  1C8D               	btfss	13,1	;volatile
 12002     09C4  29C6               	goto	u5691
 12003     09C5  29C7               	goto	u5690
 12004     09C6                     u5691:
 12005     09C6  29D5               	goto	l5380
 12006     09C7                     u5690:
 12007     09C7                     l411:
 12008     09C7  188D               	btfsc	13,1	;volatile
 12009     09C8  29CA               	goto	u5701
 12010     09C9  29CB               	goto	u5700
 12011     09CA                     u5701:
 12012     09CA  29C7               	goto	l411
 12013     09CB                     u5700:
 12014     09CB                     l5376:
 12015                           
 12016                           ;Menu.c: 521:         op--;
 12017     09CB  3001               	movlw	1
 12018     09CC  0021               	movlb	1	; select bank1
 12019     09CD  02EF               	subwf	_op^(0+128),f
 12020                           
 12021                           ;Menu.c: 522:         if(op<1)
 12022     09CE  086F               	movf	_op^(0+128),w
 12023     09CF  1D03               	btfss	3,2
 12024     09D0  29D2               	goto	u5711
 12025     09D1  29D3               	goto	u5710
 12026     09D2                     u5711:
 12027     09D2  29D5               	goto	l5380
 12028     09D3                     u5710:
 12029     09D3                     l5378:
 12030                           
 12031                           ;Menu.c: 523:             op=3;
 12032     09D3  3003               	movlw	3
 12033     09D4  00EF               	movwf	_op^(0+128)
 12034     09D5                     l5380:
 12035                           
 12036                           ;Menu.c: 525:     if(PORTBbits.RB2 == 1){
 12037     09D5  0020               	movlb	0	; select bank0
 12038     09D6  1D0D               	btfss	13,2	;volatile
 12039     09D7  29D9               	goto	u5721
 12040     09D8  29DA               	goto	u5720
 12041     09D9                     u5721:
 12042     09D9  2A0E               	goto	l425
 12043     09DA                     u5720:
 12044     09DA                     l416:
 12045     09DA  190D               	btfsc	13,2	;volatile
 12046     09DB  29DD               	goto	u5731
 12047     09DC  29DE               	goto	u5730
 12048     09DD                     u5731:
 12049     09DD  29DA               	goto	l416
 12050     09DE                     u5730:
 12051     09DE  29F6               	goto	l5398
 12052     09DF                     l5384:
 12053     09DF  3199  2188  3188   	fcall	_MB_TurnR
 12054     09E2  2A0E               	goto	l425
 12055     09E3                     l5386:
 12056     09E3  3199  2184  3188   	fcall	_MB_TurnL
 12057     09E6  2A0E               	goto	l425
 12058     09E7                     l5388:
 12059     09E7  3199  2180  3188   	fcall	_MB_Off
 12060     09EA  2A0E               	goto	l425
 12061     09EB                     l5390:
 12062     09EB  3003               	movlw	3
 12063     09EC  0022               	movlb	2	; select bank2
 12064     09ED  00B6               	movwf	_cMenu^(0+256)
 12065     09EE                     l5392:
 12066                           
 12067                           ;Menu.c: 532:                     op=1;
 12068     09EE  0021               	movlb	1	; select bank1
 12069     09EF  01EF               	clrf	_op^(0+128)
 12070     09F0  0AEF               	incf	_op^(0+128),f
 12071     09F1                     l5394:
 12072                           
 12073                           ;Menu.c: 533:                     LCD_Cmd(1);
 12074     09F1  3001               	movlw	1
 12075     09F2  3199  21E1  3188   	fcall	_LCD_Cmd
 12076                           
 12077                           ;Menu.c: 534:                     break;
 12078     09F5  2A0E               	goto	l425
 12079     09F6                     l5398:
 12080     09F6  0021               	movlb	1	; select bank1
 12081     09F7  086F               	movf	_op^(0+128),w
 12082     09F8  0020               	movlb	0	; select bank0
 12083     09F9  00A1               	movwf	??_MenuMOTORB
 12084     09FA  01A2               	clrf	??_MenuMOTORB+1
 12085                           
 12086                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12087                           ; Switch size 1, requested type "simple"
 12088                           ; Number of cases is 1, Range of values is 0 to 0
 12089                           ; switch strategies available:
 12090                           ; Name         Instructions Cycles
 12091                           ; simple_byte            4     3 (average)
 12092                           ; direct_byte            8     6 (fixed)
 12093                           ; jumptable            260     6 (fixed)
 12094                           ;	Chosen strategy is simple_byte
 12095     09FB  0822               	movf	??_MenuMOTORB+1,w
 12096     09FC  3A00               	xorlw	0	; case 0
 12097     09FD  1903               	skipnz
 12098     09FE  2A00               	goto	l5896
 12099     09FF  2A0E               	goto	l425
 12100     0A00                     l5896:
 12101                           
 12102                           ; Switch size 1, requested type "simple"
 12103                           ; Number of cases is 4, Range of values is 1 to 4
 12104                           ; switch strategies available:
 12105                           ; Name         Instructions Cycles
 12106                           ; simple_byte           13     7 (average)
 12107                           ; direct_byte           17     9 (fixed)
 12108                           ; jumptable            263     9 (fixed)
 12109                           ;	Chosen strategy is simple_byte
 12110     0A00  0821               	movf	??_MenuMOTORB,w
 12111     0A01  3A01               	xorlw	1	; case 1
 12112     0A02  1903               	skipnz
 12113     0A03  29DF               	goto	l5384
 12114     0A04  3A03               	xorlw	3	; case 2
 12115     0A05  1903               	skipnz
 12116     0A06  29E3               	goto	l5386
 12117     0A07  3A01               	xorlw	1	; case 3
 12118     0A08  1903               	skipnz
 12119     0A09  29E7               	goto	l5388
 12120     0A0A  3A07               	xorlw	7	; case 4
 12121     0A0B  1903               	skipnz
 12122     0A0C  29EB               	goto	l5390
 12123     0A0D  2A0E               	goto	l425
 12124     0A0E                     l425:
 12125     0A0E  0008               	return
 12126     0A0F                     __end_of_MenuMOTORB:
 12127                           
 12128                           	psect	text34
 12129     1988                     __ptext34:	
 12130 ;; *************** function _MB_TurnR *****************
 12131 ;; Defined at:
 12132 ;;		line 89 in file "Menu.c"
 12133 ;; Parameters:    Size  Location     Type
 12134 ;;		None
 12135 ;; Auto vars:     Size  Location     Type
 12136 ;;		None
 12137 ;; Return value:  Size  Location     Type
 12138 ;;                  1    wreg      void 
 12139 ;; Registers used:
 12140 ;;		None
 12141 ;; Tracked objects:
 12142 ;;		On entry : 0/0
 12143 ;;		On exit  : 0/0
 12144 ;;		Unchanged: 0/0
 12145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12150 ;;Total ram usage:        0 bytes
 12151 ;; Hardware stack levels used: 1
 12152 ;; This function calls:
 12153 ;;		Nothing
 12154 ;; This function is called by:
 12155 ;;		_MenuMOTORB
 12156 ;; This function uses a non-reentrant model
 12157 ;;
 12158                           
 12159     1988                     _MB_TurnR:	
 12160                           ;psect for function _MB_TurnR
 12161                           
 12162     1988                     l4824:	
 12163                           ;incstack = 0
 12164                           ; Regs used in _MB_TurnR: []
 12165                           
 12166                           
 12167                           ;Menu.c: 90:     LATBbits.LATB5 = 1;
 12168     1988  0022               	movlb	2	; select bank2
 12169     1989  168D               	bsf	13,5	;volatile
 12170                           
 12171                           ;Menu.c: 91:     LATBbits.LATB6 = 0;
 12172     198A  130D               	bcf	13,6	;volatile
 12173     198B                     l184:
 12174     198B  0008               	return
 12175     198C                     __end_of_MB_TurnR:
 12176                           
 12177                           	psect	text35
 12178     1984                     __ptext35:	
 12179 ;; *************** function _MB_TurnL *****************
 12180 ;; Defined at:
 12181 ;;		line 93 in file "Menu.c"
 12182 ;; Parameters:    Size  Location     Type
 12183 ;;		None
 12184 ;; Auto vars:     Size  Location     Type
 12185 ;;		None
 12186 ;; Return value:  Size  Location     Type
 12187 ;;                  1    wreg      void 
 12188 ;; Registers used:
 12189 ;;		None
 12190 ;; Tracked objects:
 12191 ;;		On entry : 0/0
 12192 ;;		On exit  : 0/0
 12193 ;;		Unchanged: 0/0
 12194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12199 ;;Total ram usage:        0 bytes
 12200 ;; Hardware stack levels used: 1
 12201 ;; This function calls:
 12202 ;;		Nothing
 12203 ;; This function is called by:
 12204 ;;		_MenuMOTORB
 12205 ;; This function uses a non-reentrant model
 12206 ;;
 12207                           
 12208     1984                     _MB_TurnL:	
 12209                           ;psect for function _MB_TurnL
 12210                           
 12211     1984                     l4826:	
 12212                           ;incstack = 0
 12213                           ; Regs used in _MB_TurnL: []
 12214                           
 12215                           
 12216                           ;Menu.c: 94:     LATBbits.LATB5 = 0;
 12217     1984  0022               	movlb	2	; select bank2
 12218     1985  128D               	bcf	13,5	;volatile
 12219                           
 12220                           ;Menu.c: 95:     LATBbits.LATB6 = 1;
 12221     1986  170D               	bsf	13,6	;volatile
 12222     1987                     l187:
 12223     1987  0008               	return
 12224     1988                     __end_of_MB_TurnL:
 12225                           
 12226                           	psect	text36
 12227     1980                     __ptext36:	
 12228 ;; *************** function _MB_Off *****************
 12229 ;; Defined at:
 12230 ;;		line 97 in file "Menu.c"
 12231 ;; Parameters:    Size  Location     Type
 12232 ;;		None
 12233 ;; Auto vars:     Size  Location     Type
 12234 ;;		None
 12235 ;; Return value:  Size  Location     Type
 12236 ;;                  1    wreg      void 
 12237 ;; Registers used:
 12238 ;;		None
 12239 ;; Tracked objects:
 12240 ;;		On entry : 0/0
 12241 ;;		On exit  : 0/0
 12242 ;;		Unchanged: 0/0
 12243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12248 ;;Total ram usage:        0 bytes
 12249 ;; Hardware stack levels used: 1
 12250 ;; This function calls:
 12251 ;;		Nothing
 12252 ;; This function is called by:
 12253 ;;		_MenuMOTORB
 12254 ;; This function uses a non-reentrant model
 12255 ;;
 12256                           
 12257     1980                     _MB_Off:	
 12258                           ;psect for function _MB_Off
 12259                           
 12260     1980                     l4828:	
 12261                           ;incstack = 0
 12262                           ; Regs used in _MB_Off: []
 12263                           
 12264                           
 12265                           ;Menu.c: 98:    LATBbits.LATB5 = 0;
 12266     1980  0022               	movlb	2	; select bank2
 12267     1981  128D               	bcf	13,5	;volatile
 12268                           
 12269                           ;Menu.c: 99:    LATBbits.LATB6 = 0;
 12270     1982  130D               	bcf	13,6	;volatile
 12271     1983                     l190:
 12272     1983  0008               	return
 12273     1984                     __end_of_MB_Off:
 12274                           
 12275                           	psect	text37
 12276     16CE                     __ptext37:	
 12277 ;; *************** function _MenuMOTORA *****************
 12278 ;; Defined at:
 12279 ;;		line 422 in file "Menu.c"
 12280 ;; Parameters:    Size  Location     Type
 12281 ;;		None
 12282 ;; Auto vars:     Size  Location     Type
 12283 ;;		None
 12284 ;; Return value:  Size  Location     Type
 12285 ;;                  1    wreg      void 
 12286 ;; Registers used:
 12287 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12288 ;; Tracked objects:
 12289 ;;		On entry : 0/0
 12290 ;;		On exit  : 0/0
 12291 ;;		Unchanged: 0/0
 12292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12295 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12296 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12297 ;;Total ram usage:        2 bytes
 12298 ;; Hardware stack levels used: 1
 12299 ;; Hardware stack levels required when called: 4
 12300 ;; This function calls:
 12301 ;;		_LCD_Cmd
 12302 ;;		_LCD_Write
 12303 ;;		_LCD_Write_Text
 12304 ;;		_MA_Off
 12305 ;;		_MA_TurnL
 12306 ;;		_MA_TurnR
 12307 ;; This function is called by:
 12308 ;;		_main
 12309 ;; This function uses a non-reentrant model
 12310 ;;
 12311                           
 12312     16CE                     _MenuMOTORA:	
 12313                           ;psect for function _MenuMOTORA
 12314                           
 12315     16CE                     l5296:	
 12316                           ;incstack = 0
 12317                           ; Regs used in _MenuMOTORA: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12318                           
 12319                           
 12320                           ;Menu.c: 424:     LCD_Write_Text(1,1,"     MENU MOTORA    ");
 12321     16CE  01FA               	clrf	LCD_Write_Text@col
 12322     16CF  0AFA               	incf	LCD_Write_Text@col,f
 12323     16D0  30FC               	movlw	low (STR_29| (0+32768))
 12324     16D1  00FB               	movwf	LCD_Write_Text@text
 12325     16D2  30A0               	movlw	high (STR_29| (0+32768))
 12326     16D3  00FC               	movwf	LCD_Write_Text@text+1
 12327     16D4  3001               	movlw	1
 12328     16D5  3199  21FD  3196   	fcall	_LCD_Write_Text
 12329                           
 12330                           ;Menu.c: 425:     LCD_Write_Text(2,1,"1.TURNR    3.OFF    ");
 12331     16D8  01FA               	clrf	LCD_Write_Text@col
 12332     16D9  0AFA               	incf	LCD_Write_Text@col,f
 12333     16DA  3026               	movlw	low (STR_30| (0+32768))
 12334     16DB  00FB               	movwf	LCD_Write_Text@text
 12335     16DC  30A1               	movlw	high (STR_30| (0+32768))
 12336     16DD  00FC               	movwf	LCD_Write_Text@text+1
 12337     16DE  3002               	movlw	2
 12338     16DF  3199  21FD  3196   	fcall	_LCD_Write_Text
 12339                           
 12340                           ;Menu.c: 426:     LCD_Write_Text(3,1,"2.TURNL    4.BACK   ");
 12341     16E2  01FA               	clrf	LCD_Write_Text@col
 12342     16E3  0AFA               	incf	LCD_Write_Text@col,f
 12343     16E4  307A               	movlw	low (STR_31| (0+32768))
 12344     16E5  00FB               	movwf	LCD_Write_Text@text
 12345     16E6  30A1               	movlw	high (STR_31| (0+32768))
 12346     16E7  00FC               	movwf	LCD_Write_Text@text+1
 12347     16E8  3003               	movlw	3
 12348     16E9  3199  21FD  3196   	fcall	_LCD_Write_Text
 12349                           
 12350                           ;Menu.c: 427:     LCD_Write_Text(4,1,"OP:                 ");
 12351     16EC  01FA               	clrf	LCD_Write_Text@col
 12352     16ED  0AFA               	incf	LCD_Write_Text@col,f
 12353     16EE  3000               	movlw	low (STR_4| (0+32768))
 12354     16EF  00FB               	movwf	LCD_Write_Text@text
 12355     16F0  30A0               	movlw	high (STR_4| (0+32768))
 12356     16F1  00FC               	movwf	LCD_Write_Text@text+1
 12357     16F2  3004               	movlw	4
 12358     16F3  3199  21FD  3196   	fcall	_LCD_Write_Text
 12359                           
 12360                           ;Menu.c: 429:     LCD_Write(4,4,op+48);
 12361     16F6  3004               	movlw	4
 12362     16F7  00FA               	movwf	LCD_Write@col
 12363     16F8  0021               	movlb	1	; select bank1
 12364     16F9  086F               	movf	_op^(0+128),w
 12365     16FA  3E30               	addlw	48
 12366     16FB  00FB               	movwf	LCD_Write@letra
 12367     16FC  3004               	movlw	4
 12368     16FD  3190  2001  3196   	fcall	_LCD_Write
 12369                           
 12370                           ;Menu.c: 431:     switch(op){
 12371     1700  2F85               	goto	l5308
 12372     1701                     l5298:
 12373     1701  3008               	movlw	8
 12374     1702  00FA               	movwf	LCD_Write@col
 12375     1703  303C               	movlw	60
 12376     1704  00FB               	movwf	LCD_Write@letra
 12377     1705  3002               	movlw	2
 12378     1706  3190  2001  3196   	fcall	_LCD_Write
 12379                           
 12380                           ;Menu.c: 433:                 LCD_Write(3,8,' ');
 12381     1709  3008               	movlw	8
 12382     170A  00FA               	movwf	LCD_Write@col
 12383     170B  3020               	movlw	32
 12384     170C  00FB               	movwf	LCD_Write@letra
 12385     170D  3003               	movlw	3
 12386     170E  3190  2001  3196   	fcall	_LCD_Write
 12387                           
 12388                           ;Menu.c: 434:                 LCD_Write(2,17,' ');
 12389     1711  3011               	movlw	17
 12390     1712  00FA               	movwf	LCD_Write@col
 12391     1713  3020               	movlw	32
 12392     1714  00FB               	movwf	LCD_Write@letra
 12393     1715  3002               	movlw	2
 12394     1716  3190  2001  3196   	fcall	_LCD_Write
 12395                           
 12396                           ;Menu.c: 435:                 LCD_Write(3,18,' ');
 12397     1719  3012               	movlw	18
 12398     171A  00FA               	movwf	LCD_Write@col
 12399     171B  3020               	movlw	32
 12400     171C  00FB               	movwf	LCD_Write@letra
 12401     171D  3003               	movlw	3
 12402     171E  3190  2001  3196   	fcall	_LCD_Write
 12403                           
 12404                           ;Menu.c: 436:                 break;
 12405     1721  2F9D               	goto	l372
 12406     1722                     l5300:
 12407     1722  3008               	movlw	8
 12408     1723  00FA               	movwf	LCD_Write@col
 12409     1724  3020               	movlw	32
 12410     1725  00FB               	movwf	LCD_Write@letra
 12411     1726  3002               	movlw	2
 12412     1727  3190  2001  3196   	fcall	_LCD_Write
 12413                           
 12414                           ;Menu.c: 438:                 LCD_Write(3,8,'<');
 12415     172A  3008               	movlw	8
 12416     172B  00FA               	movwf	LCD_Write@col
 12417     172C  303C               	movlw	60
 12418     172D  00FB               	movwf	LCD_Write@letra
 12419     172E  3003               	movlw	3
 12420     172F  3190  2001  3196   	fcall	_LCD_Write
 12421                           
 12422                           ;Menu.c: 439:                 LCD_Write(2,17,' ');
 12423     1732  3011               	movlw	17
 12424     1733  00FA               	movwf	LCD_Write@col
 12425     1734  3020               	movlw	32
 12426     1735  00FB               	movwf	LCD_Write@letra
 12427     1736  3002               	movlw	2
 12428     1737  3190  2001  3196   	fcall	_LCD_Write
 12429                           
 12430                           ;Menu.c: 440:                 LCD_Write(3,18,' ');
 12431     173A  3012               	movlw	18
 12432     173B  00FA               	movwf	LCD_Write@col
 12433     173C  3020               	movlw	32
 12434     173D  00FB               	movwf	LCD_Write@letra
 12435     173E  3003               	movlw	3
 12436     173F  3190  2001  3196   	fcall	_LCD_Write
 12437                           
 12438                           ;Menu.c: 441:                 break;
 12439     1742  2F9D               	goto	l372
 12440     1743                     l5302:
 12441     1743  3008               	movlw	8
 12442     1744  00FA               	movwf	LCD_Write@col
 12443     1745  3020               	movlw	32
 12444     1746  00FB               	movwf	LCD_Write@letra
 12445     1747  3002               	movlw	2
 12446     1748  3190  2001  3196   	fcall	_LCD_Write
 12447                           
 12448                           ;Menu.c: 443:                 LCD_Write(3,8,' ');
 12449     174B  3008               	movlw	8
 12450     174C  00FA               	movwf	LCD_Write@col
 12451     174D  3020               	movlw	32
 12452     174E  00FB               	movwf	LCD_Write@letra
 12453     174F  3003               	movlw	3
 12454     1750  3190  2001  3196   	fcall	_LCD_Write
 12455                           
 12456                           ;Menu.c: 444:                 LCD_Write(2,17,'<');
 12457     1753  3011               	movlw	17
 12458     1754  00FA               	movwf	LCD_Write@col
 12459     1755  303C               	movlw	60
 12460     1756  00FB               	movwf	LCD_Write@letra
 12461     1757  3002               	movlw	2
 12462     1758  3190  2001  3196   	fcall	_LCD_Write
 12463                           
 12464                           ;Menu.c: 445:                 LCD_Write(3,18,' ');
 12465     175B  3012               	movlw	18
 12466     175C  00FA               	movwf	LCD_Write@col
 12467     175D  3020               	movlw	32
 12468     175E  00FB               	movwf	LCD_Write@letra
 12469     175F  3003               	movlw	3
 12470     1760  3190  2001  3196   	fcall	_LCD_Write
 12471                           
 12472                           ;Menu.c: 446:                 break;
 12473     1763  2F9D               	goto	l372
 12474     1764                     l5304:
 12475     1764  3008               	movlw	8
 12476     1765  00FA               	movwf	LCD_Write@col
 12477     1766  3020               	movlw	32
 12478     1767  00FB               	movwf	LCD_Write@letra
 12479     1768  3002               	movlw	2
 12480     1769  3190  2001  3196   	fcall	_LCD_Write
 12481                           
 12482                           ;Menu.c: 448:                 LCD_Write(3,8,' ');
 12483     176C  3008               	movlw	8
 12484     176D  00FA               	movwf	LCD_Write@col
 12485     176E  3020               	movlw	32
 12486     176F  00FB               	movwf	LCD_Write@letra
 12487     1770  3003               	movlw	3
 12488     1771  3190  2001  3196   	fcall	_LCD_Write
 12489                           
 12490                           ;Menu.c: 449:                 LCD_Write(2,17,' ');
 12491     1774  3011               	movlw	17
 12492     1775  00FA               	movwf	LCD_Write@col
 12493     1776  3020               	movlw	32
 12494     1777  00FB               	movwf	LCD_Write@letra
 12495     1778  3002               	movlw	2
 12496     1779  3190  2001  3196   	fcall	_LCD_Write
 12497                           
 12498                           ;Menu.c: 450:                 LCD_Write(3,18,'<');
 12499     177C  3012               	movlw	18
 12500     177D  00FA               	movwf	LCD_Write@col
 12501     177E  303C               	movlw	60
 12502     177F  00FB               	movwf	LCD_Write@letra
 12503     1780  3003               	movlw	3
 12504     1781  3190  2001  3196   	fcall	_LCD_Write
 12505                           
 12506                           ;Menu.c: 451:                 break;
 12507     1784  2F9D               	goto	l372
 12508     1785                     l5308:
 12509     1785  0021               	movlb	1	; select bank1
 12510     1786  086F               	movf	_op^(0+128),w
 12511     1787  0020               	movlb	0	; select bank0
 12512     1788  00A1               	movwf	??_MenuMOTORA
 12513     1789  01A2               	clrf	??_MenuMOTORA+1
 12514                           
 12515                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12516                           ; Switch size 1, requested type "simple"
 12517                           ; Number of cases is 1, Range of values is 0 to 0
 12518                           ; switch strategies available:
 12519                           ; Name         Instructions Cycles
 12520                           ; simple_byte            4     3 (average)
 12521                           ; direct_byte            8     6 (fixed)
 12522                           ; jumptable            260     6 (fixed)
 12523                           ;	Chosen strategy is simple_byte
 12524     178A  0822               	movf	??_MenuMOTORA+1,w
 12525     178B  3A00               	xorlw	0	; case 0
 12526     178C  1903               	skipnz
 12527     178D  2F8F               	goto	l5898
 12528     178E  2F9D               	goto	l372
 12529     178F                     l5898:
 12530                           
 12531                           ; Switch size 1, requested type "simple"
 12532                           ; Number of cases is 4, Range of values is 1 to 4
 12533                           ; switch strategies available:
 12534                           ; Name         Instructions Cycles
 12535                           ; simple_byte           13     7 (average)
 12536                           ; direct_byte           17     9 (fixed)
 12537                           ; jumptable            263     9 (fixed)
 12538                           ;	Chosen strategy is simple_byte
 12539     178F  0821               	movf	??_MenuMOTORA,w
 12540     1790  3A01               	xorlw	1	; case 1
 12541     1791  1903               	skipnz
 12542     1792  2F01               	goto	l5298
 12543     1793  3A03               	xorlw	3	; case 2
 12544     1794  1903               	skipnz
 12545     1795  2F22               	goto	l5300
 12546     1796  3A01               	xorlw	1	; case 3
 12547     1797  1903               	skipnz
 12548     1798  2F43               	goto	l5302
 12549     1799  3A07               	xorlw	7	; case 4
 12550     179A  1903               	skipnz
 12551     179B  2F64               	goto	l5304
 12552     179C  2F9D               	goto	l372
 12553     179D                     l372:
 12554                           
 12555                           ;Menu.c: 454:     if(PORTBbits.RB0 == 1){
 12556     179D  0020               	movlb	0	; select bank0
 12557     179E  1C0D               	btfss	13,0	;volatile
 12558     179F  2FA1               	goto	u5581
 12559     17A0  2FA2               	goto	u5580
 12560     17A1                     u5581:
 12561     17A1  2FB3               	goto	l376
 12562     17A2                     u5580:
 12563     17A2                     l377:
 12564     17A2  180D               	btfsc	13,0	;volatile
 12565     17A3  2FA5               	goto	u5591
 12566     17A4  2FA6               	goto	u5590
 12567     17A5                     u5591:
 12568     17A5  2FA2               	goto	l377
 12569     17A6                     u5590:
 12570     17A6                     l5312:
 12571                           
 12572                           ;Menu.c: 456:         op++;
 12573     17A6  3001               	movlw	1
 12574     17A7  00A1               	movwf	??_MenuMOTORA
 12575     17A8  0821               	movf	??_MenuMOTORA,w
 12576     17A9  0021               	movlb	1	; select bank1
 12577     17AA  07EF               	addwf	_op^(0+128),f
 12578     17AB                     l5314:
 12579                           
 12580                           ;Menu.c: 457:         if(op>4)
 12581     17AB  3005               	movlw	5
 12582     17AC  026F               	subwf	_op^(0+128),w
 12583     17AD  1C03               	skipc
 12584     17AE  2FB0               	goto	u5601
 12585     17AF  2FB1               	goto	u5600
 12586     17B0                     u5601:
 12587     17B0  2FB3               	goto	l376
 12588     17B1                     u5600:
 12589     17B1                     l5316:
 12590                           
 12591                           ;Menu.c: 458:             op=1;
 12592     17B1  01EF               	clrf	_op^(0+128)
 12593     17B2  0AEF               	incf	_op^(0+128),f
 12594     17B3                     l376:	
 12595                           ;Menu.c: 459:     }
 12596                           
 12597                           
 12598                           ;Menu.c: 460:     if(PORTBbits.RB1 == 1){
 12599     17B3  0020               	movlb	0	; select bank0
 12600     17B4  1C8D               	btfss	13,1	;volatile
 12601     17B5  2FB7               	goto	u5611
 12602     17B6  2FB8               	goto	u5610
 12603     17B7                     u5611:
 12604     17B7  2FC6               	goto	l5324
 12605     17B8                     u5610:
 12606     17B8                     l382:
 12607     17B8  188D               	btfsc	13,1	;volatile
 12608     17B9  2FBB               	goto	u5621
 12609     17BA  2FBC               	goto	u5620
 12610     17BB                     u5621:
 12611     17BB  2FB8               	goto	l382
 12612     17BC                     u5620:
 12613     17BC                     l5320:
 12614                           
 12615                           ;Menu.c: 462:         op--;
 12616     17BC  3001               	movlw	1
 12617     17BD  0021               	movlb	1	; select bank1
 12618     17BE  02EF               	subwf	_op^(0+128),f
 12619                           
 12620                           ;Menu.c: 463:         if(op<1)
 12621     17BF  086F               	movf	_op^(0+128),w
 12622     17C0  1D03               	btfss	3,2
 12623     17C1  2FC3               	goto	u5631
 12624     17C2  2FC4               	goto	u5630
 12625     17C3                     u5631:
 12626     17C3  2FC6               	goto	l5324
 12627     17C4                     u5630:
 12628     17C4                     l5322:
 12629                           
 12630                           ;Menu.c: 464:             op=3;
 12631     17C4  3003               	movlw	3
 12632     17C5  00EF               	movwf	_op^(0+128)
 12633     17C6                     l5324:
 12634                           
 12635                           ;Menu.c: 466:     if(PORTBbits.RB2 == 1){
 12636     17C6  0020               	movlb	0	; select bank0
 12637     17C7  1D0D               	btfss	13,2	;volatile
 12638     17C8  2FCA               	goto	u5641
 12639     17C9  2FCB               	goto	u5640
 12640     17CA                     u5641:
 12641     17CA  2FFF               	goto	l396
 12642     17CB                     u5640:
 12643     17CB                     l387:
 12644     17CB  190D               	btfsc	13,2	;volatile
 12645     17CC  2FCE               	goto	u5651
 12646     17CD  2FCF               	goto	u5650
 12647     17CE                     u5651:
 12648     17CE  2FCB               	goto	l387
 12649     17CF                     u5650:
 12650     17CF  2FE7               	goto	l5342
 12651     17D0                     l5328:
 12652     17D0  3199  217C  3196   	fcall	_MA_TurnR
 12653     17D3  2FFF               	goto	l396
 12654     17D4                     l5330:
 12655     17D4  3199  2178  3196   	fcall	_MA_TurnL
 12656     17D7  2FFF               	goto	l396
 12657     17D8                     l5332:
 12658     17D8  3199  2174  3196   	fcall	_MA_Off
 12659     17DB  2FFF               	goto	l396
 12660     17DC                     l5334:
 12661     17DC  3003               	movlw	3
 12662     17DD  0022               	movlb	2	; select bank2
 12663     17DE  00B6               	movwf	_cMenu^(0+256)
 12664     17DF                     l5336:
 12665                           
 12666                           ;Menu.c: 473:                     op=1;
 12667     17DF  0021               	movlb	1	; select bank1
 12668     17E0  01EF               	clrf	_op^(0+128)
 12669     17E1  0AEF               	incf	_op^(0+128),f
 12670     17E2                     l5338:
 12671                           
 12672                           ;Menu.c: 474:                     LCD_Cmd(1);
 12673     17E2  3001               	movlw	1
 12674     17E3  3199  21E1  3196   	fcall	_LCD_Cmd
 12675                           
 12676                           ;Menu.c: 475:                     break;
 12677     17E6  2FFF               	goto	l396
 12678     17E7                     l5342:
 12679     17E7  0021               	movlb	1	; select bank1
 12680     17E8  086F               	movf	_op^(0+128),w
 12681     17E9  0020               	movlb	0	; select bank0
 12682     17EA  00A1               	movwf	??_MenuMOTORA
 12683     17EB  01A2               	clrf	??_MenuMOTORA+1
 12684                           
 12685                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12686                           ; Switch size 1, requested type "simple"
 12687                           ; Number of cases is 1, Range of values is 0 to 0
 12688                           ; switch strategies available:
 12689                           ; Name         Instructions Cycles
 12690                           ; simple_byte            4     3 (average)
 12691                           ; direct_byte            8     6 (fixed)
 12692                           ; jumptable            260     6 (fixed)
 12693                           ;	Chosen strategy is simple_byte
 12694     17EC  0822               	movf	??_MenuMOTORA+1,w
 12695     17ED  3A00               	xorlw	0	; case 0
 12696     17EE  1903               	skipnz
 12697     17EF  2FF1               	goto	l5900
 12698     17F0  2FFF               	goto	l396
 12699     17F1                     l5900:
 12700                           
 12701                           ; Switch size 1, requested type "simple"
 12702                           ; Number of cases is 4, Range of values is 1 to 4
 12703                           ; switch strategies available:
 12704                           ; Name         Instructions Cycles
 12705                           ; simple_byte           13     7 (average)
 12706                           ; direct_byte           17     9 (fixed)
 12707                           ; jumptable            263     9 (fixed)
 12708                           ;	Chosen strategy is simple_byte
 12709     17F1  0821               	movf	??_MenuMOTORA,w
 12710     17F2  3A01               	xorlw	1	; case 1
 12711     17F3  1903               	skipnz
 12712     17F4  2FD0               	goto	l5328
 12713     17F5  3A03               	xorlw	3	; case 2
 12714     17F6  1903               	skipnz
 12715     17F7  2FD4               	goto	l5330
 12716     17F8  3A01               	xorlw	1	; case 3
 12717     17F9  1903               	skipnz
 12718     17FA  2FD8               	goto	l5332
 12719     17FB  3A07               	xorlw	7	; case 4
 12720     17FC  1903               	skipnz
 12721     17FD  2FDC               	goto	l5334
 12722     17FE  2FFF               	goto	l396
 12723     17FF                     l396:
 12724     17FF  0008               	return
 12725     1800                     __end_of_MenuMOTORA:
 12726                           
 12727                           	psect	text38
 12728     197C                     __ptext38:	
 12729 ;; *************** function _MA_TurnR *****************
 12730 ;; Defined at:
 12731 ;;		line 77 in file "Menu.c"
 12732 ;; Parameters:    Size  Location     Type
 12733 ;;		None
 12734 ;; Auto vars:     Size  Location     Type
 12735 ;;		None
 12736 ;; Return value:  Size  Location     Type
 12737 ;;                  1    wreg      void 
 12738 ;; Registers used:
 12739 ;;		None
 12740 ;; Tracked objects:
 12741 ;;		On entry : 0/0
 12742 ;;		On exit  : 0/0
 12743 ;;		Unchanged: 0/0
 12744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12749 ;;Total ram usage:        0 bytes
 12750 ;; Hardware stack levels used: 1
 12751 ;; This function calls:
 12752 ;;		Nothing
 12753 ;; This function is called by:
 12754 ;;		_MenuMOTORA
 12755 ;; This function uses a non-reentrant model
 12756 ;;
 12757                           
 12758     197C                     _MA_TurnR:	
 12759                           ;psect for function _MA_TurnR
 12760                           
 12761     197C                     l4818:	
 12762                           ;incstack = 0
 12763                           ; Regs used in _MA_TurnR: []
 12764                           
 12765                           
 12766                           ;Menu.c: 78:     LATBbits.LATB3 = 1;
 12767     197C  0022               	movlb	2	; select bank2
 12768     197D  158D               	bsf	13,3	;volatile
 12769                           
 12770                           ;Menu.c: 79:     LATBbits.LATB4 = 0;
 12771     197E  120D               	bcf	13,4	;volatile
 12772     197F                     l175:
 12773     197F  0008               	return
 12774     1980                     __end_of_MA_TurnR:
 12775                           
 12776                           	psect	text39
 12777     1978                     __ptext39:	
 12778 ;; *************** function _MA_TurnL *****************
 12779 ;; Defined at:
 12780 ;;		line 81 in file "Menu.c"
 12781 ;; Parameters:    Size  Location     Type
 12782 ;;		None
 12783 ;; Auto vars:     Size  Location     Type
 12784 ;;		None
 12785 ;; Return value:  Size  Location     Type
 12786 ;;                  1    wreg      void 
 12787 ;; Registers used:
 12788 ;;		None
 12789 ;; Tracked objects:
 12790 ;;		On entry : 0/0
 12791 ;;		On exit  : 0/0
 12792 ;;		Unchanged: 0/0
 12793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12798 ;;Total ram usage:        0 bytes
 12799 ;; Hardware stack levels used: 1
 12800 ;; This function calls:
 12801 ;;		Nothing
 12802 ;; This function is called by:
 12803 ;;		_MenuMOTORA
 12804 ;; This function uses a non-reentrant model
 12805 ;;
 12806                           
 12807     1978                     _MA_TurnL:	
 12808                           ;psect for function _MA_TurnL
 12809                           
 12810     1978                     l4820:	
 12811                           ;incstack = 0
 12812                           ; Regs used in _MA_TurnL: []
 12813                           
 12814                           
 12815                           ;Menu.c: 82:     LATBbits.LATB3 = 0;
 12816     1978  0022               	movlb	2	; select bank2
 12817     1979  118D               	bcf	13,3	;volatile
 12818                           
 12819                           ;Menu.c: 83:     LATBbits.LATB4 = 1;
 12820     197A  160D               	bsf	13,4	;volatile
 12821     197B                     l178:
 12822     197B  0008               	return
 12823     197C                     __end_of_MA_TurnL:
 12824                           
 12825                           	psect	text40
 12826     1974                     __ptext40:	
 12827 ;; *************** function _MA_Off *****************
 12828 ;; Defined at:
 12829 ;;		line 85 in file "Menu.c"
 12830 ;; Parameters:    Size  Location     Type
 12831 ;;		None
 12832 ;; Auto vars:     Size  Location     Type
 12833 ;;		None
 12834 ;; Return value:  Size  Location     Type
 12835 ;;                  1    wreg      void 
 12836 ;; Registers used:
 12837 ;;		None
 12838 ;; Tracked objects:
 12839 ;;		On entry : 0/0
 12840 ;;		On exit  : 0/0
 12841 ;;		Unchanged: 0/0
 12842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12847 ;;Total ram usage:        0 bytes
 12848 ;; Hardware stack levels used: 1
 12849 ;; This function calls:
 12850 ;;		Nothing
 12851 ;; This function is called by:
 12852 ;;		_MenuMOTORA
 12853 ;; This function uses a non-reentrant model
 12854 ;;
 12855                           
 12856     1974                     _MA_Off:	
 12857                           ;psect for function _MA_Off
 12858                           
 12859     1974                     l4822:	
 12860                           ;incstack = 0
 12861                           ; Regs used in _MA_Off: []
 12862                           
 12863                           
 12864                           ;Menu.c: 86:     LATBbits.LATB3 = 0;
 12865     1974  0022               	movlb	2	; select bank2
 12866     1975  118D               	bcf	13,3	;volatile
 12867                           
 12868                           ;Menu.c: 87:     LATBbits.LATB4 = 0;
 12869     1976  120D               	bcf	13,4	;volatile
 12870     1977                     l181:
 12871     1977  0008               	return
 12872     1978                     __end_of_MA_Off:
 12873                           
 12874                           	psect	text41
 12875     159D                     __ptext41:	
 12876 ;; *************** function _MenuLeds *****************
 12877 ;; Defined at:
 12878 ;;		line 232 in file "Menu.c"
 12879 ;; Parameters:    Size  Location     Type
 12880 ;;		None
 12881 ;; Auto vars:     Size  Location     Type
 12882 ;;		None
 12883 ;; Return value:  Size  Location     Type
 12884 ;;                  1    wreg      void 
 12885 ;; Registers used:
 12886 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12887 ;; Tracked objects:
 12888 ;;		On entry : 0/0
 12889 ;;		On exit  : 0/0
 12890 ;;		Unchanged: 0/0
 12891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12894 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12895 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12896 ;;Total ram usage:        2 bytes
 12897 ;; Hardware stack levels used: 1
 12898 ;; Hardware stack levels required when called: 4
 12899 ;; This function calls:
 12900 ;;		_LCD_Cmd
 12901 ;;		_LCD_Write
 12902 ;;		_LCD_Write_Text
 12903 ;; This function is called by:
 12904 ;;		_main
 12905 ;; This function uses a non-reentrant model
 12906 ;;
 12907                           
 12908     159D                     _MenuLeds:	
 12909                           ;psect for function _MenuLeds
 12910                           
 12911     159D                     l5034:	
 12912                           ;incstack = 0
 12913                           ; Regs used in _MenuLeds: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12914                           
 12915                           
 12916                           ;Menu.c: 234:     LCD_Write_Text(1,1,"       MENU LEDS    ");
 12917     159D  01FA               	clrf	LCD_Write_Text@col
 12918     159E  0AFA               	incf	LCD_Write_Text@col,f
 12919     159F  3050               	movlw	low (STR_13| (0+32768))
 12920     15A0  00FB               	movwf	LCD_Write_Text@text
 12921     15A1  30A1               	movlw	high (STR_13| (0+32768))
 12922     15A2  00FC               	movwf	LCD_Write_Text@text+1
 12923     15A3  3001               	movlw	1
 12924     15A4  3199  21FD  3195   	fcall	_LCD_Write_Text
 12925                           
 12926                           ;Menu.c: 235:     LCD_Write_Text(2,1,"1.L1    3.L3        ");
 12927     15A7  01FA               	clrf	LCD_Write_Text@col
 12928     15A8  0AFA               	incf	LCD_Write_Text@col,f
 12929     15A9  3069               	movlw	low (STR_14| (0+32768))
 12930     15AA  00FB               	movwf	LCD_Write_Text@text
 12931     15AB  30A0               	movlw	high (STR_14| (0+32768))
 12932     15AC  00FC               	movwf	LCD_Write_Text@text+1
 12933     15AD  3002               	movlw	2
 12934     15AE  3199  21FD  3195   	fcall	_LCD_Write_Text
 12935                           
 12936                           ;Menu.c: 236:     LCD_Write_Text(3,1,"2.L2    4.BACK      ");
 12937     15B1  01FA               	clrf	LCD_Write_Text@col
 12938     15B2  0AFA               	incf	LCD_Write_Text@col,f
 12939     15B3  3093               	movlw	low (STR_15| (0+32768))
 12940     15B4  00FB               	movwf	LCD_Write_Text@text
 12941     15B5  30A0               	movlw	high (STR_15| (0+32768))
 12942     15B6  00FC               	movwf	LCD_Write_Text@text+1
 12943     15B7  3003               	movlw	3
 12944     15B8  3199  21FD  3195   	fcall	_LCD_Write_Text
 12945                           
 12946                           ;Menu.c: 237:     LCD_Write_Text(4,1,"OP:                 ");
 12947     15BB  01FA               	clrf	LCD_Write_Text@col
 12948     15BC  0AFA               	incf	LCD_Write_Text@col,f
 12949     15BD  3000               	movlw	low (STR_4| (0+32768))
 12950     15BE  00FB               	movwf	LCD_Write_Text@text
 12951     15BF  30A0               	movlw	high (STR_4| (0+32768))
 12952     15C0  00FC               	movwf	LCD_Write_Text@text+1
 12953     15C1  3004               	movlw	4
 12954     15C2  3199  21FD  3195   	fcall	_LCD_Write_Text
 12955                           
 12956                           ;Menu.c: 238:     LCD_Write(4,4,op+48);
 12957     15C5  3004               	movlw	4
 12958     15C6  00FA               	movwf	LCD_Write@col
 12959     15C7  0021               	movlb	1	; select bank1
 12960     15C8  086F               	movf	_op^(0+128),w
 12961     15C9  3E30               	addlw	48
 12962     15CA  00FB               	movwf	LCD_Write@letra
 12963     15CB  3004               	movlw	4
 12964     15CC  3190  2001  3195   	fcall	_LCD_Write
 12965                           
 12966                           ;Menu.c: 240:     switch(op){
 12967     15CF  2E54               	goto	l5046
 12968     15D0                     l5036:
 12969     15D0  3005               	movlw	5
 12970     15D1  00FA               	movwf	LCD_Write@col
 12971     15D2  303C               	movlw	60
 12972     15D3  00FB               	movwf	LCD_Write@letra
 12973     15D4  3002               	movlw	2
 12974     15D5  3190  2001  3195   	fcall	_LCD_Write
 12975                           
 12976                           ;Menu.c: 242:                 LCD_Write(3,5,' ');
 12977     15D8  3005               	movlw	5
 12978     15D9  00FA               	movwf	LCD_Write@col
 12979     15DA  3020               	movlw	32
 12980     15DB  00FB               	movwf	LCD_Write@letra
 12981     15DC  3003               	movlw	3
 12982     15DD  3190  2001  3195   	fcall	_LCD_Write
 12983                           
 12984                           ;Menu.c: 243:                 LCD_Write(2,13,' ');
 12985     15E0  300D               	movlw	13
 12986     15E1  00FA               	movwf	LCD_Write@col
 12987     15E2  3020               	movlw	32
 12988     15E3  00FB               	movwf	LCD_Write@letra
 12989     15E4  3002               	movlw	2
 12990     15E5  3190  2001  3195   	fcall	_LCD_Write
 12991                           
 12992                           ;Menu.c: 244:                 LCD_Write(3,15,' ');
 12993     15E8  300F               	movlw	15
 12994     15E9  00FA               	movwf	LCD_Write@col
 12995     15EA  3020               	movlw	32
 12996     15EB  00FB               	movwf	LCD_Write@letra
 12997     15EC  3003               	movlw	3
 12998     15ED  3190  2001  3195   	fcall	_LCD_Write
 12999                           
 13000                           ;Menu.c: 245:                 break;
 13001     15F0  2E6C               	goto	l262
 13002     15F1                     l5038:
 13003     15F1  3005               	movlw	5
 13004     15F2  00FA               	movwf	LCD_Write@col
 13005     15F3  3020               	movlw	32
 13006     15F4  00FB               	movwf	LCD_Write@letra
 13007     15F5  3002               	movlw	2
 13008     15F6  3190  2001  3195   	fcall	_LCD_Write
 13009                           
 13010                           ;Menu.c: 247:                 LCD_Write(3,5,'<');
 13011     15F9  3005               	movlw	5
 13012     15FA  00FA               	movwf	LCD_Write@col
 13013     15FB  303C               	movlw	60
 13014     15FC  00FB               	movwf	LCD_Write@letra
 13015     15FD  3003               	movlw	3
 13016     15FE  3190  2001  3195   	fcall	_LCD_Write
 13017                           
 13018                           ;Menu.c: 248:                 LCD_Write(2,13,' ');
 13019     1601  300D               	movlw	13
 13020     1602  00FA               	movwf	LCD_Write@col
 13021     1603  3020               	movlw	32
 13022     1604  00FB               	movwf	LCD_Write@letra
 13023     1605  3002               	movlw	2
 13024     1606  3190  2001  3195   	fcall	_LCD_Write
 13025                           
 13026                           ;Menu.c: 249:                 LCD_Write(3,15,' ');
 13027     1609  300F               	movlw	15
 13028     160A  00FA               	movwf	LCD_Write@col
 13029     160B  3020               	movlw	32
 13030     160C  00FB               	movwf	LCD_Write@letra
 13031     160D  3003               	movlw	3
 13032     160E  3190  2001  3195   	fcall	_LCD_Write
 13033                           
 13034                           ;Menu.c: 250:                 break;
 13035     1611  2E6C               	goto	l262
 13036     1612                     l5040:
 13037     1612  3005               	movlw	5
 13038     1613  00FA               	movwf	LCD_Write@col
 13039     1614  3020               	movlw	32
 13040     1615  00FB               	movwf	LCD_Write@letra
 13041     1616  3002               	movlw	2
 13042     1617  3190  2001  3195   	fcall	_LCD_Write
 13043                           
 13044                           ;Menu.c: 252:                 LCD_Write(3,5,' ');
 13045     161A  3005               	movlw	5
 13046     161B  00FA               	movwf	LCD_Write@col
 13047     161C  3020               	movlw	32
 13048     161D  00FB               	movwf	LCD_Write@letra
 13049     161E  3003               	movlw	3
 13050     161F  3190  2001  3195   	fcall	_LCD_Write
 13051                           
 13052                           ;Menu.c: 253:                 LCD_Write(2,13,'<');
 13053     1622  300D               	movlw	13
 13054     1623  00FA               	movwf	LCD_Write@col
 13055     1624  303C               	movlw	60
 13056     1625  00FB               	movwf	LCD_Write@letra
 13057     1626  3002               	movlw	2
 13058     1627  3190  2001  3195   	fcall	_LCD_Write
 13059                           
 13060                           ;Menu.c: 254:                 LCD_Write(3,15,' ');
 13061     162A  300F               	movlw	15
 13062     162B  00FA               	movwf	LCD_Write@col
 13063     162C  3020               	movlw	32
 13064     162D  00FB               	movwf	LCD_Write@letra
 13065     162E  3003               	movlw	3
 13066     162F  3190  2001  3195   	fcall	_LCD_Write
 13067                           
 13068                           ;Menu.c: 255:                 break;
 13069     1632  2E6C               	goto	l262
 13070     1633                     l5042:
 13071     1633  3005               	movlw	5
 13072     1634  00FA               	movwf	LCD_Write@col
 13073     1635  3020               	movlw	32
 13074     1636  00FB               	movwf	LCD_Write@letra
 13075     1637  3002               	movlw	2
 13076     1638  3190  2001  3195   	fcall	_LCD_Write
 13077                           
 13078                           ;Menu.c: 257:                 LCD_Write(3,5,' ');
 13079     163B  3005               	movlw	5
 13080     163C  00FA               	movwf	LCD_Write@col
 13081     163D  3020               	movlw	32
 13082     163E  00FB               	movwf	LCD_Write@letra
 13083     163F  3003               	movlw	3
 13084     1640  3190  2001  3195   	fcall	_LCD_Write
 13085                           
 13086                           ;Menu.c: 258:                 LCD_Write(2,13,' ');
 13087     1643  300D               	movlw	13
 13088     1644  00FA               	movwf	LCD_Write@col
 13089     1645  3020               	movlw	32
 13090     1646  00FB               	movwf	LCD_Write@letra
 13091     1647  3002               	movlw	2
 13092     1648  3190  2001  3195   	fcall	_LCD_Write
 13093                           
 13094                           ;Menu.c: 259:                 LCD_Write(3,15,'<');
 13095     164B  300F               	movlw	15
 13096     164C  00FA               	movwf	LCD_Write@col
 13097     164D  303C               	movlw	60
 13098     164E  00FB               	movwf	LCD_Write@letra
 13099     164F  3003               	movlw	3
 13100     1650  3190  2001  3195   	fcall	_LCD_Write
 13101                           
 13102                           ;Menu.c: 260:                 break;
 13103     1653  2E6C               	goto	l262
 13104     1654                     l5046:
 13105     1654  0021               	movlb	1	; select bank1
 13106     1655  086F               	movf	_op^(0+128),w
 13107     1656  0020               	movlb	0	; select bank0
 13108     1657  00A1               	movwf	??_MenuLeds
 13109     1658  01A2               	clrf	??_MenuLeds+1
 13110                           
 13111                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13112                           ; Switch size 1, requested type "simple"
 13113                           ; Number of cases is 1, Range of values is 0 to 0
 13114                           ; switch strategies available:
 13115                           ; Name         Instructions Cycles
 13116                           ; simple_byte            4     3 (average)
 13117                           ; direct_byte            8     6 (fixed)
 13118                           ; jumptable            260     6 (fixed)
 13119                           ;	Chosen strategy is simple_byte
 13120     1659  0822               	movf	??_MenuLeds+1,w
 13121     165A  3A00               	xorlw	0	; case 0
 13122     165B  1903               	skipnz
 13123     165C  2E5E               	goto	l5902
 13124     165D  2E6C               	goto	l262
 13125     165E                     l5902:
 13126                           
 13127                           ; Switch size 1, requested type "simple"
 13128                           ; Number of cases is 4, Range of values is 1 to 4
 13129                           ; switch strategies available:
 13130                           ; Name         Instructions Cycles
 13131                           ; simple_byte           13     7 (average)
 13132                           ; direct_byte           17     9 (fixed)
 13133                           ; jumptable            263     9 (fixed)
 13134                           ;	Chosen strategy is simple_byte
 13135     165E  0821               	movf	??_MenuLeds,w
 13136     165F  3A01               	xorlw	1	; case 1
 13137     1660  1903               	skipnz
 13138     1661  2DD0               	goto	l5036
 13139     1662  3A03               	xorlw	3	; case 2
 13140     1663  1903               	skipnz
 13141     1664  2DF1               	goto	l5038
 13142     1665  3A01               	xorlw	1	; case 3
 13143     1666  1903               	skipnz
 13144     1667  2E12               	goto	l5040
 13145     1668  3A07               	xorlw	7	; case 4
 13146     1669  1903               	skipnz
 13147     166A  2E33               	goto	l5042
 13148     166B  2E6C               	goto	l262
 13149     166C                     l262:
 13150                           
 13151                           ;Menu.c: 263:     if(PORTBbits.RB0 == 1){
 13152     166C  0020               	movlb	0	; select bank0
 13153     166D  1C0D               	btfss	13,0	;volatile
 13154     166E  2E70               	goto	u5181
 13155     166F  2E71               	goto	u5180
 13156     1670                     u5181:
 13157     1670  2E82               	goto	l266
 13158     1671                     u5180:
 13159     1671                     l267:
 13160     1671  180D               	btfsc	13,0	;volatile
 13161     1672  2E74               	goto	u5191
 13162     1673  2E75               	goto	u5190
 13163     1674                     u5191:
 13164     1674  2E71               	goto	l267
 13165     1675                     u5190:
 13166     1675                     l5050:
 13167                           
 13168                           ;Menu.c: 265:         op++;
 13169     1675  3001               	movlw	1
 13170     1676  00A1               	movwf	??_MenuLeds
 13171     1677  0821               	movf	??_MenuLeds,w
 13172     1678  0021               	movlb	1	; select bank1
 13173     1679  07EF               	addwf	_op^(0+128),f
 13174     167A                     l5052:
 13175                           
 13176                           ;Menu.c: 266:         if(op>4)
 13177     167A  3005               	movlw	5
 13178     167B  026F               	subwf	_op^(0+128),w
 13179     167C  1C03               	skipc
 13180     167D  2E7F               	goto	u5201
 13181     167E  2E80               	goto	u5200
 13182     167F                     u5201:
 13183     167F  2E82               	goto	l266
 13184     1680                     u5200:
 13185     1680                     l5054:
 13186                           
 13187                           ;Menu.c: 267:             op=1;
 13188     1680  01EF               	clrf	_op^(0+128)
 13189     1681  0AEF               	incf	_op^(0+128),f
 13190     1682                     l266:	
 13191                           ;Menu.c: 268:     }
 13192                           
 13193                           
 13194                           ;Menu.c: 269:     if(PORTBbits.RB1 == 1){
 13195     1682  0020               	movlb	0	; select bank0
 13196     1683  1C8D               	btfss	13,1	;volatile
 13197     1684  2E86               	goto	u5211
 13198     1685  2E87               	goto	u5210
 13199     1686                     u5211:
 13200     1686  2E95               	goto	l5062
 13201     1687                     u5210:
 13202     1687                     l272:
 13203     1687  188D               	btfsc	13,1	;volatile
 13204     1688  2E8A               	goto	u5221
 13205     1689  2E8B               	goto	u5220
 13206     168A                     u5221:
 13207     168A  2E87               	goto	l272
 13208     168B                     u5220:
 13209     168B                     l5058:
 13210                           
 13211                           ;Menu.c: 271:         op--;
 13212     168B  3001               	movlw	1
 13213     168C  0021               	movlb	1	; select bank1
 13214     168D  02EF               	subwf	_op^(0+128),f
 13215                           
 13216                           ;Menu.c: 272:         if(op<1)
 13217     168E  086F               	movf	_op^(0+128),w
 13218     168F  1D03               	btfss	3,2
 13219     1690  2E92               	goto	u5231
 13220     1691  2E93               	goto	u5230
 13221     1692                     u5231:
 13222     1692  2E95               	goto	l5062
 13223     1693                     u5230:
 13224     1693                     l5060:
 13225                           
 13226                           ;Menu.c: 273:             op=3;
 13227     1693  3003               	movlw	3
 13228     1694  00EF               	movwf	_op^(0+128)
 13229     1695                     l5062:
 13230                           
 13231                           ;Menu.c: 275:     if(PORTBbits.RB2 == 1){
 13232     1695  0020               	movlb	0	; select bank0
 13233     1696  1D0D               	btfss	13,2	;volatile
 13234     1697  2E99               	goto	u5241
 13235     1698  2E9A               	goto	u5240
 13236     1699                     u5241:
 13237     1699  2ECD               	goto	l286
 13238     169A                     u5240:
 13239     169A                     l277:
 13240     169A  190D               	btfsc	13,2	;volatile
 13241     169B  2E9D               	goto	u5251
 13242     169C  2E9E               	goto	u5250
 13243     169D                     u5251:
 13244     169D  2E9A               	goto	l277
 13245     169E                     u5250:
 13246     169E  2EB1               	goto	l5084
 13247     169F                     l5066:
 13248     169F  3004               	movlw	4
 13249     16A0  0022               	movlb	2	; select bank2
 13250     16A1  00B6               	movwf	_cMenu^(0+256)
 13251     16A2                     l5068:
 13252     16A2  0021               	movlb	1	; select bank1
 13253     16A3  01EF               	clrf	_op^(0+128)
 13254     16A4  0AEF               	incf	_op^(0+128),f
 13255     16A5  2EC9               	goto	l5086
 13256     16A6                     l5070:
 13257     16A6  3005               	movlw	5
 13258     16A7  0022               	movlb	2	; select bank2
 13259     16A8  00B6               	movwf	_cMenu^(0+256)
 13260     16A9  2EA2               	goto	l5068
 13261     16AA                     l5074:
 13262     16AA  3006               	movlw	6
 13263     16AB  0022               	movlb	2	; select bank2
 13264     16AC  00B6               	movwf	_cMenu^(0+256)
 13265     16AD  2EA2               	goto	l5068
 13266     16AE                     l5078:
 13267     16AE  0022               	movlb	2	; select bank2
 13268     16AF  01B6               	clrf	_cMenu^(0+256)
 13269     16B0  2EA2               	goto	l5068
 13270     16B1                     l5084:
 13271     16B1  0021               	movlb	1	; select bank1
 13272     16B2  086F               	movf	_op^(0+128),w
 13273     16B3  0020               	movlb	0	; select bank0
 13274     16B4  00A1               	movwf	??_MenuLeds
 13275     16B5  01A2               	clrf	??_MenuLeds+1
 13276                           
 13277                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13278                           ; Switch size 1, requested type "simple"
 13279                           ; Number of cases is 1, Range of values is 0 to 0
 13280                           ; switch strategies available:
 13281                           ; Name         Instructions Cycles
 13282                           ; simple_byte            4     3 (average)
 13283                           ; direct_byte            8     6 (fixed)
 13284                           ; jumptable            260     6 (fixed)
 13285                           ;	Chosen strategy is simple_byte
 13286     16B6  0822               	movf	??_MenuLeds+1,w
 13287     16B7  3A00               	xorlw	0	; case 0
 13288     16B8  1903               	skipnz
 13289     16B9  2EBB               	goto	l5904
 13290     16BA  2EC9               	goto	l5086
 13291     16BB                     l5904:
 13292                           
 13293                           ; Switch size 1, requested type "simple"
 13294                           ; Number of cases is 4, Range of values is 1 to 4
 13295                           ; switch strategies available:
 13296                           ; Name         Instructions Cycles
 13297                           ; simple_byte           13     7 (average)
 13298                           ; direct_byte           17     9 (fixed)
 13299                           ; jumptable            263     9 (fixed)
 13300                           ;	Chosen strategy is simple_byte
 13301     16BB  0821               	movf	??_MenuLeds,w
 13302     16BC  3A01               	xorlw	1	; case 1
 13303     16BD  1903               	skipnz
 13304     16BE  2E9F               	goto	l5066
 13305     16BF  3A03               	xorlw	3	; case 2
 13306     16C0  1903               	skipnz
 13307     16C1  2EA6               	goto	l5070
 13308     16C2  3A01               	xorlw	1	; case 3
 13309     16C3  1903               	skipnz
 13310     16C4  2EAA               	goto	l5074
 13311     16C5  3A07               	xorlw	7	; case 4
 13312     16C6  1903               	skipnz
 13313     16C7  2EAE               	goto	l5078
 13314     16C8  2EC9               	goto	l5086
 13315     16C9                     l5086:
 13316                           
 13317                           ;Menu.c: 283:         LCD_Cmd(1);
 13318     16C9  3001               	movlw	1
 13319     16CA  3199  21E1  3195   	fcall	_LCD_Cmd
 13320     16CD                     l286:
 13321     16CD  0008               	return
 13322     16CE                     __end_of_MenuLeds:
 13323                           
 13324                           	psect	text42
 13325     11BD                     __ptext42:	
 13326 ;; *************** function _MenuL3 *****************
 13327 ;; Defined at:
 13328 ;;		line 377 in file "Menu.c"
 13329 ;; Parameters:    Size  Location     Type
 13330 ;;		None
 13331 ;; Auto vars:     Size  Location     Type
 13332 ;;		None
 13333 ;; Return value:  Size  Location     Type
 13334 ;;                  1    wreg      void 
 13335 ;; Registers used:
 13336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13337 ;; Tracked objects:
 13338 ;;		On entry : 0/0
 13339 ;;		On exit  : 0/0
 13340 ;;		Unchanged: 0/0
 13341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13344 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13345 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13346 ;;Total ram usage:        2 bytes
 13347 ;; Hardware stack levels used: 1
 13348 ;; Hardware stack levels required when called: 4
 13349 ;; This function calls:
 13350 ;;		_LCD_Cmd
 13351 ;;		_LCD_Write
 13352 ;;		_LCD_Write_Text
 13353 ;; This function is called by:
 13354 ;;		_main
 13355 ;; This function uses a non-reentrant model
 13356 ;;
 13357                           
 13358     11BD                     _MenuL3:	
 13359                           ;psect for function _MenuL3
 13360                           
 13361     11BD                     l5248:	
 13362                           ;incstack = 0
 13363                           ; Regs used in _MenuL3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13364                           
 13365                           
 13366                           ;Menu.c: 379:     LCD_Write_Text(1,1,"       MENU LED3    ");
 13367     11BD  01FA               	clrf	LCD_Write_Text@col
 13368     11BE  0AFA               	incf	LCD_Write_Text@col,f
 13369     11BF  30E7               	movlw	low (STR_25| (0+32768))
 13370     11C0  00FB               	movwf	LCD_Write_Text@text
 13371     11C1  30A0               	movlw	high (STR_25| (0+32768))
 13372     11C2  00FC               	movwf	LCD_Write_Text@text+1
 13373     11C3  3001               	movlw	1
 13374     11C4  3199  21FD  3191   	fcall	_LCD_Write_Text
 13375                           
 13376                           ;Menu.c: 380:     LCD_Write_Text(2,1,"1.ON    3.BACK      ");
 13377     11C7  01FA               	clrf	LCD_Write_Text@col
 13378     11C8  0AFA               	incf	LCD_Write_Text@col,f
 13379     11C9  307E               	movlw	low (STR_18| (0+32768))
 13380     11CA  00FB               	movwf	LCD_Write_Text@text
 13381     11CB  30A0               	movlw	high (STR_18| (0+32768))
 13382     11CC  00FC               	movwf	LCD_Write_Text@text+1
 13383     11CD  3002               	movlw	2
 13384     11CE  3199  21FD  3191   	fcall	_LCD_Write_Text
 13385                           
 13386                           ;Menu.c: 381:     LCD_Write_Text(3,1,"2.OFF               ");
 13387     11D1  01FA               	clrf	LCD_Write_Text@col
 13388     11D2  0AFA               	incf	LCD_Write_Text@col,f
 13389     11D3  3015               	movlw	low (STR_19| (0+32768))
 13390     11D4  00FB               	movwf	LCD_Write_Text@text
 13391     11D5  30A0               	movlw	high (STR_19| (0+32768))
 13392     11D6  00FC               	movwf	LCD_Write_Text@text+1
 13393     11D7  3003               	movlw	3
 13394     11D8  3199  21FD  3191   	fcall	_LCD_Write_Text
 13395                           
 13396                           ;Menu.c: 382:     LCD_Write_Text(4,1,"OP:                 ");
 13397     11DB  01FA               	clrf	LCD_Write_Text@col
 13398     11DC  0AFA               	incf	LCD_Write_Text@col,f
 13399     11DD  3000               	movlw	low (STR_4| (0+32768))
 13400     11DE  00FB               	movwf	LCD_Write_Text@text
 13401     11DF  30A0               	movlw	high (STR_4| (0+32768))
 13402     11E0  00FC               	movwf	LCD_Write_Text@text+1
 13403     11E1  3004               	movlw	4
 13404     11E2  3199  21FD  3191   	fcall	_LCD_Write_Text
 13405                           
 13406                           ;Menu.c: 383:     LCD_Write(4,4,op+48);
 13407     11E5  3004               	movlw	4
 13408     11E6  00FA               	movwf	LCD_Write@col
 13409     11E7  0021               	movlb	1	; select bank1
 13410     11E8  086F               	movf	_op^(0+128),w
 13411     11E9  3E30               	addlw	48
 13412     11EA  00FB               	movwf	LCD_Write@letra
 13413     11EB  3004               	movlw	4
 13414     11EC  3190  2001  3191   	fcall	_LCD_Write
 13415                           
 13416                           ;Menu.c: 385:     switch(op){
 13417     11EF  2A3B               	goto	l5258
 13418     11F0                     l5250:
 13419     11F0  3005               	movlw	5
 13420     11F1  00FA               	movwf	LCD_Write@col
 13421     11F2  303C               	movlw	60
 13422     11F3  00FB               	movwf	LCD_Write@letra
 13423     11F4  3002               	movlw	2
 13424     11F5  3190  2001  3191   	fcall	_LCD_Write
 13425                           
 13426                           ;Menu.c: 387:                 LCD_Write(3,6,' ');
 13427     11F8  3006               	movlw	6
 13428     11F9  00FA               	movwf	LCD_Write@col
 13429     11FA  3020               	movlw	32
 13430     11FB  00FB               	movwf	LCD_Write@letra
 13431     11FC  3003               	movlw	3
 13432     11FD  3190  2001  3191   	fcall	_LCD_Write
 13433                           
 13434                           ;Menu.c: 388:                 LCD_Write(2,15,' ');
 13435     1200  300F               	movlw	15
 13436     1201  00FA               	movwf	LCD_Write@col
 13437     1202  3020               	movlw	32
 13438     1203  00FB               	movwf	LCD_Write@letra
 13439     1204  3002               	movlw	2
 13440     1205  3190  2001  3191   	fcall	_LCD_Write
 13441                           
 13442                           ;Menu.c: 389:                 break;
 13443     1208  2A50               	goto	l345
 13444     1209                     l5252:
 13445     1209  3005               	movlw	5
 13446     120A  00FA               	movwf	LCD_Write@col
 13447     120B  3020               	movlw	32
 13448     120C  00FB               	movwf	LCD_Write@letra
 13449     120D  3002               	movlw	2
 13450     120E  3190  2001  3191   	fcall	_LCD_Write
 13451                           
 13452                           ;Menu.c: 391:                 LCD_Write(3,6,'<');
 13453     1211  3006               	movlw	6
 13454     1212  00FA               	movwf	LCD_Write@col
 13455     1213  303C               	movlw	60
 13456     1214  00FB               	movwf	LCD_Write@letra
 13457     1215  3003               	movlw	3
 13458     1216  3190  2001  3191   	fcall	_LCD_Write
 13459                           
 13460                           ;Menu.c: 392:                 LCD_Write(2,15,' ');
 13461     1219  300F               	movlw	15
 13462     121A  00FA               	movwf	LCD_Write@col
 13463     121B  3020               	movlw	32
 13464     121C  00FB               	movwf	LCD_Write@letra
 13465     121D  3002               	movlw	2
 13466     121E  3190  2001  3191   	fcall	_LCD_Write
 13467                           
 13468                           ;Menu.c: 393:                 break;
 13469     1221  2A50               	goto	l345
 13470     1222                     l5254:
 13471     1222  3005               	movlw	5
 13472     1223  00FA               	movwf	LCD_Write@col
 13473     1224  3020               	movlw	32
 13474     1225  00FB               	movwf	LCD_Write@letra
 13475     1226  3002               	movlw	2
 13476     1227  3190  2001  3191   	fcall	_LCD_Write
 13477                           
 13478                           ;Menu.c: 395:                 LCD_Write(3,6,' ');
 13479     122A  3006               	movlw	6
 13480     122B  00FA               	movwf	LCD_Write@col
 13481     122C  3020               	movlw	32
 13482     122D  00FB               	movwf	LCD_Write@letra
 13483     122E  3003               	movlw	3
 13484     122F  3190  2001  3191   	fcall	_LCD_Write
 13485                           
 13486                           ;Menu.c: 396:                 LCD_Write(2,15,'<');
 13487     1232  300F               	movlw	15
 13488     1233  00FA               	movwf	LCD_Write@col
 13489     1234  303C               	movlw	60
 13490     1235  00FB               	movwf	LCD_Write@letra
 13491     1236  3002               	movlw	2
 13492     1237  3190  2001  3191   	fcall	_LCD_Write
 13493                           
 13494                           ;Menu.c: 397:                 break;
 13495     123A  2A50               	goto	l345
 13496     123B                     l5258:
 13497     123B  0021               	movlb	1	; select bank1
 13498     123C  086F               	movf	_op^(0+128),w
 13499     123D  0020               	movlb	0	; select bank0
 13500     123E  00A1               	movwf	??_MenuL3
 13501     123F  01A2               	clrf	??_MenuL3+1
 13502                           
 13503                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13504                           ; Switch size 1, requested type "simple"
 13505                           ; Number of cases is 1, Range of values is 0 to 0
 13506                           ; switch strategies available:
 13507                           ; Name         Instructions Cycles
 13508                           ; simple_byte            4     3 (average)
 13509                           ; direct_byte            8     6 (fixed)
 13510                           ; jumptable            260     6 (fixed)
 13511                           ;	Chosen strategy is simple_byte
 13512     1240  0822               	movf	??_MenuL3+1,w
 13513     1241  3A00               	xorlw	0	; case 0
 13514     1242  1903               	skipnz
 13515     1243  2A45               	goto	l5906
 13516     1244  2A50               	goto	l345
 13517     1245                     l5906:
 13518                           
 13519                           ; Switch size 1, requested type "simple"
 13520                           ; Number of cases is 3, Range of values is 1 to 3
 13521                           ; switch strategies available:
 13522                           ; Name         Instructions Cycles
 13523                           ; simple_byte           10     6 (average)
 13524                           ; direct_byte           15     9 (fixed)
 13525                           ; jumptable            263     9 (fixed)
 13526                           ;	Chosen strategy is simple_byte
 13527     1245  0821               	movf	??_MenuL3,w
 13528     1246  3A01               	xorlw	1	; case 1
 13529     1247  1903               	skipnz
 13530     1248  29F0               	goto	l5250
 13531     1249  3A03               	xorlw	3	; case 2
 13532     124A  1903               	skipnz
 13533     124B  2A09               	goto	l5252
 13534     124C  3A01               	xorlw	1	; case 3
 13535     124D  1903               	skipnz
 13536     124E  2A22               	goto	l5254
 13537     124F  2A50               	goto	l345
 13538     1250                     l345:
 13539                           
 13540                           ;Menu.c: 400:     if(PORTBbits.RB0 == 1){
 13541     1250  0020               	movlb	0	; select bank0
 13542     1251  1C0D               	btfss	13,0	;volatile
 13543     1252  2A54               	goto	u5501
 13544     1253  2A55               	goto	u5500
 13545     1254                     u5501:
 13546     1254  2A66               	goto	l348
 13547     1255                     u5500:
 13548     1255                     l349:
 13549     1255  180D               	btfsc	13,0	;volatile
 13550     1256  2A58               	goto	u5511
 13551     1257  2A59               	goto	u5510
 13552     1258                     u5511:
 13553     1258  2A55               	goto	l349
 13554     1259                     u5510:
 13555     1259                     l5262:
 13556                           
 13557                           ;Menu.c: 402:         op++;
 13558     1259  3001               	movlw	1
 13559     125A  00A1               	movwf	??_MenuL3
 13560     125B  0821               	movf	??_MenuL3,w
 13561     125C  0021               	movlb	1	; select bank1
 13562     125D  07EF               	addwf	_op^(0+128),f
 13563     125E                     l5264:
 13564                           
 13565                           ;Menu.c: 403:         if(op>3)
 13566     125E  3004               	movlw	4
 13567     125F  026F               	subwf	_op^(0+128),w
 13568     1260  1C03               	skipc
 13569     1261  2A63               	goto	u5521
 13570     1262  2A64               	goto	u5520
 13571     1263                     u5521:
 13572     1263  2A66               	goto	l348
 13573     1264                     u5520:
 13574     1264                     l5266:
 13575                           
 13576                           ;Menu.c: 404:             op=1;
 13577     1264  01EF               	clrf	_op^(0+128)
 13578     1265  0AEF               	incf	_op^(0+128),f
 13579     1266                     l348:	
 13580                           ;Menu.c: 405:     }
 13581                           
 13582                           
 13583                           ;Menu.c: 406:     if(PORTBbits.RB1 == 1){
 13584     1266  0020               	movlb	0	; select bank0
 13585     1267  1C8D               	btfss	13,1	;volatile
 13586     1268  2A6A               	goto	u5531
 13587     1269  2A6B               	goto	u5530
 13588     126A                     u5531:
 13589     126A  2A79               	goto	l5274
 13590     126B                     u5530:
 13591     126B                     l354:
 13592     126B  188D               	btfsc	13,1	;volatile
 13593     126C  2A6E               	goto	u5541
 13594     126D  2A6F               	goto	u5540
 13595     126E                     u5541:
 13596     126E  2A6B               	goto	l354
 13597     126F                     u5540:
 13598     126F                     l5270:
 13599                           
 13600                           ;Menu.c: 408:         op--;
 13601     126F  3001               	movlw	1
 13602     1270  0021               	movlb	1	; select bank1
 13603     1271  02EF               	subwf	_op^(0+128),f
 13604                           
 13605                           ;Menu.c: 409:         if(op<1)
 13606     1272  086F               	movf	_op^(0+128),w
 13607     1273  1D03               	btfss	3,2
 13608     1274  2A76               	goto	u5551
 13609     1275  2A77               	goto	u5550
 13610     1276                     u5551:
 13611     1276  2A79               	goto	l5274
 13612     1277                     u5550:
 13613     1277                     l5272:
 13614                           
 13615                           ;Menu.c: 410:             op=3;
 13616     1277  3003               	movlw	3
 13617     1278  00EF               	movwf	_op^(0+128)
 13618     1279                     l5274:
 13619                           
 13620                           ;Menu.c: 412:     if(PORTBbits.RB2 == 1){
 13621     1279  0020               	movlb	0	; select bank0
 13622     127A  1D0D               	btfss	13,2	;volatile
 13623     127B  2A7D               	goto	u5561
 13624     127C  2A7E               	goto	u5560
 13625     127D                     u5561:
 13626     127D  2AA9               	goto	l367
 13627     127E                     u5560:
 13628     127E                     l359:
 13629     127E  190D               	btfsc	13,2	;volatile
 13630     127F  2A81               	goto	u5571
 13631     1280  2A82               	goto	u5570
 13632     1281                     u5571:
 13633     1281  2A7E               	goto	l359
 13634     1282                     u5570:
 13635     1282  2A90               	goto	l5284
 13636     1283                     l363:	
 13637                           ;Menu.c: 415:             case 1: LATAbits.LATA4=1; break;
 13638                           
 13639     1283  0022               	movlb	2	; select bank2
 13640     1284  160C               	bsf	12,4	;volatile
 13641     1285  2AA5               	goto	l5286
 13642     1286                     l365:	
 13643                           ;Menu.c: 416:             case 2: LATAbits.LATA4=0; break;
 13644                           
 13645     1286  0022               	movlb	2	; select bank2
 13646     1287  120C               	bcf	12,4	;volatile
 13647     1288  2AA5               	goto	l5286
 13648     1289                     l5278:
 13649     1289  3002               	movlw	2
 13650     128A  0022               	movlb	2	; select bank2
 13651     128B  00B6               	movwf	_cMenu^(0+256)
 13652     128C                     l5280:
 13653     128C  0021               	movlb	1	; select bank1
 13654     128D  01EF               	clrf	_op^(0+128)
 13655     128E  0AEF               	incf	_op^(0+128),f
 13656     128F  2AA5               	goto	l5286
 13657     1290                     l5284:
 13658     1290  0021               	movlb	1	; select bank1
 13659     1291  086F               	movf	_op^(0+128),w
 13660     1292  0020               	movlb	0	; select bank0
 13661     1293  00A1               	movwf	??_MenuL3
 13662     1294  01A2               	clrf	??_MenuL3+1
 13663                           
 13664                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13665                           ; Switch size 1, requested type "simple"
 13666                           ; Number of cases is 1, Range of values is 0 to 0
 13667                           ; switch strategies available:
 13668                           ; Name         Instructions Cycles
 13669                           ; simple_byte            4     3 (average)
 13670                           ; direct_byte            8     6 (fixed)
 13671                           ; jumptable            260     6 (fixed)
 13672                           ;	Chosen strategy is simple_byte
 13673     1295  0822               	movf	??_MenuL3+1,w
 13674     1296  3A00               	xorlw	0	; case 0
 13675     1297  1903               	skipnz
 13676     1298  2A9A               	goto	l5908
 13677     1299  2AA5               	goto	l5286
 13678     129A                     l5908:
 13679                           
 13680                           ; Switch size 1, requested type "simple"
 13681                           ; Number of cases is 3, Range of values is 1 to 3
 13682                           ; switch strategies available:
 13683                           ; Name         Instructions Cycles
 13684                           ; simple_byte           10     6 (average)
 13685                           ; direct_byte           15     9 (fixed)
 13686                           ; jumptable            263     9 (fixed)
 13687                           ;	Chosen strategy is simple_byte
 13688     129A  0821               	movf	??_MenuL3,w
 13689     129B  3A01               	xorlw	1	; case 1
 13690     129C  1903               	skipnz
 13691     129D  2A83               	goto	l363
 13692     129E  3A03               	xorlw	3	; case 2
 13693     129F  1903               	skipnz
 13694     12A0  2A86               	goto	l365
 13695     12A1  3A01               	xorlw	1	; case 3
 13696     12A2  1903               	skipnz
 13697     12A3  2A89               	goto	l5278
 13698     12A4  2AA5               	goto	l5286
 13699     12A5                     l5286:
 13700                           
 13701                           ;Menu.c: 419:         LCD_Cmd(1);
 13702     12A5  3001               	movlw	1
 13703     12A6  3199  21E1  3191   	fcall	_LCD_Cmd
 13704     12A9                     l367:
 13705     12A9  0008               	return
 13706     12AA                     __end_of_MenuL3:
 13707                           
 13708                           	psect	text43
 13709     10D0                     __ptext43:	
 13710 ;; *************** function _MenuL2 *****************
 13711 ;; Defined at:
 13712 ;;		line 332 in file "Menu.c"
 13713 ;; Parameters:    Size  Location     Type
 13714 ;;		None
 13715 ;; Auto vars:     Size  Location     Type
 13716 ;;		None
 13717 ;; Return value:  Size  Location     Type
 13718 ;;                  1    wreg      void 
 13719 ;; Registers used:
 13720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13721 ;; Tracked objects:
 13722 ;;		On entry : 0/0
 13723 ;;		On exit  : 0/0
 13724 ;;		Unchanged: 0/0
 13725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13728 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13729 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13730 ;;Total ram usage:        2 bytes
 13731 ;; Hardware stack levels used: 1
 13732 ;; Hardware stack levels required when called: 4
 13733 ;; This function calls:
 13734 ;;		_LCD_Cmd
 13735 ;;		_LCD_Write
 13736 ;;		_LCD_Write_Text
 13737 ;; This function is called by:
 13738 ;;		_main
 13739 ;; This function uses a non-reentrant model
 13740 ;;
 13741                           
 13742     10D0                     _MenuL2:	
 13743                           ;psect for function _MenuL2
 13744                           
 13745     10D0                     l5200:	
 13746                           ;incstack = 0
 13747                           ; Regs used in _MenuL2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13748                           
 13749                           
 13750                           ;Menu.c: 334:     LCD_Write_Text(1,1,"       MENU LED2    ");
 13751     10D0  01FA               	clrf	LCD_Write_Text@col
 13752     10D1  0AFA               	incf	LCD_Write_Text@col,f
 13753     10D2  30D2               	movlw	low (STR_21| (0+32768))
 13754     10D3  00FB               	movwf	LCD_Write_Text@text
 13755     10D4  30A0               	movlw	high (STR_21| (0+32768))
 13756     10D5  00FC               	movwf	LCD_Write_Text@text+1
 13757     10D6  3001               	movlw	1
 13758     10D7  3199  21FD  3190   	fcall	_LCD_Write_Text
 13759                           
 13760                           ;Menu.c: 335:     LCD_Write_Text(2,1,"1.ON    3.BACK      ");
 13761     10DA  01FA               	clrf	LCD_Write_Text@col
 13762     10DB  0AFA               	incf	LCD_Write_Text@col,f
 13763     10DC  307E               	movlw	low (STR_18| (0+32768))
 13764     10DD  00FB               	movwf	LCD_Write_Text@text
 13765     10DE  30A0               	movlw	high (STR_18| (0+32768))
 13766     10DF  00FC               	movwf	LCD_Write_Text@text+1
 13767     10E0  3002               	movlw	2
 13768     10E1  3199  21FD  3190   	fcall	_LCD_Write_Text
 13769                           
 13770                           ;Menu.c: 336:     LCD_Write_Text(3,1,"2.OFF               ");
 13771     10E4  01FA               	clrf	LCD_Write_Text@col
 13772     10E5  0AFA               	incf	LCD_Write_Text@col,f
 13773     10E6  3015               	movlw	low (STR_19| (0+32768))
 13774     10E7  00FB               	movwf	LCD_Write_Text@text
 13775     10E8  30A0               	movlw	high (STR_19| (0+32768))
 13776     10E9  00FC               	movwf	LCD_Write_Text@text+1
 13777     10EA  3003               	movlw	3
 13778     10EB  3199  21FD  3190   	fcall	_LCD_Write_Text
 13779                           
 13780                           ;Menu.c: 337:     LCD_Write_Text(4,1,"OP:                 ");
 13781     10EE  01FA               	clrf	LCD_Write_Text@col
 13782     10EF  0AFA               	incf	LCD_Write_Text@col,f
 13783     10F0  3000               	movlw	low (STR_4| (0+32768))
 13784     10F1  00FB               	movwf	LCD_Write_Text@text
 13785     10F2  30A0               	movlw	high (STR_4| (0+32768))
 13786     10F3  00FC               	movwf	LCD_Write_Text@text+1
 13787     10F4  3004               	movlw	4
 13788     10F5  3199  21FD  3190   	fcall	_LCD_Write_Text
 13789                           
 13790                           ;Menu.c: 338:     LCD_Write(4,4,op+48);
 13791     10F8  3004               	movlw	4
 13792     10F9  00FA               	movwf	LCD_Write@col
 13793     10FA  0021               	movlb	1	; select bank1
 13794     10FB  086F               	movf	_op^(0+128),w
 13795     10FC  3E30               	addlw	48
 13796     10FD  00FB               	movwf	LCD_Write@letra
 13797     10FE  3004               	movlw	4
 13798     10FF  3190  2001  3190   	fcall	_LCD_Write
 13799                           
 13800                           ;Menu.c: 340:     switch(op){
 13801     1102  294E               	goto	l5210
 13802     1103                     l5202:
 13803     1103  3005               	movlw	5
 13804     1104  00FA               	movwf	LCD_Write@col
 13805     1105  303C               	movlw	60
 13806     1106  00FB               	movwf	LCD_Write@letra
 13807     1107  3002               	movlw	2
 13808     1108  3190  2001  3190   	fcall	_LCD_Write
 13809                           
 13810                           ;Menu.c: 342:                 LCD_Write(3,6,' ');
 13811     110B  3006               	movlw	6
 13812     110C  00FA               	movwf	LCD_Write@col
 13813     110D  3020               	movlw	32
 13814     110E  00FB               	movwf	LCD_Write@letra
 13815     110F  3003               	movlw	3
 13816     1110  3190  2001  3190   	fcall	_LCD_Write
 13817                           
 13818                           ;Menu.c: 343:                 LCD_Write(2,15,' ');
 13819     1113  300F               	movlw	15
 13820     1114  00FA               	movwf	LCD_Write@col
 13821     1115  3020               	movlw	32
 13822     1116  00FB               	movwf	LCD_Write@letra
 13823     1117  3002               	movlw	2
 13824     1118  3190  2001  3190   	fcall	_LCD_Write
 13825                           
 13826                           ;Menu.c: 344:                 break;
 13827     111B  2963               	goto	l318
 13828     111C                     l5204:
 13829     111C  3005               	movlw	5
 13830     111D  00FA               	movwf	LCD_Write@col
 13831     111E  3020               	movlw	32
 13832     111F  00FB               	movwf	LCD_Write@letra
 13833     1120  3002               	movlw	2
 13834     1121  3190  2001  3190   	fcall	_LCD_Write
 13835                           
 13836                           ;Menu.c: 346:                 LCD_Write(3,6,'<');
 13837     1124  3006               	movlw	6
 13838     1125  00FA               	movwf	LCD_Write@col
 13839     1126  303C               	movlw	60
 13840     1127  00FB               	movwf	LCD_Write@letra
 13841     1128  3003               	movlw	3
 13842     1129  3190  2001  3190   	fcall	_LCD_Write
 13843                           
 13844                           ;Menu.c: 347:                 LCD_Write(2,15,' ');
 13845     112C  300F               	movlw	15
 13846     112D  00FA               	movwf	LCD_Write@col
 13847     112E  3020               	movlw	32
 13848     112F  00FB               	movwf	LCD_Write@letra
 13849     1130  3002               	movlw	2
 13850     1131  3190  2001  3190   	fcall	_LCD_Write
 13851                           
 13852                           ;Menu.c: 348:                 break;
 13853     1134  2963               	goto	l318
 13854     1135                     l5206:
 13855     1135  3005               	movlw	5
 13856     1136  00FA               	movwf	LCD_Write@col
 13857     1137  3020               	movlw	32
 13858     1138  00FB               	movwf	LCD_Write@letra
 13859     1139  3002               	movlw	2
 13860     113A  3190  2001  3190   	fcall	_LCD_Write
 13861                           
 13862                           ;Menu.c: 350:                 LCD_Write(3,6,' ');
 13863     113D  3006               	movlw	6
 13864     113E  00FA               	movwf	LCD_Write@col
 13865     113F  3020               	movlw	32
 13866     1140  00FB               	movwf	LCD_Write@letra
 13867     1141  3003               	movlw	3
 13868     1142  3190  2001  3190   	fcall	_LCD_Write
 13869                           
 13870                           ;Menu.c: 351:                 LCD_Write(2,15,'<');
 13871     1145  300F               	movlw	15
 13872     1146  00FA               	movwf	LCD_Write@col
 13873     1147  303C               	movlw	60
 13874     1148  00FB               	movwf	LCD_Write@letra
 13875     1149  3002               	movlw	2
 13876     114A  3190  2001  3190   	fcall	_LCD_Write
 13877                           
 13878                           ;Menu.c: 352:                 break;
 13879     114D  2963               	goto	l318
 13880     114E                     l5210:
 13881     114E  0021               	movlb	1	; select bank1
 13882     114F  086F               	movf	_op^(0+128),w
 13883     1150  0020               	movlb	0	; select bank0
 13884     1151  00A1               	movwf	??_MenuL2
 13885     1152  01A2               	clrf	??_MenuL2+1
 13886                           
 13887                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13888                           ; Switch size 1, requested type "simple"
 13889                           ; Number of cases is 1, Range of values is 0 to 0
 13890                           ; switch strategies available:
 13891                           ; Name         Instructions Cycles
 13892                           ; simple_byte            4     3 (average)
 13893                           ; direct_byte            8     6 (fixed)
 13894                           ; jumptable            260     6 (fixed)
 13895                           ;	Chosen strategy is simple_byte
 13896     1153  0822               	movf	??_MenuL2+1,w
 13897     1154  3A00               	xorlw	0	; case 0
 13898     1155  1903               	skipnz
 13899     1156  2958               	goto	l5910
 13900     1157  2963               	goto	l318
 13901     1158                     l5910:
 13902                           
 13903                           ; Switch size 1, requested type "simple"
 13904                           ; Number of cases is 3, Range of values is 1 to 3
 13905                           ; switch strategies available:
 13906                           ; Name         Instructions Cycles
 13907                           ; simple_byte           10     6 (average)
 13908                           ; direct_byte           15     9 (fixed)
 13909                           ; jumptable            263     9 (fixed)
 13910                           ;	Chosen strategy is simple_byte
 13911     1158  0821               	movf	??_MenuL2,w
 13912     1159  3A01               	xorlw	1	; case 1
 13913     115A  1903               	skipnz
 13914     115B  2903               	goto	l5202
 13915     115C  3A03               	xorlw	3	; case 2
 13916     115D  1903               	skipnz
 13917     115E  291C               	goto	l5204
 13918     115F  3A01               	xorlw	1	; case 3
 13919     1160  1903               	skipnz
 13920     1161  2935               	goto	l5206
 13921     1162  2963               	goto	l318
 13922     1163                     l318:
 13923                           
 13924                           ;Menu.c: 355:     if(PORTBbits.RB0 == 1){
 13925     1163  0020               	movlb	0	; select bank0
 13926     1164  1C0D               	btfss	13,0	;volatile
 13927     1165  2967               	goto	u5421
 13928     1166  2968               	goto	u5420
 13929     1167                     u5421:
 13930     1167  2979               	goto	l321
 13931     1168                     u5420:
 13932     1168                     l322:
 13933     1168  180D               	btfsc	13,0	;volatile
 13934     1169  296B               	goto	u5431
 13935     116A  296C               	goto	u5430
 13936     116B                     u5431:
 13937     116B  2968               	goto	l322
 13938     116C                     u5430:
 13939     116C                     l5214:
 13940                           
 13941                           ;Menu.c: 357:         op++;
 13942     116C  3001               	movlw	1
 13943     116D  00A1               	movwf	??_MenuL2
 13944     116E  0821               	movf	??_MenuL2,w
 13945     116F  0021               	movlb	1	; select bank1
 13946     1170  07EF               	addwf	_op^(0+128),f
 13947     1171                     l5216:
 13948                           
 13949                           ;Menu.c: 358:         if(op>3)
 13950     1171  3004               	movlw	4
 13951     1172  026F               	subwf	_op^(0+128),w
 13952     1173  1C03               	skipc
 13953     1174  2976               	goto	u5441
 13954     1175  2977               	goto	u5440
 13955     1176                     u5441:
 13956     1176  2979               	goto	l321
 13957     1177                     u5440:
 13958     1177                     l5218:
 13959                           
 13960                           ;Menu.c: 359:             op=1;
 13961     1177  01EF               	clrf	_op^(0+128)
 13962     1178  0AEF               	incf	_op^(0+128),f
 13963     1179                     l321:	
 13964                           ;Menu.c: 360:     }
 13965                           
 13966                           
 13967                           ;Menu.c: 361:     if(PORTBbits.RB1 == 1){
 13968     1179  0020               	movlb	0	; select bank0
 13969     117A  1C8D               	btfss	13,1	;volatile
 13970     117B  297D               	goto	u5451
 13971     117C  297E               	goto	u5450
 13972     117D                     u5451:
 13973     117D  298C               	goto	l5226
 13974     117E                     u5450:
 13975     117E                     l327:
 13976     117E  188D               	btfsc	13,1	;volatile
 13977     117F  2981               	goto	u5461
 13978     1180  2982               	goto	u5460
 13979     1181                     u5461:
 13980     1181  297E               	goto	l327
 13981     1182                     u5460:
 13982     1182                     l5222:
 13983                           
 13984                           ;Menu.c: 363:         op--;
 13985     1182  3001               	movlw	1
 13986     1183  0021               	movlb	1	; select bank1
 13987     1184  02EF               	subwf	_op^(0+128),f
 13988                           
 13989                           ;Menu.c: 364:         if(op<1)
 13990     1185  086F               	movf	_op^(0+128),w
 13991     1186  1D03               	btfss	3,2
 13992     1187  2989               	goto	u5471
 13993     1188  298A               	goto	u5470
 13994     1189                     u5471:
 13995     1189  298C               	goto	l5226
 13996     118A                     u5470:
 13997     118A                     l5224:
 13998                           
 13999                           ;Menu.c: 365:             op=3;
 14000     118A  3003               	movlw	3
 14001     118B  00EF               	movwf	_op^(0+128)
 14002     118C                     l5226:
 14003                           
 14004                           ;Menu.c: 367:     if(PORTBbits.RB2 == 1){
 14005     118C  0020               	movlb	0	; select bank0
 14006     118D  1D0D               	btfss	13,2	;volatile
 14007     118E  2990               	goto	u5481
 14008     118F  2991               	goto	u5480
 14009     1190                     u5481:
 14010     1190  29BC               	goto	l340
 14011     1191                     u5480:
 14012     1191                     l332:
 14013     1191  190D               	btfsc	13,2	;volatile
 14014     1192  2994               	goto	u5491
 14015     1193  2995               	goto	u5490
 14016     1194                     u5491:
 14017     1194  2991               	goto	l332
 14018     1195                     u5490:
 14019     1195  29A3               	goto	l5236
 14020     1196                     l336:	
 14021                           ;Menu.c: 370:             case 1: LATAbits.LATA3=1; break;
 14022                           
 14023     1196  0022               	movlb	2	; select bank2
 14024     1197  158C               	bsf	12,3	;volatile
 14025     1198  29B8               	goto	l5238
 14026     1199                     l338:	
 14027                           ;Menu.c: 371:             case 2: LATAbits.LATA3=0; break;
 14028                           
 14029     1199  0022               	movlb	2	; select bank2
 14030     119A  118C               	bcf	12,3	;volatile
 14031     119B  29B8               	goto	l5238
 14032     119C                     l5230:
 14033     119C  3002               	movlw	2
 14034     119D  0022               	movlb	2	; select bank2
 14035     119E  00B6               	movwf	_cMenu^(0+256)
 14036     119F                     l5232:
 14037     119F  0021               	movlb	1	; select bank1
 14038     11A0  01EF               	clrf	_op^(0+128)
 14039     11A1  0AEF               	incf	_op^(0+128),f
 14040     11A2  29B8               	goto	l5238
 14041     11A3                     l5236:
 14042     11A3  0021               	movlb	1	; select bank1
 14043     11A4  086F               	movf	_op^(0+128),w
 14044     11A5  0020               	movlb	0	; select bank0
 14045     11A6  00A1               	movwf	??_MenuL2
 14046     11A7  01A2               	clrf	??_MenuL2+1
 14047                           
 14048                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14049                           ; Switch size 1, requested type "simple"
 14050                           ; Number of cases is 1, Range of values is 0 to 0
 14051                           ; switch strategies available:
 14052                           ; Name         Instructions Cycles
 14053                           ; simple_byte            4     3 (average)
 14054                           ; direct_byte            8     6 (fixed)
 14055                           ; jumptable            260     6 (fixed)
 14056                           ;	Chosen strategy is simple_byte
 14057     11A8  0822               	movf	??_MenuL2+1,w
 14058     11A9  3A00               	xorlw	0	; case 0
 14059     11AA  1903               	skipnz
 14060     11AB  29AD               	goto	l5912
 14061     11AC  29B8               	goto	l5238
 14062     11AD                     l5912:
 14063                           
 14064                           ; Switch size 1, requested type "simple"
 14065                           ; Number of cases is 3, Range of values is 1 to 3
 14066                           ; switch strategies available:
 14067                           ; Name         Instructions Cycles
 14068                           ; simple_byte           10     6 (average)
 14069                           ; direct_byte           15     9 (fixed)
 14070                           ; jumptable            263     9 (fixed)
 14071                           ;	Chosen strategy is simple_byte
 14072     11AD  0821               	movf	??_MenuL2,w
 14073     11AE  3A01               	xorlw	1	; case 1
 14074     11AF  1903               	skipnz
 14075     11B0  2996               	goto	l336
 14076     11B1  3A03               	xorlw	3	; case 2
 14077     11B2  1903               	skipnz
 14078     11B3  2999               	goto	l338
 14079     11B4  3A01               	xorlw	1	; case 3
 14080     11B5  1903               	skipnz
 14081     11B6  299C               	goto	l5230
 14082     11B7  29B8               	goto	l5238
 14083     11B8                     l5238:
 14084                           
 14085                           ;Menu.c: 374:         LCD_Cmd(1);
 14086     11B8  3001               	movlw	1
 14087     11B9  3199  21E1  3190   	fcall	_LCD_Cmd
 14088     11BC                     l340:
 14089     11BC  0008               	return
 14090     11BD                     __end_of_MenuL2:
 14091                           
 14092                           	psect	text44
 14093     1F13                     __ptext44:	
 14094 ;; *************** function _MenuL1 *****************
 14095 ;; Defined at:
 14096 ;;		line 287 in file "Menu.c"
 14097 ;; Parameters:    Size  Location     Type
 14098 ;;		None
 14099 ;; Auto vars:     Size  Location     Type
 14100 ;;		None
 14101 ;; Return value:  Size  Location     Type
 14102 ;;                  1    wreg      void 
 14103 ;; Registers used:
 14104 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14105 ;; Tracked objects:
 14106 ;;		On entry : 0/0
 14107 ;;		On exit  : 0/0
 14108 ;;		Unchanged: 0/0
 14109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14112 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14113 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14114 ;;Total ram usage:        2 bytes
 14115 ;; Hardware stack levels used: 1
 14116 ;; Hardware stack levels required when called: 4
 14117 ;; This function calls:
 14118 ;;		_LCD_Cmd
 14119 ;;		_LCD_Write
 14120 ;;		_LCD_Write_Text
 14121 ;; This function is called by:
 14122 ;;		_main
 14123 ;; This function uses a non-reentrant model
 14124 ;;
 14125                           
 14126     1F13                     _MenuL1:	
 14127                           ;psect for function _MenuL1
 14128                           
 14129     1F13                     l5152:	
 14130                           ;incstack = 0
 14131                           ; Regs used in _MenuL1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14132                           
 14133                           
 14134                           ;Menu.c: 289:     LCD_Write_Text(1,1,"       MENU LED1    ");
 14135     1F13  01FA               	clrf	LCD_Write_Text@col
 14136     1F14  0AFA               	incf	LCD_Write_Text@col,f
 14137     1F15  30BD               	movlw	low (STR_17| (0+32768))
 14138     1F16  00FB               	movwf	LCD_Write_Text@text
 14139     1F17  30A0               	movlw	high (STR_17| (0+32768))
 14140     1F18  00FC               	movwf	LCD_Write_Text@text+1
 14141     1F19  3001               	movlw	1
 14142     1F1A  3199  21FD  319F   	fcall	_LCD_Write_Text
 14143                           
 14144                           ;Menu.c: 290:     LCD_Write_Text(2,1,"1.ON    3.BACK      ");
 14145     1F1D  01FA               	clrf	LCD_Write_Text@col
 14146     1F1E  0AFA               	incf	LCD_Write_Text@col,f
 14147     1F1F  307E               	movlw	low (STR_18| (0+32768))
 14148     1F20  00FB               	movwf	LCD_Write_Text@text
 14149     1F21  30A0               	movlw	high (STR_18| (0+32768))
 14150     1F22  00FC               	movwf	LCD_Write_Text@text+1
 14151     1F23  3002               	movlw	2
 14152     1F24  3199  21FD  319F   	fcall	_LCD_Write_Text
 14153                           
 14154                           ;Menu.c: 291:     LCD_Write_Text(3,1,"2.OFF               ");
 14155     1F27  01FA               	clrf	LCD_Write_Text@col
 14156     1F28  0AFA               	incf	LCD_Write_Text@col,f
 14157     1F29  3015               	movlw	low (STR_19| (0+32768))
 14158     1F2A  00FB               	movwf	LCD_Write_Text@text
 14159     1F2B  30A0               	movlw	high (STR_19| (0+32768))
 14160     1F2C  00FC               	movwf	LCD_Write_Text@text+1
 14161     1F2D  3003               	movlw	3
 14162     1F2E  3199  21FD  319F   	fcall	_LCD_Write_Text
 14163                           
 14164                           ;Menu.c: 292:     LCD_Write_Text(4,1,"OP:                 ");
 14165     1F31  01FA               	clrf	LCD_Write_Text@col
 14166     1F32  0AFA               	incf	LCD_Write_Text@col,f
 14167     1F33  3000               	movlw	low (STR_4| (0+32768))
 14168     1F34  00FB               	movwf	LCD_Write_Text@text
 14169     1F35  30A0               	movlw	high (STR_4| (0+32768))
 14170     1F36  00FC               	movwf	LCD_Write_Text@text+1
 14171     1F37  3004               	movlw	4
 14172     1F38  3199  21FD  319F   	fcall	_LCD_Write_Text
 14173                           
 14174                           ;Menu.c: 293:     LCD_Write(4,4,op+48);
 14175     1F3B  3004               	movlw	4
 14176     1F3C  00FA               	movwf	LCD_Write@col
 14177     1F3D  0021               	movlb	1	; select bank1
 14178     1F3E  086F               	movf	_op^(0+128),w
 14179     1F3F  3E30               	addlw	48
 14180     1F40  00FB               	movwf	LCD_Write@letra
 14181     1F41  3004               	movlw	4
 14182     1F42  3190  2001  319F   	fcall	_LCD_Write
 14183                           
 14184                           ;Menu.c: 295:     switch(op){
 14185     1F45  2F91               	goto	l5162
 14186     1F46                     l5154:
 14187     1F46  3005               	movlw	5
 14188     1F47  00FA               	movwf	LCD_Write@col
 14189     1F48  303C               	movlw	60
 14190     1F49  00FB               	movwf	LCD_Write@letra
 14191     1F4A  3002               	movlw	2
 14192     1F4B  3190  2001  319F   	fcall	_LCD_Write
 14193                           
 14194                           ;Menu.c: 297:                 LCD_Write(3,6,' ');
 14195     1F4E  3006               	movlw	6
 14196     1F4F  00FA               	movwf	LCD_Write@col
 14197     1F50  3020               	movlw	32
 14198     1F51  00FB               	movwf	LCD_Write@letra
 14199     1F52  3003               	movlw	3
 14200     1F53  3190  2001  319F   	fcall	_LCD_Write
 14201                           
 14202                           ;Menu.c: 298:                 LCD_Write(2,15,' ');
 14203     1F56  300F               	movlw	15
 14204     1F57  00FA               	movwf	LCD_Write@col
 14205     1F58  3020               	movlw	32
 14206     1F59  00FB               	movwf	LCD_Write@letra
 14207     1F5A  3002               	movlw	2
 14208     1F5B  3190  2001  319F   	fcall	_LCD_Write
 14209                           
 14210                           ;Menu.c: 299:                 break;
 14211     1F5E  2FA6               	goto	l291
 14212     1F5F                     l5156:
 14213     1F5F  3005               	movlw	5
 14214     1F60  00FA               	movwf	LCD_Write@col
 14215     1F61  3020               	movlw	32
 14216     1F62  00FB               	movwf	LCD_Write@letra
 14217     1F63  3002               	movlw	2
 14218     1F64  3190  2001  319F   	fcall	_LCD_Write
 14219                           
 14220                           ;Menu.c: 301:                 LCD_Write(3,6,'<');
 14221     1F67  3006               	movlw	6
 14222     1F68  00FA               	movwf	LCD_Write@col
 14223     1F69  303C               	movlw	60
 14224     1F6A  00FB               	movwf	LCD_Write@letra
 14225     1F6B  3003               	movlw	3
 14226     1F6C  3190  2001  319F   	fcall	_LCD_Write
 14227                           
 14228                           ;Menu.c: 302:                 LCD_Write(2,15,' ');
 14229     1F6F  300F               	movlw	15
 14230     1F70  00FA               	movwf	LCD_Write@col
 14231     1F71  3020               	movlw	32
 14232     1F72  00FB               	movwf	LCD_Write@letra
 14233     1F73  3002               	movlw	2
 14234     1F74  3190  2001  319F   	fcall	_LCD_Write
 14235                           
 14236                           ;Menu.c: 303:                 break;
 14237     1F77  2FA6               	goto	l291
 14238     1F78                     l5158:
 14239     1F78  3005               	movlw	5
 14240     1F79  00FA               	movwf	LCD_Write@col
 14241     1F7A  3020               	movlw	32
 14242     1F7B  00FB               	movwf	LCD_Write@letra
 14243     1F7C  3002               	movlw	2
 14244     1F7D  3190  2001  319F   	fcall	_LCD_Write
 14245                           
 14246                           ;Menu.c: 305:                 LCD_Write(3,6,' ');
 14247     1F80  3006               	movlw	6
 14248     1F81  00FA               	movwf	LCD_Write@col
 14249     1F82  3020               	movlw	32
 14250     1F83  00FB               	movwf	LCD_Write@letra
 14251     1F84  3003               	movlw	3
 14252     1F85  3190  2001  319F   	fcall	_LCD_Write
 14253                           
 14254                           ;Menu.c: 306:                 LCD_Write(2,15,'<');
 14255     1F88  300F               	movlw	15
 14256     1F89  00FA               	movwf	LCD_Write@col
 14257     1F8A  303C               	movlw	60
 14258     1F8B  00FB               	movwf	LCD_Write@letra
 14259     1F8C  3002               	movlw	2
 14260     1F8D  3190  2001  319F   	fcall	_LCD_Write
 14261                           
 14262                           ;Menu.c: 307:                 break;
 14263     1F90  2FA6               	goto	l291
 14264     1F91                     l5162:
 14265     1F91  0021               	movlb	1	; select bank1
 14266     1F92  086F               	movf	_op^(0+128),w
 14267     1F93  0020               	movlb	0	; select bank0
 14268     1F94  00A1               	movwf	??_MenuL1
 14269     1F95  01A2               	clrf	??_MenuL1+1
 14270                           
 14271                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14272                           ; Switch size 1, requested type "simple"
 14273                           ; Number of cases is 1, Range of values is 0 to 0
 14274                           ; switch strategies available:
 14275                           ; Name         Instructions Cycles
 14276                           ; simple_byte            4     3 (average)
 14277                           ; direct_byte            8     6 (fixed)
 14278                           ; jumptable            260     6 (fixed)
 14279                           ;	Chosen strategy is simple_byte
 14280     1F96  0822               	movf	??_MenuL1+1,w
 14281     1F97  3A00               	xorlw	0	; case 0
 14282     1F98  1903               	skipnz
 14283     1F99  2F9B               	goto	l5914
 14284     1F9A  2FA6               	goto	l291
 14285     1F9B                     l5914:
 14286                           
 14287                           ; Switch size 1, requested type "simple"
 14288                           ; Number of cases is 3, Range of values is 1 to 3
 14289                           ; switch strategies available:
 14290                           ; Name         Instructions Cycles
 14291                           ; simple_byte           10     6 (average)
 14292                           ; direct_byte           15     9 (fixed)
 14293                           ; jumptable            263     9 (fixed)
 14294                           ;	Chosen strategy is simple_byte
 14295     1F9B  0821               	movf	??_MenuL1,w
 14296     1F9C  3A01               	xorlw	1	; case 1
 14297     1F9D  1903               	skipnz
 14298     1F9E  2F46               	goto	l5154
 14299     1F9F  3A03               	xorlw	3	; case 2
 14300     1FA0  1903               	skipnz
 14301     1FA1  2F5F               	goto	l5156
 14302     1FA2  3A01               	xorlw	1	; case 3
 14303     1FA3  1903               	skipnz
 14304     1FA4  2F78               	goto	l5158
 14305     1FA5  2FA6               	goto	l291
 14306     1FA6                     l291:
 14307                           
 14308                           ;Menu.c: 310:     if(PORTBbits.RB0 == 1){
 14309     1FA6  0020               	movlb	0	; select bank0
 14310     1FA7  1C0D               	btfss	13,0	;volatile
 14311     1FA8  2FAA               	goto	u5341
 14312     1FA9  2FAB               	goto	u5340
 14313     1FAA                     u5341:
 14314     1FAA  2FBC               	goto	l294
 14315     1FAB                     u5340:
 14316     1FAB                     l295:
 14317     1FAB  180D               	btfsc	13,0	;volatile
 14318     1FAC  2FAE               	goto	u5351
 14319     1FAD  2FAF               	goto	u5350
 14320     1FAE                     u5351:
 14321     1FAE  2FAB               	goto	l295
 14322     1FAF                     u5350:
 14323     1FAF                     l5166:
 14324                           
 14325                           ;Menu.c: 312:         op++;
 14326     1FAF  3001               	movlw	1
 14327     1FB0  00A1               	movwf	??_MenuL1
 14328     1FB1  0821               	movf	??_MenuL1,w
 14329     1FB2  0021               	movlb	1	; select bank1
 14330     1FB3  07EF               	addwf	_op^(0+128),f
 14331     1FB4                     l5168:
 14332                           
 14333                           ;Menu.c: 313:         if(op>3)
 14334     1FB4  3004               	movlw	4
 14335     1FB5  026F               	subwf	_op^(0+128),w
 14336     1FB6  1C03               	skipc
 14337     1FB7  2FB9               	goto	u5361
 14338     1FB8  2FBA               	goto	u5360
 14339     1FB9                     u5361:
 14340     1FB9  2FBC               	goto	l294
 14341     1FBA                     u5360:
 14342     1FBA                     l5170:
 14343                           
 14344                           ;Menu.c: 314:             op=1;
 14345     1FBA  01EF               	clrf	_op^(0+128)
 14346     1FBB  0AEF               	incf	_op^(0+128),f
 14347     1FBC                     l294:	
 14348                           ;Menu.c: 315:     }
 14349                           
 14350                           
 14351                           ;Menu.c: 316:     if(PORTBbits.RB1 == 1){
 14352     1FBC  0020               	movlb	0	; select bank0
 14353     1FBD  1C8D               	btfss	13,1	;volatile
 14354     1FBE  2FC0               	goto	u5371
 14355     1FBF  2FC1               	goto	u5370
 14356     1FC0                     u5371:
 14357     1FC0  2FCF               	goto	l5178
 14358     1FC1                     u5370:
 14359     1FC1                     l300:
 14360     1FC1  188D               	btfsc	13,1	;volatile
 14361     1FC2  2FC4               	goto	u5381
 14362     1FC3  2FC5               	goto	u5380
 14363     1FC4                     u5381:
 14364     1FC4  2FC1               	goto	l300
 14365     1FC5                     u5380:
 14366     1FC5                     l5174:
 14367                           
 14368                           ;Menu.c: 318:         op--;
 14369     1FC5  3001               	movlw	1
 14370     1FC6  0021               	movlb	1	; select bank1
 14371     1FC7  02EF               	subwf	_op^(0+128),f
 14372                           
 14373                           ;Menu.c: 319:         if(op<1)
 14374     1FC8  086F               	movf	_op^(0+128),w
 14375     1FC9  1D03               	btfss	3,2
 14376     1FCA  2FCC               	goto	u5391
 14377     1FCB  2FCD               	goto	u5390
 14378     1FCC                     u5391:
 14379     1FCC  2FCF               	goto	l5178
 14380     1FCD                     u5390:
 14381     1FCD                     l5176:
 14382                           
 14383                           ;Menu.c: 320:             op=3;
 14384     1FCD  3003               	movlw	3
 14385     1FCE  00EF               	movwf	_op^(0+128)
 14386     1FCF                     l5178:
 14387                           
 14388                           ;Menu.c: 322:     if(PORTBbits.RB2 == 1){
 14389     1FCF  0020               	movlb	0	; select bank0
 14390     1FD0  1D0D               	btfss	13,2	;volatile
 14391     1FD1  2FD3               	goto	u5401
 14392     1FD2  2FD4               	goto	u5400
 14393     1FD3                     u5401:
 14394     1FD3  2FFF               	goto	l313
 14395     1FD4                     u5400:
 14396     1FD4                     l305:
 14397     1FD4  190D               	btfsc	13,2	;volatile
 14398     1FD5  2FD7               	goto	u5411
 14399     1FD6  2FD8               	goto	u5410
 14400     1FD7                     u5411:
 14401     1FD7  2FD4               	goto	l305
 14402     1FD8                     u5410:
 14403     1FD8  2FE6               	goto	l5188
 14404     1FD9                     l309:	
 14405                           ;Menu.c: 325:             case 1: LATAbits.LATA2=1; break;
 14406                           
 14407     1FD9  0022               	movlb	2	; select bank2
 14408     1FDA  150C               	bsf	12,2	;volatile
 14409     1FDB  2FFB               	goto	l5190
 14410     1FDC                     l311:	
 14411                           ;Menu.c: 326:             case 2: LATAbits.LATA2=0; break;
 14412                           
 14413     1FDC  0022               	movlb	2	; select bank2
 14414     1FDD  110C               	bcf	12,2	;volatile
 14415     1FDE  2FFB               	goto	l5190
 14416     1FDF                     l5182:
 14417     1FDF  3002               	movlw	2
 14418     1FE0  0022               	movlb	2	; select bank2
 14419     1FE1  00B6               	movwf	_cMenu^(0+256)
 14420     1FE2                     l5184:
 14421     1FE2  0021               	movlb	1	; select bank1
 14422     1FE3  01EF               	clrf	_op^(0+128)
 14423     1FE4  0AEF               	incf	_op^(0+128),f
 14424     1FE5  2FFB               	goto	l5190
 14425     1FE6                     l5188:
 14426     1FE6  0021               	movlb	1	; select bank1
 14427     1FE7  086F               	movf	_op^(0+128),w
 14428     1FE8  0020               	movlb	0	; select bank0
 14429     1FE9  00A1               	movwf	??_MenuL1
 14430     1FEA  01A2               	clrf	??_MenuL1+1
 14431                           
 14432                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14433                           ; Switch size 1, requested type "simple"
 14434                           ; Number of cases is 1, Range of values is 0 to 0
 14435                           ; switch strategies available:
 14436                           ; Name         Instructions Cycles
 14437                           ; simple_byte            4     3 (average)
 14438                           ; direct_byte            8     6 (fixed)
 14439                           ; jumptable            260     6 (fixed)
 14440                           ;	Chosen strategy is simple_byte
 14441     1FEB  0822               	movf	??_MenuL1+1,w
 14442     1FEC  3A00               	xorlw	0	; case 0
 14443     1FED  1903               	skipnz
 14444     1FEE  2FF0               	goto	l5916
 14445     1FEF  2FFB               	goto	l5190
 14446     1FF0                     l5916:
 14447                           
 14448                           ; Switch size 1, requested type "simple"
 14449                           ; Number of cases is 3, Range of values is 1 to 3
 14450                           ; switch strategies available:
 14451                           ; Name         Instructions Cycles
 14452                           ; simple_byte           10     6 (average)
 14453                           ; direct_byte           15     9 (fixed)
 14454                           ; jumptable            263     9 (fixed)
 14455                           ;	Chosen strategy is simple_byte
 14456     1FF0  0821               	movf	??_MenuL1,w
 14457     1FF1  3A01               	xorlw	1	; case 1
 14458     1FF2  1903               	skipnz
 14459     1FF3  2FD9               	goto	l309
 14460     1FF4  3A03               	xorlw	3	; case 2
 14461     1FF5  1903               	skipnz
 14462     1FF6  2FDC               	goto	l311
 14463     1FF7  3A01               	xorlw	1	; case 3
 14464     1FF8  1903               	skipnz
 14465     1FF9  2FDF               	goto	l5182
 14466     1FFA  2FFB               	goto	l5190
 14467     1FFB                     l5190:
 14468                           
 14469                           ;Menu.c: 329:         LCD_Cmd(1);
 14470     1FFB  3001               	movlw	1
 14471     1FFC  3199  21E1  319F   	fcall	_LCD_Cmd
 14472     1FFF                     l313:
 14473     1FFF  0008               	return
 14474     2000                     __end_of_MenuL1:
 14475                           
 14476                           	psect	text45
 14477     19FD                     __ptext45:	
 14478 ;; *************** function _LCD_Write_Text *****************
 14479 ;; Defined at:
 14480 ;;		line 104 in file "LCD_LIB.c"
 14481 ;; Parameters:    Size  Location     Type
 14482 ;;  fila            1    wreg     unsigned char 
 14483 ;;  col             1   10[COMMON] unsigned char 
 14484 ;;  text            2   11[COMMON] PTR unsigned char 
 14485 ;;		 -> STR_36(21), STR_35(21), STR_34(21), STR_33(21), 
 14486 ;;		 -> STR_32(21), STR_31(21), STR_30(21), STR_29(21), 
 14487 ;;		 -> STR_28(21), STR_27(21), STR_26(21), STR_25(21), 
 14488 ;;		 -> STR_24(21), STR_23(21), STR_22(21), STR_21(21), 
 14489 ;;		 -> STR_20(21), STR_19(21), STR_18(21), STR_17(21), 
 14490 ;;		 -> STR_16(21), STR_15(21), STR_14(21), STR_13(21), 
 14491 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 14492 ;;		 -> strLCD(20), STR_6(21), STR_5(21), STR_4(21), 
 14493 ;;		 -> STR_3(21), STR_2(21), STR_1(21), 
 14494 ;; Auto vars:     Size  Location     Type
 14495 ;;  fila            1    0[BANK0 ] unsigned char 
 14496 ;; Return value:  Size  Location     Type
 14497 ;;                  1    wreg      void 
 14498 ;; Registers used:
 14499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14500 ;; Tracked objects:
 14501 ;;		On entry : 0/0
 14502 ;;		On exit  : 0/0
 14503 ;;		Unchanged: 0/0
 14504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14505 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14506 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14507 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14508 ;;      Totals:         4       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14509 ;;Total ram usage:        5 bytes
 14510 ;; Hardware stack levels used: 1
 14511 ;; Hardware stack levels required when called: 3
 14512 ;; This function calls:
 14513 ;;		_LCD_Set_Cursor
 14514 ;;		_LCD_Write_Cp
 14515 ;; This function is called by:
 14516 ;;		_MenuPPAL
 14517 ;;		_MenuSensores
 14518 ;;		_MenuMotores
 14519 ;;		_MenuLeds
 14520 ;;		_MenuL1
 14521 ;;		_MenuL2
 14522 ;;		_MenuL3
 14523 ;;		_MenuMOTORA
 14524 ;;		_MenuMOTORB
 14525 ;; This function uses a non-reentrant model
 14526 ;;
 14527                           
 14528     19FD                     _LCD_Write_Text:	
 14529                           ;psect for function _LCD_Write_Text
 14530                           
 14531                           
 14532                           ;incstack = 0
 14533                           ; Regs used in _LCD_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14534                           ;LCD_Write_Text@fila stored from wreg
 14535     19FD  0020               	movlb	0	; select bank0
 14536     19FE  00A0               	movwf	LCD_Write_Text@fila
 14537     19FF                     l4810:
 14538                           
 14539                           ;LCD_LIB.c: 105:     LCD_Set_Cursor(fila, col);
 14540     19FF  087A               	movf	LCD_Write_Text@col,w
 14541     1A00  00F5               	movwf	LCD_Set_Cursor@col
 14542     1A01  0820               	movf	LCD_Write_Text@fila,w
 14543     1A02  3188  2006  3199   	fcall	_LCD_Set_Cursor
 14544                           
 14545                           ;LCD_LIB.c: 106:     while(*text){
 14546     1A05  2A12               	goto	l4816
 14547     1A06                     l4812:
 14548                           
 14549                           ;LCD_LIB.c: 107:         LCD_Write_Cp(*text);
 14550     1A06  087B               	movf	LCD_Write_Text@text,w
 14551     1A07  0084               	movwf	4
 14552     1A08  087C               	movf	LCD_Write_Text@text+1,w
 14553     1A09  0085               	movwf	5
 14554     1A0A  0800               	movf	0,w	;code access
 14555     1A0B  3199  21B6  3199   	fcall	_LCD_Write_Cp
 14556     1A0E                     l4814:
 14557                           
 14558                           ;LCD_LIB.c: 108:         text++;
 14559     1A0E  3001               	movlw	1
 14560     1A0F  07FB               	addwf	LCD_Write_Text@text,f
 14561     1A10  3000               	movlw	0
 14562     1A11  3DFC               	addwfc	LCD_Write_Text@text+1,f
 14563     1A12                     l4816:
 14564                           
 14565                           ;LCD_LIB.c: 106:     while(*text){
 14566     1A12  087B               	movf	LCD_Write_Text@text,w
 14567     1A13  0084               	movwf	4
 14568     1A14  087C               	movf	LCD_Write_Text@text+1,w
 14569     1A15  0085               	movwf	5
 14570     1A16  0012               	moviw fsr0++
 14571     1A17  1D03               	btfss	3,2
 14572     1A18  2A1A               	goto	u4931
 14573     1A19  2A1B               	goto	u4930
 14574     1A1A                     u4931:
 14575     1A1A  2A06               	goto	l4812
 14576     1A1B                     u4930:
 14577     1A1B                     l121:
 14578     1A1B  0008               	return
 14579     1A1C                     __end_of_LCD_Write_Text:
 14580                           
 14581                           	psect	text46
 14582     1001                     __ptext46:	
 14583 ;; *************** function _LCD_Write *****************
 14584 ;; Defined at:
 14585 ;;		line 100 in file "LCD_LIB.c"
 14586 ;; Parameters:    Size  Location     Type
 14587 ;;  fila            1    wreg     unsigned char 
 14588 ;;  col             1   10[COMMON] unsigned char 
 14589 ;;  letra           1   11[COMMON] unsigned char 
 14590 ;; Auto vars:     Size  Location     Type
 14591 ;;  fila            1   12[COMMON] unsigned char 
 14592 ;; Return value:  Size  Location     Type
 14593 ;;                  1    wreg      void 
 14594 ;; Registers used:
 14595 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14596 ;; Tracked objects:
 14597 ;;		On entry : 0/0
 14598 ;;		On exit  : 0/0
 14599 ;;		Unchanged: 0/0
 14600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14602 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14604 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14605 ;;Total ram usage:        3 bytes
 14606 ;; Hardware stack levels used: 1
 14607 ;; Hardware stack levels required when called: 3
 14608 ;; This function calls:
 14609 ;;		_LCD_Set_Cursor
 14610 ;;		_LCD_Write_Cp
 14611 ;; This function is called by:
 14612 ;;		_MenuPPAL
 14613 ;;		_MenuMotores
 14614 ;;		_MenuLeds
 14615 ;;		_MenuL1
 14616 ;;		_MenuL2
 14617 ;;		_MenuL3
 14618 ;;		_MenuMOTORA
 14619 ;;		_MenuMOTORB
 14620 ;; This function uses a non-reentrant model
 14621 ;;
 14622                           
 14623     1001                     _LCD_Write:	
 14624                           ;psect for function _LCD_Write
 14625                           
 14626                           
 14627                           ;incstack = 0
 14628                           ; Regs used in _LCD_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14629                           ;LCD_Write@fila stored from wreg
 14630     1001  00FC               	movwf	LCD_Write@fila
 14631     1002                     l4806:
 14632                           
 14633                           ;LCD_LIB.c: 101:     LCD_Set_Cursor(fila, col);
 14634     1002  087A               	movf	LCD_Write@col,w
 14635     1003  00F5               	movwf	LCD_Set_Cursor@col
 14636     1004  087C               	movf	LCD_Write@fila,w
 14637     1005  3188  2006  3190   	fcall	_LCD_Set_Cursor
 14638     1008                     l4808:
 14639                           
 14640                           ;LCD_LIB.c: 102:     LCD_Write_Cp(letra);
 14641     1008  087B               	movf	LCD_Write@letra,w
 14642     1009  3199  21B6  3190   	fcall	_LCD_Write_Cp
 14643     100C                     l115:
 14644     100C  0008               	return
 14645     100D                     __end_of_LCD_Write:
 14646                           
 14647                           	psect	text47
 14648     19B6                     __ptext47:	
 14649 ;; *************** function _LCD_Write_Cp *****************
 14650 ;; Defined at:
 14651 ;;		line 72 in file "LCD_LIB.c"
 14652 ;; Parameters:    Size  Location     Type
 14653 ;;  letra           1    wreg     unsigned char 
 14654 ;; Auto vars:     Size  Location     Type
 14655 ;;  letra           1    4[COMMON] unsigned char 
 14656 ;;  NibbleL         1    3[COMMON] unsigned char 
 14657 ;;  NibbleH         1    2[COMMON] unsigned char 
 14658 ;; Return value:  Size  Location     Type
 14659 ;;                  1    wreg      void 
 14660 ;; Registers used:
 14661 ;;		wreg, status,2, status,0, pclath, cstack
 14662 ;; Tracked objects:
 14663 ;;		On entry : 0/0
 14664 ;;		On exit  : 0/0
 14665 ;;		Unchanged: 0/0
 14666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14668 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14669 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14670 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14671 ;;Total ram usage:        4 bytes
 14672 ;; Hardware stack levels used: 1
 14673 ;; Hardware stack levels required when called: 1
 14674 ;; This function calls:
 14675 ;;		_Load_Data
 14676 ;; This function is called by:
 14677 ;;		_LCD_Write
 14678 ;;		_LCD_Write_Text
 14679 ;;		_LCD_Write_Text_Cp
 14680 ;; This function uses a non-reentrant model
 14681 ;;
 14682                           
 14683     19B6                     _LCD_Write_Cp:	
 14684                           ;psect for function _LCD_Write_Cp
 14685                           
 14686                           
 14687                           ;incstack = 0
 14688                           ; Regs used in _LCD_Write_Cp: [wreg+status,2+status,0+pclath+cstack]
 14689                           ;LCD_Write_Cp@letra stored from wreg
 14690     19B6  00F4               	movwf	LCD_Write_Cp@letra
 14691     19B7                     l4724:
 14692                           
 14693                           ;LCD_LIB.c: 73:     char NibbleH, NibbleL;;LCD_LIB.c: 74:     NibbleH = letra>>4;
 14694     19B7  0874               	movf	LCD_Write_Cp@letra,w
 14695     19B8  00F1               	movwf	??_LCD_Write_Cp
 14696     19B9  3004               	movlw	4
 14697     19BA                     u4905:
 14698     19BA  36F1               	lsrf	??_LCD_Write_Cp,f
 14699     19BB  0B89               	decfsz	9,f
 14700     19BC  29BA               	goto	u4905
 14701     19BD  0871               	movf	??_LCD_Write_Cp,w
 14702     19BE  00F2               	movwf	LCD_Write_Cp@NibbleH
 14703     19BF                     l4726:
 14704                           
 14705                           ;LCD_LIB.c: 75:     NibbleL = letra & 0x0F;
 14706     19BF  0874               	movf	LCD_Write_Cp@letra,w
 14707     19C0  390F               	andlw	15
 14708     19C1  00F3               	movwf	LCD_Write_Cp@NibbleL
 14709     19C2                     l4728:
 14710                           
 14711                           ;LCD_LIB.c: 76:     Load_Data(NibbleH);
 14712     19C2  0872               	movf	LCD_Write_Cp@NibbleH,w
 14713     19C3  319B  2374  3199   	fcall	_Load_Data
 14714     19C6                     l4730:
 14715                           
 14716                           ;LCD_LIB.c: 77:     Load_Data(NibbleL);
 14717     19C6  0873               	movf	LCD_Write_Cp@NibbleL,w
 14718     19C7  319B  2374  3199   	fcall	_Load_Data
 14719     19CA                     l97:
 14720     19CA  0008               	return
 14721     19CB                     __end_of_LCD_Write_Cp:
 14722                           
 14723                           	psect	text48
 14724     1B74                     __ptext48:	
 14725 ;; *************** function _Load_Data *****************
 14726 ;; Defined at:
 14727 ;;		line 20 in file "LCD_LIB.c"
 14728 ;; Parameters:    Size  Location     Type
 14729 ;;  data            1    wreg     unsigned char 
 14730 ;; Auto vars:     Size  Location     Type
 14731 ;;  data            1    0[COMMON] unsigned char 
 14732 ;; Return value:  Size  Location     Type
 14733 ;;                  1    wreg      void 
 14734 ;; Registers used:
 14735 ;;		wreg
 14736 ;; Tracked objects:
 14737 ;;		On entry : 0/0
 14738 ;;		On exit  : 0/0
 14739 ;;		Unchanged: 0/0
 14740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14744 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14745 ;;Total ram usage:        1 bytes
 14746 ;; Hardware stack levels used: 1
 14747 ;; This function calls:
 14748 ;;		Nothing
 14749 ;; This function is called by:
 14750 ;;		_LCD_Write_Cp
 14751 ;; This function uses a non-reentrant model
 14752 ;;
 14753                           
 14754     1B74                     _Load_Data:	
 14755                           ;psect for function _Load_Data
 14756                           
 14757                           
 14758                           ;incstack = 0
 14759                           ; Regs used in _Load_Data: [wreg]
 14760                           ;Load_Data@data stored from wreg
 14761     1B74  00F0               	movwf	Load_Data@data
 14762     1B75                     l4616:
 14763                           
 14764                           ;LCD_LIB.c: 21:     LATDbits.LATD0 = 1;
 14765     1B75  0022               	movlb	2	; select bank2
 14766     1B76  140F               	bsf	15,0	;volatile
 14767     1B77                     l4618:
 14768                           
 14769                           ;LCD_LIB.c: 23:     if( (data & 1) == 0 ) LATDbits.LATD4 = 0; else LATDbits.LATD4 = 1;
 14770     1B77  1870               	btfsc	Load_Data@data,0
 14771     1B78  2B7A               	goto	u4811
 14772     1B79  2B7B               	goto	u4810
 14773     1B7A                     u4811:
 14774     1B7A  2B7D               	goto	l80
 14775     1B7B                     u4810:
 14776     1B7B                     l4620:
 14777     1B7B  120F               	bcf	15,4	;volatile
 14778     1B7C  2B7E               	goto	l4622
 14779     1B7D                     l80:
 14780     1B7D  160F               	bsf	15,4	;volatile
 14781     1B7E                     l4622:
 14782                           
 14783                           ;LCD_LIB.c: 24:     if( (data & 2) == 0 ) LATDbits.LATD5 = 0; else LATDbits.LATD5 = 1;
 14784     1B7E  18F0               	btfsc	Load_Data@data,1
 14785     1B7F  2B81               	goto	u4821
 14786     1B80  2B82               	goto	u4820
 14787     1B81                     u4821:
 14788     1B81  2B84               	goto	l82
 14789     1B82                     u4820:
 14790     1B82                     l4624:
 14791     1B82  128F               	bcf	15,5	;volatile
 14792     1B83  2B85               	goto	l4626
 14793     1B84                     l82:
 14794     1B84  168F               	bsf	15,5	;volatile
 14795     1B85                     l4626:
 14796                           
 14797                           ;LCD_LIB.c: 25:     if( (data & 4) == 0 ) LATDbits.LATD6 = 0; else LATDbits.LATD6 = 1;
 14798     1B85  1970               	btfsc	Load_Data@data,2
 14799     1B86  2B88               	goto	u4831
 14800     1B87  2B89               	goto	u4830
 14801     1B88                     u4831:
 14802     1B88  2B8B               	goto	l84
 14803     1B89                     u4830:
 14804     1B89                     l4628:
 14805     1B89  130F               	bcf	15,6	;volatile
 14806     1B8A  2B8C               	goto	l4630
 14807     1B8B                     l84:
 14808     1B8B  170F               	bsf	15,6	;volatile
 14809     1B8C                     l4630:
 14810                           
 14811                           ;LCD_LIB.c: 26:     if( (data & 8) == 0 ) LATDbits.LATD7 = 0; else LATDbits.LATD7 = 1;
 14812     1B8C  19F0               	btfsc	Load_Data@data,3
 14813     1B8D  2B8F               	goto	u4841
 14814     1B8E  2B90               	goto	u4840
 14815     1B8F                     u4841:
 14816     1B8F  2B92               	goto	l86
 14817     1B90                     u4840:
 14818     1B90                     l4632:
 14819     1B90  138F               	bcf	15,7	;volatile
 14820     1B91  2B93               	goto	l87
 14821     1B92                     l86:
 14822     1B92  178F               	bsf	15,7	;volatile
 14823     1B93                     l87:
 14824                           
 14825                           ;LCD_LIB.c: 28:     LATDbits.LATD1 = 0;
 14826     1B93  108F               	bcf	15,1	;volatile
 14827                           
 14828                           ;LCD_LIB.c: 29:     LATDbits.LATD1 = 1;
 14829     1B94  148F               	bsf	15,1	;volatile
 14830                           
 14831                           ;LCD_LIB.c: 30:     LATDbits.LATD1 = 0;
 14832     1B95  108F               	bcf	15,1	;volatile
 14833     1B96                     l4634:
 14834                           
 14835                           ;LCD_LIB.c: 32:     _delay((unsigned long)((300)*(20000000UL/4000000.0)));
 14836     1B96  30D6               	movlw	214
 14837     1B97                     u5817:
 14838     1B97  3200               	nop2
 14839     1B98  3200               	nop2
 14840     1B99  0B89               	decfsz	9,f
 14841     1B9A  2B97               	goto	u5817
 14842     1B9B  3200               	nop2
 14843     1B9C                     l88:
 14844     1B9C  0008               	return
 14845     1B9D                     __end_of_Load_Data:
 14846                           
 14847                           	psect	text49
 14848     0806                     __ptext49:	
 14849 ;; *************** function _LCD_Set_Cursor *****************
 14850 ;; Defined at:
 14851 ;;		line 90 in file "LCD_LIB.c"
 14852 ;; Parameters:    Size  Location     Type
 14853 ;;  fila            1    wreg     unsigned char 
 14854 ;;  col             1    5[COMMON] unsigned char 
 14855 ;; Auto vars:     Size  Location     Type
 14856 ;;  fila            1    8[COMMON] unsigned char 
 14857 ;;  pos             1    9[COMMON] unsigned char 
 14858 ;; Return value:  Size  Location     Type
 14859 ;;                  1    wreg      void 
 14860 ;; Registers used:
 14861 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14862 ;; Tracked objects:
 14863 ;;		On entry : 0/0
 14864 ;;		On exit  : 0/0
 14865 ;;		Unchanged: 0/0
 14866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14867 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14868 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14869 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14870 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14871 ;;Total ram usage:        5 bytes
 14872 ;; Hardware stack levels used: 1
 14873 ;; Hardware stack levels required when called: 2
 14874 ;; This function calls:
 14875 ;;		_LCD_Cmd
 14876 ;; This function is called by:
 14877 ;;		_LCD_Write
 14878 ;;		_LCD_Write_Text
 14879 ;; This function uses a non-reentrant model
 14880 ;;
 14881                           
 14882     0806                     _LCD_Set_Cursor:	
 14883                           ;psect for function _LCD_Set_Cursor
 14884                           
 14885                           
 14886                           ;incstack = 0
 14887                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14888                           ;LCD_Set_Cursor@fila stored from wreg
 14889     0806  00F8               	movwf	LCD_Set_Cursor@fila
 14890     0807                     l4732:
 14891                           
 14892                           ;LCD_LIB.c: 91:     char pos;;LCD_LIB.c: 92:     switch(fila){
 14893     0807  2818               	goto	l4744
 14894     0808                     l4734:
 14895     0808  0875               	movf	LCD_Set_Cursor@col,w
 14896     0809  3E7F               	addlw	127
 14897     080A  00F9               	movwf	LCD_Set_Cursor@pos
 14898     080B  282E               	goto	l4746
 14899     080C                     l4736:
 14900     080C  0875               	movf	LCD_Set_Cursor@col,w
 14901     080D  3EBF               	addlw	191
 14902     080E  00F9               	movwf	LCD_Set_Cursor@pos
 14903     080F  282E               	goto	l4746
 14904     0810                     l4738:
 14905     0810  0875               	movf	LCD_Set_Cursor@col,w
 14906     0811  3E93               	addlw	147
 14907     0812  00F9               	movwf	LCD_Set_Cursor@pos
 14908     0813  282E               	goto	l4746
 14909     0814                     l4740:
 14910     0814  0875               	movf	LCD_Set_Cursor@col,w
 14911     0815  3ED3               	addlw	211
 14912     0816  00F9               	movwf	LCD_Set_Cursor@pos
 14913     0817  282E               	goto	l4746
 14914     0818                     l4744:
 14915     0818  0878               	movf	LCD_Set_Cursor@fila,w
 14916     0819  00F6               	movwf	??_LCD_Set_Cursor
 14917     081A  01F7               	clrf	??_LCD_Set_Cursor+1
 14918                           
 14919                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14920                           ; Switch size 1, requested type "simple"
 14921                           ; Number of cases is 1, Range of values is 0 to 0
 14922                           ; switch strategies available:
 14923                           ; Name         Instructions Cycles
 14924                           ; simple_byte            4     3 (average)
 14925                           ; direct_byte            8     6 (fixed)
 14926                           ; jumptable            260     6 (fixed)
 14927                           ;	Chosen strategy is simple_byte
 14928     081B  0877               	movf	??_LCD_Set_Cursor+1,w
 14929     081C  3A00               	xorlw	0	; case 0
 14930     081D  1903               	skipnz
 14931     081E  2820               	goto	l5918
 14932     081F  282E               	goto	l4746
 14933     0820                     l5918:
 14934                           
 14935                           ; Switch size 1, requested type "simple"
 14936                           ; Number of cases is 4, Range of values is 1 to 4
 14937                           ; switch strategies available:
 14938                           ; Name         Instructions Cycles
 14939                           ; simple_byte           13     7 (average)
 14940                           ; direct_byte           17     9 (fixed)
 14941                           ; jumptable            263     9 (fixed)
 14942                           ;	Chosen strategy is simple_byte
 14943     0820  0876               	movf	??_LCD_Set_Cursor,w
 14944     0821  3A01               	xorlw	1	; case 1
 14945     0822  1903               	skipnz
 14946     0823  2808               	goto	l4734
 14947     0824  3A03               	xorlw	3	; case 2
 14948     0825  1903               	skipnz
 14949     0826  280C               	goto	l4736
 14950     0827  3A01               	xorlw	1	; case 3
 14951     0828  1903               	skipnz
 14952     0829  2810               	goto	l4738
 14953     082A  3A07               	xorlw	7	; case 4
 14954     082B  1903               	skipnz
 14955     082C  2814               	goto	l4740
 14956     082D  282E               	goto	l4746
 14957     082E                     l4746:
 14958                           
 14959                           ;LCD_LIB.c: 98:     LCD_Cmd(pos);
 14960     082E  0879               	movf	LCD_Set_Cursor@pos,w
 14961     082F  3199  21E1  3188   	fcall	_LCD_Cmd
 14962     0832                     l112:
 14963     0832  0008               	return
 14964     0833                     __end_of_LCD_Set_Cursor:
 14965                           
 14966                           	psect	text50
 14967     19E1                     __ptext50:	
 14968 ;; *************** function _LCD_Cmd *****************
 14969 ;; Defined at:
 14970 ;;		line 64 in file "LCD_LIB.c"
 14971 ;; Parameters:    Size  Location     Type
 14972 ;;  cmd             1    wreg     unsigned char 
 14973 ;; Auto vars:     Size  Location     Type
 14974 ;;  cmd             1    4[COMMON] unsigned char 
 14975 ;;  NibbleL         1    3[COMMON] unsigned char 
 14976 ;;  NibbleH         1    2[COMMON] unsigned char 
 14977 ;; Return value:  Size  Location     Type
 14978 ;;                  1    wreg      void 
 14979 ;; Registers used:
 14980 ;;		wreg, status,2, status,0, pclath, cstack
 14981 ;; Tracked objects:
 14982 ;;		On entry : 0/0
 14983 ;;		On exit  : 0/0
 14984 ;;		Unchanged: 0/0
 14985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14987 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14988 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14989 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14990 ;;Total ram usage:        4 bytes
 14991 ;; Hardware stack levels used: 1
 14992 ;; Hardware stack levels required when called: 1
 14993 ;; This function calls:
 14994 ;;		_Load_Cmd
 14995 ;; This function is called by:
 14996 ;;		_LCD_Set_Cursor
 14997 ;;		_SystemInit
 14998 ;;		_MenuPPAL
 14999 ;;		_MenuMotores
 15000 ;;		_MenuLeds
 15001 ;;		_MenuL1
 15002 ;;		_MenuL2
 15003 ;;		_MenuL3
 15004 ;;		_MenuMOTORA
 15005 ;;		_MenuMOTORB
 15006 ;; This function uses a non-reentrant model
 15007 ;;
 15008                           
 15009     19E1                     _LCD_Cmd:	
 15010                           ;psect for function _LCD_Cmd
 15011                           
 15012                           
 15013                           ;incstack = 0
 15014                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 15015                           ;LCD_Cmd@cmd stored from wreg
 15016     19E1  00F4               	movwf	LCD_Cmd@cmd
 15017     19E2                     l4636:
 15018                           
 15019                           ;LCD_LIB.c: 65:     char NibbleH, NibbleL;;LCD_LIB.c: 66:     NibbleH = cmd>>4;
 15020     19E2  0874               	movf	LCD_Cmd@cmd,w
 15021     19E3  00F1               	movwf	??_LCD_Cmd
 15022     19E4  3004               	movlw	4
 15023     19E5                     u4855:
 15024     19E5  36F1               	lsrf	??_LCD_Cmd,f
 15025     19E6  0B89               	decfsz	9,f
 15026     19E7  29E5               	goto	u4855
 15027     19E8  0871               	movf	??_LCD_Cmd,w
 15028     19E9  00F2               	movwf	LCD_Cmd@NibbleH
 15029     19EA                     l4638:
 15030                           
 15031                           ;LCD_LIB.c: 67:     NibbleL = cmd & 0x0F;
 15032     19EA  0874               	movf	LCD_Cmd@cmd,w
 15033     19EB  390F               	andlw	15
 15034     19EC  00F3               	movwf	LCD_Cmd@NibbleL
 15035     19ED                     l4640:
 15036                           
 15037                           ;LCD_LIB.c: 68:     Load_Cmd(NibbleH);
 15038     19ED  0872               	movf	LCD_Cmd@NibbleH,w
 15039     19EE  319B  234B  3199   	fcall	_Load_Cmd
 15040     19F1                     l4642:
 15041                           
 15042                           ;LCD_LIB.c: 69:     Load_Cmd(NibbleL);
 15043     19F1  0873               	movf	LCD_Cmd@NibbleL,w
 15044     19F2  319B  234B  3199   	fcall	_Load_Cmd
 15045     19F5                     l4644:
 15046                           
 15047                           ;LCD_LIB.c: 70:     _delay((unsigned long)((2)*(20000000UL/4000.0)));
 15048     19F5  300D               	movlw	13
 15049     19F6  00F1               	movwf	??_LCD_Cmd
 15050     19F7  30FC               	movlw	252
 15051     19F8                     u5827:
 15052     19F8  0B89               	decfsz	9,f
 15053     19F9  29F8               	goto	u5827
 15054     19FA  0BF1               	decfsz	??_LCD_Cmd,f
 15055     19FB  29F8               	goto	u5827
 15056     19FC                     l94:
 15057     19FC  0008               	return
 15058     19FD                     __end_of_LCD_Cmd:
 15059                           
 15060                           	psect	text51
 15061     1B4B                     __ptext51:	
 15062 ;; *************** function _Load_Cmd *****************
 15063 ;; Defined at:
 15064 ;;		line 6 in file "LCD_LIB.c"
 15065 ;; Parameters:    Size  Location     Type
 15066 ;;  cmd             1    wreg     unsigned char 
 15067 ;; Auto vars:     Size  Location     Type
 15068 ;;  cmd             1    0[COMMON] unsigned char 
 15069 ;; Return value:  Size  Location     Type
 15070 ;;                  1    wreg      void 
 15071 ;; Registers used:
 15072 ;;		wreg
 15073 ;; Tracked objects:
 15074 ;;		On entry : 0/0
 15075 ;;		On exit  : 0/0
 15076 ;;		Unchanged: 0/0
 15077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15081 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15082 ;;Total ram usage:        1 bytes
 15083 ;; Hardware stack levels used: 1
 15084 ;; This function calls:
 15085 ;;		Nothing
 15086 ;; This function is called by:
 15087 ;;		_LCD_Init
 15088 ;;		_LCD_Cmd
 15089 ;; This function uses a non-reentrant model
 15090 ;;
 15091                           
 15092     1B4B                     _Load_Cmd:	
 15093                           ;psect for function _Load_Cmd
 15094                           
 15095                           
 15096                           ;incstack = 0
 15097                           ; Regs used in _Load_Cmd: [wreg]
 15098                           ;Load_Cmd@cmd stored from wreg
 15099     1B4B  00F0               	movwf	Load_Cmd@cmd
 15100     1B4C                     l4376:
 15101                           
 15102                           ;LCD_LIB.c: 7:     LATDbits.LATD0 = 0;
 15103     1B4C  0022               	movlb	2	; select bank2
 15104     1B4D  100F               	bcf	15,0	;volatile
 15105     1B4E                     l4378:
 15106                           
 15107                           ;LCD_LIB.c: 9:     if( (cmd & 1) == 0 ) LATDbits.LATD4 = 0; else LATDbits.LATD4 = 1;
 15108     1B4E  1870               	btfsc	Load_Cmd@cmd,0
 15109     1B4F  2B51               	goto	u4431
 15110     1B50  2B52               	goto	u4430
 15111     1B51                     u4431:
 15112     1B51  2B54               	goto	l69
 15113     1B52                     u4430:
 15114     1B52                     l4380:
 15115     1B52  120F               	bcf	15,4	;volatile
 15116     1B53  2B55               	goto	l4382
 15117     1B54                     l69:
 15118     1B54  160F               	bsf	15,4	;volatile
 15119     1B55                     l4382:
 15120                           
 15121                           ;LCD_LIB.c: 10:     if( (cmd & 2) == 0 ) LATDbits.LATD5 = 0; else LATDbits.LATD5 = 1;
 15122     1B55  18F0               	btfsc	Load_Cmd@cmd,1
 15123     1B56  2B58               	goto	u4441
 15124     1B57  2B59               	goto	u4440
 15125     1B58                     u4441:
 15126     1B58  2B5B               	goto	l71
 15127     1B59                     u4440:
 15128     1B59                     l4384:
 15129     1B59  128F               	bcf	15,5	;volatile
 15130     1B5A  2B5C               	goto	l4386
 15131     1B5B                     l71:
 15132     1B5B  168F               	bsf	15,5	;volatile
 15133     1B5C                     l4386:
 15134                           
 15135                           ;LCD_LIB.c: 11:     if( (cmd & 4) == 0 ) LATDbits.LATD6 = 0; else LATDbits.LATD6 = 1;
 15136     1B5C  1970               	btfsc	Load_Cmd@cmd,2
 15137     1B5D  2B5F               	goto	u4451
 15138     1B5E  2B60               	goto	u4450
 15139     1B5F                     u4451:
 15140     1B5F  2B62               	goto	l73
 15141     1B60                     u4450:
 15142     1B60                     l4388:
 15143     1B60  130F               	bcf	15,6	;volatile
 15144     1B61  2B63               	goto	l4390
 15145     1B62                     l73:
 15146     1B62  170F               	bsf	15,6	;volatile
 15147     1B63                     l4390:
 15148                           
 15149                           ;LCD_LIB.c: 12:     if( (cmd & 8) == 0 ) LATDbits.LATD7 = 0; else LATDbits.LATD7 = 1;
 15150     1B63  19F0               	btfsc	Load_Cmd@cmd,3
 15151     1B64  2B66               	goto	u4461
 15152     1B65  2B67               	goto	u4460
 15153     1B66                     u4461:
 15154     1B66  2B69               	goto	l75
 15155     1B67                     u4460:
 15156     1B67                     l4392:
 15157     1B67  138F               	bcf	15,7	;volatile
 15158     1B68  2B6A               	goto	l76
 15159     1B69                     l75:
 15160     1B69  178F               	bsf	15,7	;volatile
 15161     1B6A                     l76:
 15162                           
 15163                           ;LCD_LIB.c: 14:     LATDbits.LATD1 = 0;
 15164     1B6A  108F               	bcf	15,1	;volatile
 15165                           
 15166                           ;LCD_LIB.c: 15:     LATDbits.LATD1 = 1;
 15167     1B6B  148F               	bsf	15,1	;volatile
 15168                           
 15169                           ;LCD_LIB.c: 16:     LATDbits.LATD1 = 0;
 15170     1B6C  108F               	bcf	15,1	;volatile
 15171     1B6D                     l4394:
 15172                           
 15173                           ;LCD_LIB.c: 17:     _delay((unsigned long)((300)*(20000000UL/4000000.0)));
 15174     1B6D  30D6               	movlw	214
 15175     1B6E                     u5837:
 15176     1B6E  3200               	nop2
 15177     1B6F  3200               	nop2
 15178     1B70  0B89               	decfsz	9,f
 15179     1B71  2B6E               	goto	u5837
 15180     1B72  3200               	nop2
 15181     1B73                     l77:
 15182     1B73  0008               	return
 15183     1B74                     __end_of_Load_Cmd:
 15184     007E                     btemp	set	126	;btemp
 15185     007E                     wtemp0	set	126
 15186                           
 15187                           	psect	config
 15188                           
 15189                           ;Config register CONFIG1 @ 0x8007
 15190                           ;	Oscillator Selection
 15191                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
 15192                           ;	Watchdog Timer Enable
 15193                           ;	WDTE = OFF, WDT disabled
 15194                           ;	Power-up Timer Enable
 15195                           ;	PWRTE = OFF, PWRT disabled
 15196                           ;	MCLR Pin Function Select
 15197                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 15198                           ;	Flash Program Memory Code Protection
 15199                           ;	CP = OFF, Program memory code protection is disabled
 15200                           ;	Data Memory Code Protection
 15201                           ;	CPD = OFF, Data memory code protection is disabled
 15202                           ;	Brown-out Reset Enable
 15203                           ;	BOREN = OFF, Brown-out Reset disabled
 15204                           ;	Clock Out Enable
 15205                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 15206                           ;	Internal/External Switchover
 15207                           ;	IESO = ON, Internal/External Switchover mode is enabled
 15208                           ;	Fail-Safe Clock Monitor Enable
 15209                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 15210     8007                     	org	32775
 15211     8007  39E2               	dw	14818
 15212                           
 15213                           ;Config register CONFIG2 @ 0x8008
 15214                           ;	Flash Memory Self-Write Protection
 15215                           ;	WRT = OFF, Write protection off
 15216                           ;	Voltage Regulator Capacitor Enable
 15217                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
 15218                           ;	PLL Enable
 15219                           ;	PLLEN = OFF, 4x PLL disabled
 15220                           ;	Stack Overflow/Underflow Reset Enable
 15221                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 15222                           ;	Brown-out Reset Voltage Selection
 15223                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 15224                           ;	Low-Voltage Programming Enable
 15225                           ;	LVP = ON, Low-voltage programming enabled
 15226     8008                     	org	32776
 15227     8008  3EFF               	dw	16127

Data Sizes:
    Strings     472
    Constant    0
    Data        21
    BSS         104
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     78      80
    BANK2            80     13      56
    BANK3            80      0      80
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_40(CODE[4]), STR_37(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_40(CODE[4]), STR_37(CODE[4]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_8(CODE[11]), STR_7(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_8(CODE[11]), STR_7(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 12
		 -> STR_8(CODE[11]), STR_7(CODE[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S1116$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_8(CODE[11]), STR_7(CODE[12]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> strLCD(BANK2[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1031$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1031$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCD_Write_Text@text	PTR unsigned char  size(2) Largest target is 21
		 -> STR_36(CODE[21]), STR_35(CODE[21]), STR_34(CODE[21]), STR_33(CODE[21]), 
		 -> STR_32(CODE[21]), STR_31(CODE[21]), STR_30(CODE[21]), STR_29(CODE[21]), 
		 -> STR_28(CODE[21]), STR_27(CODE[21]), STR_26(CODE[21]), STR_25(CODE[21]), 
		 -> STR_24(CODE[21]), STR_23(CODE[21]), STR_22(CODE[21]), STR_21(CODE[21]), 
		 -> STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> strLCD(BANK2[20]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 


Critical Paths under _main in COMMON

    _SystemInit->_LCD_Cmd
    _LCD_Init->_Load_Cmd
    _MenuSensores->_LCD_Write_Text
    _MenuSensores->___xxtofl
    _read_prec_or_width->___wmul
    _efgtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _MenuPPAL->_LCD_Write_Text
    _MenuMotores->_LCD_Write_Text
    _MenuMOTORB->_LCD_Write_Text
    _MenuMOTORA->_LCD_Write_Text
    _MenuLeds->_LCD_Write_Text
    _MenuL3->_LCD_Write_Text
    _MenuL2->_LCD_Write_Text
    _MenuL1->_LCD_Write_Text
    _LCD_Write_Text->_LCD_Set_Cursor
    _LCD_Write->_LCD_Set_Cursor
    _LCD_Write_Cp->_Load_Data
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_Load_Cmd

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___flmul
    _MenuPPAL->_LCD_Write_Text
    _MenuMotores->_LCD_Write_Text
    _MenuMOTORB->_LCD_Write_Text
    _MenuMOTORA->_LCD_Write_Text
    _MenuLeds->_LCD_Write_Text
    _MenuL3->_LCD_Write_Text
    _MenuL2->_LCD_Write_Text
    _MenuL1->_LCD_Write_Text

Critical Paths under _main in BANK1

    _main->_MenuSensores
    _MenuSensores->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK2

    _MenuSensores->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  214063
                                             76 BANK1      2     2      0
                             _MenuL1
                             _MenuL2
                             _MenuL3
                           _MenuLeds
                         _MenuMOTORA
                         _MenuMOTORB
                        _MenuMotores
                           _MenuPPAL
                       _MenuSensores
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0     266
                           _ADC_Init
                            _LCD_Cmd
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             1     1      0      88
                                              1 COMMON     1     1      0
                           _Load_Cmd
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MenuSensores                                         2     2      0   34237
                                             74 BANK1      2     2      0
                      _ADC_Get_Value
                     _LCD_Write_Text
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    16      6   21870
                                             67 BANK1      7     1      6
                                              0 BANK2     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     4      3   21449
                                             79 BANK0      1     1      0
                                             61 BANK1      6     3      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           18    16      2   21133
                                             77 BANK0      2     0      2
                                             49 BANK1     12    12      0
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   9     7      2     642
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              55    50      5   19067
                                             72 BANK0      5     0      5
                                              0 BANK1     49    49      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     6      2     314
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2436
                                             11 COMMON     3     0      3
                                              4 BANK0      6     6      0
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     6      1     997
                                              8 COMMON     3     2      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     682
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _memcpy                                               8     5      3     328
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (6) _labs                                                 4     0      4     294
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             52 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     457
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2637
                                             26 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             20    12      8    2288
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             26    18      8    3481
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     942
                                             26 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             26    18      8    2185
                                             26 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) _ADC_Get_Value                                        4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _MenuPPAL                                             2     2      0   22445
                                              1 BANK0      2     2      0
                            _LCD_Cmd
                          _LCD_Write
                     _LCD_Write_Text
 ---------------------------------------------------------------------------------
 (1) _MenuMotores                                          2     2      0   22445
                                              1 BANK0      2     2      0
                            _LCD_Cmd
                          _LCD_Write
                     _LCD_Write_Text
 ---------------------------------------------------------------------------------
 (1) _MenuMOTORB                                           2     2      0   22445
                                              1 BANK0      2     2      0
                            _LCD_Cmd
                          _LCD_Write
                     _LCD_Write_Text
                             _MB_Off
                           _MB_TurnL
                           _MB_TurnR
 ---------------------------------------------------------------------------------
 (2) _MB_TurnR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MB_TurnL                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MB_Off                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MenuMOTORA                                           2     2      0   22445
                                              1 BANK0      2     2      0
                            _LCD_Cmd
                          _LCD_Write
                     _LCD_Write_Text
                             _MA_Off
                           _MA_TurnL
                           _MA_TurnR
 ---------------------------------------------------------------------------------
 (2) _MA_TurnR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MA_TurnL                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MA_Off                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MenuLeds                                             2     2      0   22445
                                              1 BANK0      2     2      0
                            _LCD_Cmd
                          _LCD_Write
                     _LCD_Write_Text
 ---------------------------------------------------------------------------------
 (1) _MenuL3                                               2     2      0   22445
                                              1 BANK0      2     2      0
                            _LCD_Cmd
                          _LCD_Write
                     _LCD_Write_Text
 ---------------------------------------------------------------------------------
 (1) _MenuL2                                               2     2      0   22445
                                              1 BANK0      2     2      0
                            _LCD_Cmd
                          _LCD_Write
                     _LCD_Write_Text
 ---------------------------------------------------------------------------------
 (1) _MenuL1                                               2     2      0   22445
                                              1 BANK0      2     2      0
                            _LCD_Cmd
                          _LCD_Write
                     _LCD_Write_Text
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Text                                       5     2      3    6205
                                             10 COMMON     4     1      3
                                              0 BANK0      1     1      0
                     _LCD_Set_Cursor
                       _LCD_Write_Cp
 ---------------------------------------------------------------------------------
 (2) _LCD_Write                                            3     1      2   16062
                                             10 COMMON     3     1      2
                     _LCD_Set_Cursor
                       _LCD_Write_Cp
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Cp                                         4     4      0     178
                                              1 COMMON     4     4      0
                          _Load_Data
 ---------------------------------------------------------------------------------
 (4) _Load_Data                                            1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Set_Cursor                                       5     4      1     466
                                              5 COMMON     5     4      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              4     4      0     178
                                              1 COMMON     4     4      0
                           _Load_Cmd
 ---------------------------------------------------------------------------------
 (3) _Load_Cmd                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MenuL1
     _LCD_Cmd
       _Load_Cmd
     _LCD_Write
       _LCD_Set_Cursor
         _LCD_Cmd
       _LCD_Write_Cp
         _Load_Data
     _LCD_Write_Text
       _LCD_Set_Cursor
       _LCD_Write_Cp
   _MenuL2
     _LCD_Cmd
     _LCD_Write
     _LCD_Write_Text
   _MenuL3
     _LCD_Cmd
     _LCD_Write
     _LCD_Write_Text
   _MenuLeds
     _LCD_Cmd
     _LCD_Write
     _LCD_Write_Text
   _MenuMOTORA
     _LCD_Cmd
     _LCD_Write
     _LCD_Write_Text
     _MA_Off
     _MA_TurnL
     _MA_TurnR
   _MenuMOTORB
     _LCD_Cmd
     _LCD_Write
     _LCD_Write_Text
     _MB_Off
     _MB_TurnL
     _MB_TurnR
   _MenuMotores
     _LCD_Cmd
     _LCD_Write
     _LCD_Write_Text
   _MenuPPAL
     _LCD_Cmd
     _LCD_Write
     _LCD_Write_Text
   _MenuSensores
     _ADC_Get_Value
     _LCD_Write_Text
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
   _SystemInit
     _ADC_Init
     _LCD_Cmd
     _LCD_Init
       _Load_Cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4E      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      D      38       9       70.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     136      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     136      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Oct 15 01:16:25 2023

              ___fldiv@aexp 0053                ___fldiv@bexp 0052                ___fldiv@sign 004B  
                        l60 19E0                          l54 19A1                          l71 1B5B  
                        l80 1B7D                          l73 1B62                          l57 19D8  
                        l82 1B84                          l75 1B69                          l91 1C82  
                        l76 1B6A                          l84 1B8B                          l77 1B73  
                        l69 1B54                          l94 19FC                          l86 1B92  
                        l87 1B93                          l88 1B9C                          l97 19CA  
                        _op 00EF         ___wmul@multiplicand 0072         __Umul8_16@word_mpld 0076  
                       l112 0832                         l121 1A1B                         l201 142B  
                       l210 1446                         l115 100C                         l300 1FC1  
                       l204 1441                         l221 1465                         l205 1430  
                       l230 159C                         l311 1FDC                         l215 1459  
                       l223 1489                         l305 1FD4                         l313 1FFF  
                       l321 1179                         l401 09AC                         l322 1168  
                       l411 09C7                         l235 133D                         l227 1589  
                       l332 1191                         l340 11BC                         l244 1358  
                       l172 1044                         l309 1FD9                         l181 1977  
                       l405 09C2                         l318 1163                         l262 166C  
                       l190 1983                         l406 09B1                         l238 1353  
                       l327 117E                         l175 197F                         l239 1342  
                       l336 1196                         l272 1687                         l184 198B  
                       l416 09DA                         l345 1250                         l425 0A0E  
                       l249 136B                         l257 1397                         l338 1199  
                       l354 126B                         l266 1682                         l178 197B  
                       l291 1FA6                         l363 1283                         l267 1671  
                       l187 1987                         l348 1266                         l372 179D  
                       l365 1286                         l349 1255                         l277 169A  
                       l294 1FBC                         l286 16CD                         l382 17B8  
                       l295 1FAB                         l359 127E                         l367 12A9  
                       l376 17B3                         l377 17A2                         l387 17CB  
                       l396 17FF                         l901 0D40                         l750 1C32  
                       l910 0D9A                         l575 1A45                         l744 1C01  
                       l745 1C1D                         l761 10CF                         l753 1062  
                       l577 1A59                         l922 1A79                         l907 0D62  
                       l932 0A60                         l756 10B6                         l765 1996  
                       l934 0BB8                         l918 0DBD                         l919 0DC4  
                       l880 0C8C                         l776 1D93                         l953 0B8A  
                       l769 1DA8                         l954 0BA4                         l882 0C6A  
                       l779 1DA8                         l956 0BB1                         l948 0B3E  
                       l972 0FFF                         l876 0C0E                         l991 1AEE  
                       l984 0FF3                         l993 1AFE                         l897 0D1E  
                       l889 0DC4                         l978 0F7F             ADC_Get_Value@ch 0073  
                       _pad 1B9D                         _ldr 0128                         wreg 0009  
              ___flmul@aexp 0032                ___flmul@bexp 0033                ___flmul@sign 002D  
              ___flmul@temp 0038                ___flmul@prod 0034             __end_of_LCD_Cmd 19FD  
            _LCD_Set_Cursor 0806                ___fltol@exp1 0079                        l1101 0403  
                      l1030 08B4                        l1022 088E                        l1111 062A  
                      l1016 0855                        l1018 08DC                        l1211 1CD9  
                      l1029 08A8                        l1222 0005                        l1134 006D  
                      l1038 1AB9                        l1072 1BD8                        l1074 1BE4  
                      l1082 0212                        l1162 1A99                        l1219 1B23  
                      l1155 01AB                        l1172 1E27                        l1228 1A3A  
                      l1069 1BB8                        l1085 07DA                        l1190 1ADB  
                      l1183 1F0A                        l4000 1D9D                        l1193 1ADB  
                      l4010 0A13                        l4002 1A5A                        l1178 1E69  
                      l1179 1F12                        l4100 0B12                        l4020 0A24  
                      l4012 0A15                        l4004 1A5D                        l1196 1B3E  
                      l4110 0B23                        l4102 0B13                        l4030 0A3C  
                      l4022 0A2C                        l4014 0A19                        l1199 1B4A  
                      l5000 1485                        l4120 0B48                        l4112 0B27  
                      l4104 0B1A                        l4040 0A4D                        l4032 0A3E  
                      l4024 0A2D                        l4016 0A1A                        l4008 0A0F  
                      l4200 0E64                        l4130 0B7D                        l4122 0B50  
                      l4114 0B3B                        l4106 0B1E                        l4050 0A74  
                      l4042 0A55                        l4034 0A42                        l4018 0A1F  
                      l4026 0A2F                        l4210 0EA8                        l4202 0E7C  
                      l5010 148A                        l5100 12F6                        l4140 0BAB  
                      l4132 0B98                        l4124 0B54                        l4108 0B22  
                      l4052 0A78                        l4044 0A56                        l4036 0A43  
                      l4028 0A37                        l4220 0EDA                        l4212 0EAF  
                      l4204 0E89                        l4300 1BC5                        l5020 1511  
                      l5012 149E                        l5110 1346                        l5102 130F  
                      l4142 0BAD                        l4134 0B9B                        l4126 0B6C  
                      l4118 0B43                        l4070 0AB7                        l4062 0A8F  
                      l4038 0A48                        l4046 0A58                        l4230 0F35  
                      l4222 0EEC                        l4214 0EBA                        l4206 0E96  
                      l4150 0DC9                        l4310 1DD6                        l4302 1BCA  
                      l5030 158D                        l5022 151A                        l5014 14A7  
                      l5200 10D0                        l5040 1612                        l5120 1364  
                      l5112 134B                        l4136 0BA3                        l4128 0B70  
                      l4080 0AD1                        l4072 0AB9                        l4064 0A9F  
                      l4048 0A68                        l4056 0A81                        l4240 0F54  
                      l4232 0F3C                        l4224 0EF7                        l4216 0EC1  
                      l4208 0E9D                        l4160 0DDA                        l4152 0DCB  
                      l4312 1DDC                        l4320 1DFD                        l4304 1BDD  
                      l4400 01BF                        l5032 158F                        l5024 157A  
                      l5016 14EE                        l5202 1103                        l5210 114E  
                      l5050 1675                        l5042 1633                        l5034 159D  
                      l5130 1377                        l5122 1366                        l5114 1351  
                      l5106 1328                        l4138 0BA7                        l4074 0ABE  
                      l4082 0AD8                        l4090 0AF7                        l4066 0AA7  
                      l4058 0A86                        l4250 0F68                        l4242 0F5B  
                      l4234 0F48                        l4226 0F09                        l4218 0ED3  
                      l4170 0DF3                        l4162 0DE2                        l4154 0DCF  
                      l4322 1E03                        l4314 1DF3                        l4306 1DA9  
                      l4330 1A1D                        l4410 01FF                        l4402 01DD  
                      l5026 1584                        l5018 1507                        l5204 111C  
                      l5060 1693                        l5052 167A                        l5036 15D0  
                      l5300 1722                        l5140 137E                        l4092 0AFD  
                      l4084 0AEA                        l4076 0ACC                        l4068 0AAF  
                      l4260 0F91                        l4252 0F7C                        l4236 0F4F  
                      l4244 0F5F                        l4228 0F1E                        l4180 0E0A  
                      l4172 0DF7                        l4164 0DE4                        l4156 0DD0  
                      l4148 0DC5                        l3700 0BBE                        l4316 1DF8  
                      l4308 1DC1                        l4340 1E40                        l4332 1A23  
                      l4500 0505                        l4420 0225                        l4412 0204  
                      l4404 01E0                        l5230 119C                        l5222 1182  
                      l5214 116C                        l5206 1135                        l5070 16A6  
                      l5062 1695                        l5054 1680                        l5038 15F1  
                      l5046 1654                        l5302 1743                        l5134 137B  
                      l5142 1393                        l5126 1370                        l5118 135C  
                      l4094 0B05                        l4086 0AEB                        l4078 0AD0  
                      l4270 0FC8                        l4262 0F95                        l4246 0F63  
                      l4238 0F53                        l4182 0E0C                        l4174 0DF8  
                      l4166 0DEC                        l4158 0DD5                        l3710 0BD5  
                      l3702 0BC2                        l4326 1E23                        l4342 1E5B  
                      l4334 1ABA                        l4510 058B                        l4502 0509  
                      l4422 022B                        l4430 0250                        l4414 0209  
                      l4406 01F4                        l5152 1F13                        l5232 119F  
                      l5224 118A                        l5216 1171                        l5320 17BC  
                      l5312 17A6                        l5304 1764                        l5128 1373  
                      l4096 0B07                        l4088 0AF3                        l4280 0FF0  
                      l4272 0FD6                        l4264 0FAD                        l4256 0F84  
                      l4248 0F64                        l4192 0E27                        l4184 0E14  
                      l4176 0DFD                        l4168 0DF1                        l3800 0C9E  
                      l3720 0BE9                        l3712 0BD6                        l3704 0BC3  
                      l4360 1EE2                        l4352 1E9B                        l4344 1E68  
                      l4336 1ACB                        l4520 05F4                        l4512 0590  
                      l4504 0517                        l4432 0262                        l4424 0237  
                      l4416 020E                        l4408 01F7                        l4600 0011  
                      l5170 1FBA                        l5154 1F46                        l5162 1F91  
                      l5226 118C                        l5218 1177                        l5250 11F0  
                      l5074 16AA                        l5066 169F                        l5058 168B  
                      l5330 17D4                        l5322 17C4                        l5314 17AB  
                      l4098 0B0E                        l4282 0FF1                        l4274 0FDF  
                      l4258 0F89                        l4266 0FB1                        l4194 0E32  
                      l4186 0E19                        l4178 0E02                        l3810 0CB4  
                      l3802 0CA6                        l3730 0BF6                        l3722 0BEA  
                      l3706 0BC8                        l3714 0BD8                        l4362 1EEB  
                      l4354 1EB2                        l4346 1E6E                        l4338 1E28  
                      l4370 1B2A                        l4290 1BA4                        l4530 063A  
                      l4522 0620                        l4514 0598                        l4506 0569  
                      l4450 02B0                        l4434 0268                        l4442 028D  
                      l4426 0240                        l4418 0214                        l4602 0022  
                      l4610 0055                        l5410 1CDE                        l4380 1B52  
                      l4620 1B7B                        l5156 1F5F                        l5236 11A3  
                      l5252 1209                        l5068 16A2                        l5084 16B1  
                      l5332 17D8                        l5324 17C6                        l5316 17B1  
                      l5308 1785                        l3900 1AFA                        l4284 0FF7  
                      l4276 0FE1                        l4268 0FBE                        l4196 0E3F  
                      l4188 0E1E                        l3820 0CDE                        l3812 0CB8  
                      l3804 0CAA                        l3740 0C14                        l3732 0BFB  
                      l3724 0BEC                        l3716 0BE0                        l3708 0BCD  
                      l4364 1F02                        l4356 1EBA                        l4348 1E86  
                      l4372 1B30                        l4292 1BAB                        l4540 06B1  
                      l4532 063D                        l4524 0626                        l4516 05B5  
                      l4508 0573                        l4460 0361                        l4452 02BD  
                      l4444 0296                        l4436 0274                        l4612 0069  
                      l4604 002A                        l4700 0176                        l5420 1CF2  
                      l5412 1CE2                        l4390 1B63                        l4382 1B55  
                      l4630 1B8C                        l4622 1B7E                        l5182 1FDF  
                      l5190 1FFB                        l5174 1FC5                        l5166 1FAF  
                      l5158 1F78                        l5238 11B8                        l5270 126F  
                      l5262 1259                        l5254 1222                        l5078 16AE  
                      l5086 16C9                        l5334 17DC                        l5342 17E7  
                      l4278 0FEC                        l4198 0E57                        l3830 0D26  
                      l3822 0D02                        l3814 0CB9                        l3806 0CAE  
                      l3750 0C23                        l3742 0C18                        l3734 0C03  
                      l3726 0BF0                        l3718 0BE3                        l4358 1ECB  
                      l4374 1B34                        l3910 1B15                        l4294 1BAF  
                      l4550 06C7                        l4542 06B5                        l4534 0695  
                      l4526 0637                        l4518 05EF                        l4462 036B  
                      l4470 03C4                        l4454 02E9                        l4446 0298  
                      l4438 027D                        l4606 0038                        l4702 0187  
                      l5422 1CF6                        l5414 1CE6                        l5430 1D02  
                      ?_pad 007B                        l4392 1B67                        l4384 1B59  
                      l4376 1B4C                        l4640 19ED                        l4632 1B90  
                      l4624 1B82                        l4616 1B75                        l5184 1FE2  
                      l5176 1FCD                        l5168 1FB4                        l5280 128C  
                      l5272 1277                        l5264 125E                        l5248 11BD  
                      l5336 17DF                        l5328 17D0                        l5360 0973  
                      l5352 08DD                        l5096 12AA                        l3840 0D3F  
                      l3832 0D2B                        l3824 0D08                        l3816 0CC2  
                      l3808 0CB2                        l3760 0C2D                        l3752 0C25  
                      l3744 0C1D                        l3736 0C04                        l3728 0BF1  
                      l4368 1B25                        l3680 1C83                        l3904 1B01  
                      l4296 1BB5                        l4288 1B9F                        l4560 06E0  
                      l4552 06CE                        l4544 06BC                        l4536 06A7  
                      l4528 0638                        l4480 040B                        l4464 0397  
                      l4456 0311                        l4472 03EB                        l3920 1A4F  
                      l3912 1A3B                        l4608 004D                        l4800 1C73  
                      l5424 1CFA                        l5416 1CEA                        l5432 1D29  
                      l5408 1CDA                        l4394 1B6D                        l4386 1B5C  
                      l4378 1B4E                        l4642 19F1                        l4634 1B96  
                      l4626 1B85                        l4618 1B77                        l4730 19C6  
                      l4810 19FF                        l5178 1FCF                        l5274 1279  
                      l5266 1264                        l5258 123B                        l5338 17E2  
                      l5370 09BA                        l5354 0910                        l5098 12DD  
                      l3930 1C15                        l3842 0D44                        l3850 0D50  
                      l3826 0D0D                        l3818 0CC7                        l3770 0C37  
                      l3762 0C2F                        l3754 0C27                        l3746 0C1F  
                      l3738 0C06                        l3690 1CBD                        l3682 1C88  
                      l3906 1B04                        l4298 1BBB                        l4570 076A  
                      l4562 06E8                        l4554 06D2                        l4546 06C0  
                      l4538 06AC                        l4490 0425                        l4482 0411  
                      l4474 03F1                        l4466 039B                        l4458 0338  
                      l3922 1A55                        l3914 1A3D                        l4650 008C  
                      l4706 0191                        l4802 1C77                        l5426 1CFE  
                      l5418 1CEE                        l4388 1B60                        l4644 19F5  
                      l4636 19E2                        l4740 0814                        l4732 0807  
                      l4628 1B89                        l4724 19B7                        l4812 1A06  
                      l5188 1FE6                        l5284 1290                        l4820 1978  
                      l5380 09D5                        l5372 09C0                        l5356 0931  
                      l5364 0994                        l3932 1C2F                        l3940 105A  
                      l3844 0D47                        l3836 0D34                        l3828 0D16  
                      l3852 0D54                        l3780 0C6E                        l3772 0C39  
                      l3764 0C31                        l3756 0C29                        l3748 0C21  
                      l3692 1CCF                        l3684 1C8D                        l3908 1B10  
                      l4580 0793                        l4572 076E                        l4564 06EC  
                      l4556 06D6                        l4548 06C4                        l4484 0415  
                      l4492 0429                        l4476 03F6                        l4396 01AE  
                      l3916 1A41                        l4660 00AC                        l4652 0095  
                      l4804 1C7B                        l4900 1019                        l4638 19EA  
                      l4734 0808                        l4726 19BF                        l4806 1002  
                      l4814 1A0E                        l5278 1289                        l5286 12A5  
                      l4822 1974                        l5390 09EB                        l5358 0952  
                      l3934 1C31                        l3926 1BE5                        l3950 109E  
                      l3942 1076                        l3870 0D96                        l3862 0D67  
                      l3854 0D55                        l3846 0D49                        l3838 0D3B  
                      l3790 0C82                        l3782 0C72                        l3766 0C33  
                      l3758 0C2B                        l3774 0C3B                        l3686 1C92  
                      l4590 07C0                        l4582 0799                        l4566 06F0  
                      l4558 06DA                        l4574 0772                        l4494 042B  
                      l4486 041D                        l4478 03FE                        l4398 01AF  
                      l3918 1A4A                        l4670 00E2                        l4662 00B2  
                      l4654 009A                        l4646 0070                        l4830 1A9C  
                      l4910 101F                        l4902 101A                        l4736 080C  
                      l4744 0818                        l4728 19C2                        l4808 1008  
                      l4816 1A12                        l5296 16CE                        l4824 1988  
                      l5392 09EE                        l5384 09DF                        l5376 09CB  
                      l5368 09B5                        l3928 1BF9                        l3952 10CC  
                      l3944 107E                        l3960 1994                        l3880 0DB2  
                      l3872 0D9F                        l3864 0D6C                        l3856 0D59  
                      l3848 0D4E                        l3784 0C74                        l3792 0C86  
                      l3776 0C3C                        l3768 0C35                        l3696 0BB9  
                      l3688 1C9D                        l4592 07CB                        l4584 07A7  
                      l4576 0780                        l4568 073E                        l4496 0433  
                      l4488 041F                        l4672 00E9                        l4680 00F3  
                      l4664 00C5                        l4656 00A6                        l4648 0083  
                      l4752 1A7C                        l4832 1AA0                        l4920 1026  
                      l4912 1021                        l4904 101B                        l4738 0810  
                      l4746 082E                        l4818 197C                        l5298 1701  
                      l4826 1984                        l5394 09F1                        l5386 09E3  
                      l5378 09D3                        l4770 19CC                        l4850 085D  
                      l4842 0834                        l3954 10CE                        l3946 1082  
                      l3938 1045                        l3890 1ADD                        l3962 1996  
                      l3882 0DB6                        l3874 0DA4                        l3866 0D74  
                      l3858 0D5F                        l3794 0C90                        l3786 0C78  
                      l3778 0C54                        l3698 0BBC                        l4594 07CF  
                      l4586 07AE                        l4578 078E                        l4498 043C  
                      l4690 0139                        l4674 00EE                        l4682 0106  
                      l4666 00CE                        l4658 00AA                        l4754 1A81  
                      l4834 1AA2                        l4762 1997                        l4930 102D  
                      l4922 1027                        l4914 1022                        l4906 101D  
                      l5900 17F1                        l4828 1980                        l5388 09E7  
                      l4772 19D7                        l4860 087B                        l4844 0839  
                      l3948 109A                        l3892 1ADF                        l3884 0DB8  
                      l3876 0DAC                        l3868 0D78                        l3796 0C95  
                      l3788 0C79                        l3980 1D67                        l3972 1D4B  
                      l4588 07BB                        l4692 0149                        l4684 0111  
                      l4676 00F1                        l4668 00D9                        l4756 1A8D  
                      l4836 1AA4                        l4764 1999                        l4780 1C40  
                      l4940 1034                        l4932 102E                        l4924 1029  
                      l4916 1023                        l4908 101E                        l5910 1158  
                      l5902 165E                        l5398 09F6                        l4774 19DC  
                      l4870 08A2                        l4862 087F                        l4854 0866  
                      l4846 083D                        l3894 1AE6                        l3958 198C  
                      l3886 0DBF                        l3878 0DB1                        l3982 1D6B  
                      l3990 1D83                        l3974 1D5C                        l3966 1D39  
                      l4598 000F                        l4694 0159                        l4686 0125  
                      l4758 1A97                        l4838 1AAF                        l4766 199D  
                      l4790 1C5F                        l4782 1C47                        l4950 1039  
                      l4942 1035                        l4934 1030                        l4926 102A  
                      l4918 1024                        l5912 11AD                        l5904 16BB  
                      l4960 13CB                        l4880 08D3                        l4872 08AC  
                      l4864 0887                        l4856 0869                        l4848 084D  
                      l3896 1AEA                        l3888 0DC3                        l3976 1D5D  
                      l3968 1D42                        l4768 19A0                        l4792 1C63  
                      l4784 1C4B                        l4952 103A                        l4944 1036  
                      l4936 1031                        l4928 102C                        l5914 1F9B  
                      l5906 1245                        l4962 13E4                        l4882 08D4  
                      l4874 08B6                        l4866 0895                        l4858 0874  
                      l3898 1AF5                        l3978 1D65                        l4794 1C67  
                      l4786 1C57                        l4778 1C33                        l4954 103D  
                      l4946 1037                        l4938 1032                        l4890 1011  
                      l5916 1FF0                        l5908 129A                        l4980 144A  
                      l4972 1434                        l4964 13FD                        l4876 08CA  
                      l4868 089E                        l3996 1D8A                        l3988 1D73  
                      l4796 1C6B                        l4788 1C5B                        l4956 1041  
                      l4948 1038                        l4892 1013                        l5918 0820  
                      l4990 1461                        l4982 1452                        l4974 1439  
                      l4958 1398                        l4878 08CF                        l3998 1D98  
                      l4798 1C6F                        l4894 1015                        l4886 100D  
                      l4992 146C                        l4984 1454                        l4976 143F  
                      l4968 1416                        l5880 00FB                        l4896 1016  
                      l4888 1010                        l5890 1332                        l5882 0141  
                      l4898 1017                        l5892 1388                        l4988 145E  
                      l5884 0182                        l5894 099E                        l4998 1470  
                      l5886 1420                        l5878 1D0C                        l5896 0A00  
                      l5888 147A                        l5898 178F                        STR_1 213B  
                      STR_2 21A4                        STR_3 203F                        STR_4 2000  
                      STR_5 2165                        STR_6 2054                        STR_7 21B9  
                      STR_8 21C5                        STR_9 20A8                        u3000 0C18  
                      u3001 0C17                        u3010 0C54                        u3011 0C53  
                      u3100 0CAA                        u3020 0C5D                        u3101 0CA9  
                      u3021 0C5B                        u3110 0CAE                        u3030 0C5E  
                      u3111 0CAD                        u3015 0C50                        u3200 0D44  
                      u3120 0CB8                        u3040 0C6E                        u3201 0D43  
                      u3121 0CB7                        u3041 0C6D                        u4010 0F14  
                      u3210 0D4E                        u3050 0C78                        u3211 0D4D  
                      u3051 0C77                        u4100 0F83                        u4020 0F2B  
                      u3300 0D9F                        u3220 0D54                        u3140 0CDE  
                      u4101 0F82                        u4005 0EC2                        u3301 0D9E  
                      u3221 0D53                        u3141 0CDD                        u4110 0F89  
                      u3310 0DA4                        u3230 0D59                        u3150 0D0D  
                      u3070 0C8C                        u4111 0F88                        u4015 0F10  
                      u3311 0DA3                        u3231 0D58                        u3151 0D0C  
                      u3143 0CDA                        u3135 0CBC                        u3071 0C8B  
                      u5000 0894                        u4120 0F95                        u3320 0DB1  
                      u3240 0D5F                        u3160 0D26                        u3080 0C90  
                      u4200 1BDD                        u5001 0893                        u4121 0F94  
                      u4025 0F27                        u3321 0DB0                        u3241 0D5E  
                      u3161 0D25                        u3081 0C8F                        u3065 0C7C  
                      u4201 1BDC                        u4130 0FA3                        u4050 0F53  
                      u3330 0DB6                        u3250 0D66                        u3170 0D2B  
                      u3090 0C95                        u4210 1DCE                        u4051 0F52  
                      u4035 0F36                        u3331 0DB5                        u3251 0D65  
                      u3171 0D2A                        u3091 0C94                        u5100 143F  
                      u5020 08A2                        u3500 10CC                        u4140 0FBE  
                      u3340 0DC3                        u3260 0D6C                        u4220 1DDC  
                      u4300 1ACB                        u3420 1A55                        u5101 143E  
                      u5021 08A1                        u3501 10CB                        u4141 0FBD  
                      u4045 0F49                        u3341 0DC2                        u3261 0D6B  
                      u4221 1DDB                        u4301 1ACA                        u3421 1A54  
                      u3405 1A46                        u5110 1446                        u5030 08A8  
                      u3430 1BF9                        u3350 1AEA                        u4150 0FD6  
                      u4070 0F63                        u3510 1994                        u3270 0D78  
                      u3190 0D3F                        u4230 1DE9                        u4310 1E4D  
                      u5111 1445                        u5031 08A7                        u5015 0898  
                      u3431 1BF8                        u3351 1AE9                        u4151 0FD5  
                      u4135 0F9F                        u4071 0F62                        u3511 1993  
                      u3271 0D77                        u3191 0D3E                        u4215 1DCA  
                      u3415 1A4B                        u5200 1680                        u5120 144A  
                      u5040 08AC                        u3440 1C15                        u4160 0FF0  
                      u4080 0F68                        u3280 0D87                        u3600 1D98  
                      u3520 1D42                        u4240 1DF3                        u4400 1EF8  
                      u4320 1E68                        u5201 167F                        u5121 1449  
                      u5041 08AB                        u3441 1C14                        u3505 10C8  
                      u4161 0FEF                        u4145 0FBA                        u4081 0F67  
                      u4065 0F55                        u3185 0D35                        u3601 1D97  
                      u3521 1D41                        u4241 1DF2                        u4321 1E67  
                      u5210 1687                        u5130 1452                        u5050 08C0  
                      u3450 1C2F                        u3370 1AFA                        u4090 0F7C  
                      u3290 0D96                        u3610 1D9D                        u3530 1D58  
                      u4250 1E03                        u4410 1F02                        u4330 1E6E  
                      u4170 1BA4                        u5211 1686                        u5131 1451  
                      u3451 1C2E                        u3371 1AF9                        u4155 0FD2  
                      u4091 0F7B                        u3291 0D95                        u3611 1D9C  
                      u4251 1E02                        u4235 1DE5                        u4411 1F01  
                      u4331 1E6D                        u4315 1E49                        u4171 1BA3  
                      u5220 168B                        u5300 135C                        u5140 1459  
                      u5060 08CF                        u3700 0ABE                        u3620 0A19  
                      u3460 105A                        u3540 1D6B                        u4260 1E10  
                      u4340 1E7C                        u4420 1B4A                        u2900 1C9D  
                      u3380 1B23                        u4180 1BAF                        u4500 0225  
                      u5221 168A                        u5301 135B                        u5141 1458  
                      u5061 08CE                        u3701 0ABD                        u3621 0A18  
                      u3461 1059                        u3365 1AEF                        u3285 0D83  
                      u3541 1D6A                        u4405 1EF4                        u4325 1E64  
                      u4421 1B49                        u2901 1C9C                        u3381 1B22  
                      u4181 1BAE                        u4501 0224                        u4430 1B52  
                      u5230 1693                        u5310 1364                        u5150 145D  
                      u5070 08D3                        u3630 0A1F                        u3470 1076  
                      u3550 1D72                        u4270 1E1B                        u4350 1E9A  
                      u2910 1CBD                        u4190 1BD8                        u4510 022B  
                      u3390 1A41                        u4431 1B51                        u5231 1692  
                      u5311 1363                        u5151 145C                        u5071 08D2  
                      u5055 08BC                        u3631 0A1E                        u3455 1C2B  
                      u3471 1075                        u3551 1D71                        u3535 1D54  
                      u4271 1E19                        u4351 1E99                        u2911 1CBC  
                      u4191 1BD7                        u4511 022A                        u3391 1A40  
                      u4440 1B59                        u5400 1FD4                        u5240 169A  
                      u5320 136B                        u5080 1430                        u3640 0A24  
                      u3480 1082                        u2920 0BC2                        u4280 1E1C  
                      u4360 1EA8                        u4600 03F6                        u4520 0262  
                      u5160 1589                        u4441 1B58                        u5401 1FD3  
                      u5241 1699                        u5321 136A                        u5081 142F  
                      u3641 0A23                        u3481 1081                        u2921 0BC1  
                      u4265 1E0C                        u4345 1E78                        u4601 03F5  
                      u4521 0261                        u5161 1588                        u4450 1B60  
                      u5410 1FD8                        u5250 169E                        u5330 136F  
                      u5090 1434                        u3810 0B22                        u3730 0AD0  
                      u3650 0A42                        u3490 109E                        u2930 0BC8  
                      u3570 1D82                        u4370 1EB2                        u4290 1A3A  
                      u4610 0411                        u4530 0268                        u5170 158D  
                      u4451 1B5F                        u5411 1FD7                        u5251 169D  
                      u5331 136E                        u5091 1433                        u3811 0B21  
                      u3731 0ACF                        u3715 0ABF                        u3651 0A41  
                      u3491 109D                        u2931 0BC7                        u3571 1D81  
                      u4371 1EB1                        u2915 1CB9                        u4195 1BD4  
                      u4291 1A39                        u4611 0410                        u4531 0267  
                      u5171 158C                        u4460 1B67                        u5340 1FAB  
                      u5420 1168                        u5500 1255                        u5180 1671  
                      u5260 1342                        u3900 0BAB                        u3820 0B27  
                      u3660 0A48                        u2940 0BCD                        u3580 1D89  
                      u4380 1ED8                        u4700 0695                        u4620 0415  
                      u4540 02AF                        u4461 1B66                        u5341 1FAA  
                      u5421 1167                        u5501 1254                        u5181 1670  
                      u5261 1341                        u3901 0BAA                        u3821 0B26  
                      u3805 0B14                        u3725 0AC6                        u3661 0A47  
                      u2941 0BCC                        u3581 1D88                        u3565 1D74  
                      u4365 1EA4                        u4701 0694                        u4621 0414  
                      u4541 02AE                        u5350 1FAF                        u5430 116C  
                      u5510 1259                        u5190 1675                        u5270 1346  
                      u3830 0B3B                        u3750 0AEA                        u3670 0A4D  
                      u3910 0DCF                        u2950 0BE9                        u4390 1EE2  
                      u4710 06B1                        u4630 0425                        u4550 0311  
                      u4470 01DD                        u5351 1FAE                        u5431 116B  
                      u5511 1258                        u5191 1674                        u5271 1345  
                      u3831 0B3A                        u3751 0AE9                        u3671 0A4C  
                      u3911 0DCE                        u2951 0BE8                        u4391 1EE1  
                      u4711 06B0                        u4631 0424                        u4551 0310  
                      u4471 01DC                        u5360 1FBA                        u5440 1177  
                      u5520 1264                        u5600 17B1                        u5280 1351  
                      u3840 0B42                        u3760 0AFD                        u3680 0A68  
                      u3920 0DD5                        u2960 0BF0                        u2880 1C88  
                      u4720 06B5                        u4640 0517                        u4560 0338  
                      u4480 0204                        u4800 0069                        u5361 1FB9  
                      u5441 1176                        u5521 1263                        u5601 17B0  
                      u5281 1350                        u3841 0B41                        u3761 0AFC  
                      u3745 0AD2                        u3681 0A67                        u3921 0DD4  
                      u2961 0BEF                        u4385 1ED4                        u2881 1C87  
                      u4721 06B4                        u4705 0691                        u4641 0516  
                      u4561 0337                        u4481 0203                        u4801 0068  
                      u4810 1B7B                        u5370 1FC1                        u5450 117E  
                      u5530 126B                        u5610 17B8                        u5290 1358  
                      u3850 0B48                        u3770 0B05                        u3690 0A86  
                      u3930 0DDA                        u2970 0BF6                        u2890 1C8D  
                      u4730 06E0                        u4650 0569                        u4570 0361  
                      u4490 0209                        u4811 1B7A                        u5371 1FC0  
                      u5451 117D                        u5531 126A                        u5611 17B7  
                      u5291 1357                        u3851 0B47                        u3771 0B04  
                      u3755 0AE6                        u3691 0A85                        u3931 0DD9  
                      u2971 0BF5                        u3595 1D8B                        u2891 1C8C  
                      u4731 06DF                        u4651 0568                        u4571 0360  
                      u4491 0208                        u4820 1B82                        u5380 1FC5  
                      u5460 1182                        u5540 126F                        u5620 17BC  
                      u5700 09CB                        u3860 0B54                        u3940 0DF7  
                      u2980 0BFB                        u4740 0780                        u4660 058B  
                      u4580 03C3                        u4821 1B81                        u5381 1FC4  
                      u5461 1181                        u5541 126E                        u5621 17BB  
                      u5701 09CA                        u3861 0B53                        u3941 0DF6  
                      u2981 0BFA                        u4741 077F                        u4661 058A  
                      u4645 0513                        u4581 03C2                        u4830 1B89  
                      u5390 1FCD                        u5470 118A                        u5550 1277  
                      u5630 17C4                        u5710 09D3                        u3870 0B62  
                      u3790 0B12                        u3950 0DFD                        u2990 0C14  
                      u4750 078E                        u4670 0590                        u4590 03EB  
                      u4910 1A97                        u4831 1B88                        u5391 1FCC  
                      u5471 1189                        u5551 1276                        u5631 17C3  
                      u5711 09D2                        u3791 0B11                        u3951 0DFC  
                      u2991 0C13                        u4751 078D                        u4671 058F  
                      u4591 03EA                        u4911 1A96                        u4840 1B90  
                      u5480 1191                        u5560 127E                        u5640 17CB  
                      u5720 09DA                        u4920 19DC                        u3880 0B7D  
                      u3960 0E02                        u4760 07B4                        u4680 05EF  
                      u4841 1B8F                        u4905 19BA                        u5481 1190  
                      u5561 127D                        u5641 17CA                        u5721 09D9  
                      u4921 19DB                        u3881 0B7C                        u3785 0B08  
                      u3961 0E01                        u4761 07B2                        u4745 077C  
                      u4681 05EE                        u4930 1A1B                        u5490 1195  
                      u5570 1282                        u5650 17CF                        u5730 09DE  
                      u3890 0B98                        u3970 0E19                        u4770 07B5  
                      u4690 0626                        u4931 1A1A                        u5491 1194  
                      u5571 1281                        u5651 17CE                        u5731 09DD  
                      u3891 0B97                        u3875 0B5E                        u3971 0E18  
                      u4755 078A                        u4691 0625                        u5580 17A2  
                      u5660 09B1                        u4940 0839                        u3980 0E1E  
                      u4780 07C0                        u4860 0083                        u5581 17A1  
                      u5661 09B0                        u4941 0838                        u3885 0B79  
                      u3981 0E1D                        u4781 07BF                        u4861 0082  
                      u5590 17A6                        u5670 09B5                        u4950 083D  
                      u4790 0022                        u4870 00AA                        u4855 19E5  
                      u5591 17A5                        u5671 09B4                        u4951 083C  
                      u3895 0B94                        u4791 0021                        u4871 00A9  
                      u5807 1595                        u5680 09C0                        u4960 085D  
                      u4880 00C5                        u5817 1B97                        u5681 09BF  
                      u4961 085C                        u4881 00C4                        u5690 09C7  
                      u4890 0110                        u5827 19F8                        u5691 09C6  
                      u3995 0E97                        u4891 010F                        u4980 087A  
                      u5837 1B6E                        u4981 0879                        u5757 1D2F  
                      u4975 086E                        u5767 1C43                        u5777 1C4E  
                      u4995 0888                        u5787 1C58                        u5797 1C7E  
                      _lm35 012C                        _dbuf 01A0                        _labs 1ABA  
                      _main 1CDA                        _prec 0132                        pad@i 0025  
                      pad@p 007C                        fsr0h 0005                        fsr1h 0007  
                      indf0 0000                        fsr0l 0004                        indf1 0001  
                      fsr1l 0006                        pad@w 0027                        btemp 007E  
          __end_of_ADC_Init 19A2               ___fpclassifyf 1DA9                        start 0002  
           ___fldiv@new_exp 004C               ?_LCD_Write_Cp 0070                 Load_Cmd@cmd 0070  
                     ??_pad 0024            __end_of_LCD_Init 1C83               ??_MenuMotores 0021  
             ___fltol@sign1 0078                       ?_labs 0070             __end_of___fladd 0DC5  
                     ?_main 0070             __end_of___fldiv 0BB9             __end_of___flneg 1997  
                     STR_10 218F                       STR_11 202A                       STR_20 2000  
                     STR_12 2000                       STR_13 2150                       STR_21 20D2  
                     STR_22 207E                       STR_30 2126                       STR_14 2069  
                     STR_23 2015                       STR_31 217A                       STR_15 2093  
                     STR_32 2000                       STR_24 2000                       STR_16 2000  
                     STR_40 21D4                       STR_33 2111                       STR_25 20E7  
                     STR_17 20BD                       STR_26 207E                       STR_34 2126  
                     STR_18 207E                       STR_27 2015                       STR_35 217A  
                     STR_19 2015                       STR_36 2000                       STR_28 2000  
                     STR_37 21D0                       STR_29 20FC             __end_of___flmul 1000  
           __end_of___flsub 1A7A             __end_of___fltol 1DA9                vfpfcnvrt@fmt 006D  
          __end_of_MA_TurnL 197C            __end_of_MA_TurnR 1980            __end_of_MB_TurnL 1988  
          __end_of_MB_TurnR 198C      __end_of_LCD_Set_Cursor 0833                       _cMenu 0136  
                     _flags 00EE         read_prec_or_width@c 0020         read_prec_or_width@n 0021  
             ?_MenuSensores 0070                       _fputc 1C83                       _fputs 1AFF  
                     labs@a 0070                       pad@fp 0029                       _width 0130  
                     _putch 0005                       status 0003                       wtemp0 007E  
           __end_of_sprintf 1ABA              ?___fpclassifyf 0070                  _MenuMOTORA 16CE  
                _MenuMOTORB 08DD              ??_LCD_Write_Cp 0071             __initialization 07DB  
            _LCD_Write_Text 19FD                __end_of_labs 1ADC                __end_of_main 1D39  
          __end_of_MenuPPAL 148A            __end_of_Load_Cmd 1B74            __end_of_MenuLeds 16CE  
                    ??_labs 0074                      ??_main 00EC                   ??_LCD_Cmd 0071  
         __end_of_LCD_Write 100D  __end_of_read_prec_or_width 006E             ?_LCD_Set_Cursor 0075  
            ??_MenuSensores 00EA         __end_of_MenuMotores 1398                      ?_fputc 0070  
                    ?_fputs 0078                      _ADRESH 009C                      _ADRESL 009B  
                    ?_putch 0070                      _BORCON 0116                      _MA_Off 1974  
                    _OSCCON 0099                      _MB_Off 1980            __end_of___xxtofl 08DD  
    __end_of_LCD_Write_Text 1A1C                      _MenuL1 1F13                      _MenuL2 10D0  
                    _MenuL3 11BD                LCD_Write@col 007A                vfprintf@cfmt 00E1  
                    ___flge 1045                      ___fleq 1BE5                   ??___fladd 0020  
                    ___wmul 1A3B                   ??___fldiv 0042                   ??___flneg 0074  
                 ??___flmul 0028                   ??___flsub 007E                   ??___fltol 0074  
                    _efgtoa 01AC                      _conver 0134                      _floorf 1E28  
                    _memcpy 1B24        read_prec_or_width@ap 0076                      _strLCD 0137  
                    pad@buf 007B                      _strcpy 1A1C                      fputc@c 0070  
                    fputs@c 0020                      fputs@i 0021                      fputs@s 0023  
           ___fpclassifyf@e 0020                   ?_ADC_Init 0070             ___fpclassifyf@u 0022  
           ___fpclassifyf@x 0070                      putch@c 0070            __end_of_vfprintf 1A9A  
                 ??_sprintf 00E9               _ADC_Get_Value 19CB                  ___flge@ff1 003A  
                ___flge@ff2 003E             ??___fpclassifyf 0074                ___xxtofl@arg 007A  
              ___xxtofl@exp 0079                ___xxtofl@val 0070                  ___fleq@ff1 0070  
                ___fleq@ff2 0074     __end_of__initialization 07FD                   ?_LCD_Init 0070  
                ___flneg@f1 0070                  ___fltol@f1 0070                 ?_MenuMOTORA 0070  
               ?_MenuMOTORB 0070             ?_LCD_Write_Text 007A              __pcstackCOMMON 0070  
                 ?_MA_TurnL 0070                   ?_MA_TurnR 0070                   ?_MB_TurnL 0070  
                 ?_MB_TurnR 0070                __pidataBANK1 0006                __pidataBANK2 19A2  
             __end_of_fputc 1CDA               __end_of_fputs 1B24               __end_of_putch 0006  
            LCD_Cmd@NibbleH 0072              LCD_Cmd@NibbleL 0073           __end_of_Load_Data 1B9D  
               _MenuMotores 12AA                  _SystemInit 100D                  ??_ADC_Init 0070  
      __end_of_LCD_Write_Cp 19CB               Load_Data@data 0070              ?_ADC_Get_Value 0070  
                   ??_fputc 0073                     ??_fputs 0079                     ??_putch 0070  
                __pbssBANK1 00EE                  __pbssBANK2 0120                  __pbssBANK3 01A0  
                 ?_MenuPPAL 0070                   ?_Load_Cmd 0070                     ?_MA_Off 0070  
                   ?_MB_Off 0070                   ?_MenuLeds 0070                  ??_LCD_Init 0071  
                   ?_MenuL1 0070                     ?_MenuL2 0070                     ?_MenuL3 0070  
         __end_of__Umul8_16 1AFF                  __pmaintext 1CDA                  ??_MA_TurnL 0070  
                ??_MA_TurnR 0070                  ??_MB_TurnL 0070                     ?___flge 003A  
                ??_MB_TurnR 0070                     ?___fleq 0070                     ?___wmul 0070  
      __end_of_MenuSensores 159D                     ?_efgtoa 0068                     ?_floorf 0054  
                   ?_memcpy 0070                     ?_strcpy 0070                     _LCD_Cmd 19E1  
                 ?___xxtofl 0070                     _OSCTUNE 0098                  ??_MenuPPAL 0021  
                ??_Load_Cmd 0070                  ??_MenuLeds 0021               LCD_Write@fila 007C  
                   ___fladd 0BB9                     ___fldiv 0A0F                     ___flneg 198C  
                   ___flmul 0DC5                     ___flsub 1A5A                     ___fltol 1D39  
                 ?_vfprintf 00DD            ??_LCD_Set_Cursor 0076                     __ptext1 100D  
                   __ptext2 1C33                     __ptext3 1997                     __ptext4 148A  
                   __ptext5 1A9A                     __ptext6 1A7A                     __ptext7 006E  
                   __ptext8 000D                     __ptext9 1A3B       read_prec_or_width@fmt 0023  
               ?_SystemInit 0070                  ??___xxtofl 0074             ??_ADC_Get_Value 0072  
                   efgtoa@c 006C                     efgtoa@d 00AF                     efgtoa@e 00B4  
                   efgtoa@f 0068                     efgtoa@g 00C9                     efgtoa@h 00BE  
                   efgtoa@i 00BC                     efgtoa@l 00C2                     efgtoa@m 00B1  
                   efgtoa@n 00C7                     efgtoa@p 00A6                     efgtoa@t 00A8  
                   efgtoa@u 00CD                     efgtoa@w 00B6                     _sprintf 1A9A  
                   clrloop0 0801                   _LCD_Write 1001        end_of_initialization 07FD  
                   floorf@e 0062                     floorf@m 005E                     floorf@u 0064  
                   floorf@x 0054           LCD_Write_Cp@letra 0074                     memcpy@d 0076  
                   memcpy@n 0071                     memcpy@s 0077                     fputc@fp 0072  
                   init_ram 0007                     fputs@fp 0078                     initloop 0008  
        _read_prec_or_width 000D           __end_of_vfpfcnvrt 01AC                  efgtoa@mode 00AD  
                efgtoa@sign 00C6         ?_read_prec_or_width 0076            vfpfcnvrt@convarg 00D5  
                ??_vfprintf 006F                     strcpy@d 0076                     strcpy@s 0074  
                 _PORTBbits 000D                 ___fladd@grs 007B               ___xxtofl@sign 0078  
         LCD_Write_Text@col 007A                   _TRISAbits 008C                   _TRISBbits 008D  
                 _TRISDbits 008F        ??_read_prec_or_width 0078                 ___fldiv@grs 004E  
               ___fldiv@rem 0047                  ?_LCD_Write 007A            ??_LCD_Write_Text 007D  
               ___flmul@grs 002E                  LCD_Cmd@cmd 0074              __end_of_MA_Off 1978  
            __end_of_MB_Off 1984                ??_MenuMOTORA 0021                ??_MenuMOTORB 0021  
              _LCD_Write_Cp 19B6              __end_of_MenuL1 2000              __end_of_MenuL2 11BD  
            __end_of_MenuL3 12AA              __end_of___flge 10D0              __end_of___fleq 1C33  
               vfpfcnvrt@ap 006E                 vfpfcnvrt@cp 00DB                 vfpfcnvrt@fp 00D9  
            __end_of___wmul 1A5A              __end_of_efgtoa 07DB              __end_of_floorf 1F13  
            __end_of_memcpy 1B4B                ?_MenuMotores 0070                  floorf@F526 0120  
            __end_of_strcpy 1A3B         start_initialization 07DB                   _Load_Data 1B74  
        __end_of_MenuMOTORA 1800          __end_of_MenuMOTORB 0A0F                 __end_of_pad 1BE5  
              _MenuSensores 148A                    ??_MA_Off 0070                    ??_MB_Off 0070  
     __end_of___fpclassifyf 1E28                    ??_MenuL1 0021                    ??_MenuL2 0021  
                  ??_MenuL3 0021                 vfprintf@fmt 00DD                    ??___flge 0042  
                  ??___fleq 0078                    ??___wmul 0074                    ??_efgtoa 00A0  
                 __Umul8_16 1ADC                 __pdataBANK1 00EF                 __pdataBANK2 0137  
                  ??_floorf 0058                    ??_memcpy 0073                    ??_strcpy 0072  
                 ___fladd@a 0074                   ___fladd@b 0070                    ?_LCD_Cmd 0070  
                 ___fldiv@a 003A                   ___fldiv@b 003E                   ___flmul@a 0024  
                 ___flmul@b 0020                   ___flsub@a 003A                   ___flsub@b 003E  
                ?_Load_Data 0070                   ___latbits 0003               __pcstackBANK0 0020  
             __pcstackBANK1 00A0               __pcstackBANK2 014B                 ??_LCD_Write 007C  
               _efgtoa$1158 00AA                    ?___fladd 0070                    ?___fldiv 003A  
                  ?___flneg 0070                    ?___flmul 0020                    ?___flsub 003A  
                  ?___fltol 0070                  ?__Umul8_16 0070                ??_SystemInit 0075  
                  _ADC_Init 1997                    ?_sprintf 00E3                    _LCD_Init 1C33  
            ___wmul@product 0074                    _LATAbits 010C                    _LATBbits 010D  
                  _LATDbits 010F                   clear_ram0 0800                    _MA_TurnL 1978  
                  _MA_TurnR 197C          __end_of_SystemInit 1045                    _MB_TurnL 1984  
                  _MB_TurnR 1988                   _vfpfcnvrt 006E                  _ADCON0bits 009D  
                _ADCON1bits 009E           ___wmul@multiplier 0070         LCD_Write_Cp@NibbleH 0072  
       LCD_Write_Cp@NibbleL 0073                 ??_Load_Data 0070       __end_of_ADC_Get_Value 19E1  
                vfpfcnvrt@c 00DA                    _MenuPPAL 1398                    _Load_Cmd 1B4B  
                  _MenuLeds 159D                   memcpy@tmp 0074                  vfprintf@ap 00DF  
                vfprintf@fp 00E0              LCD_Write@letra 007B                 ??__Umul8_16 0072  
                ?_vfpfcnvrt 006D                  _ANSELAbits 018C                  _ANSELBbits 018D  
        ___fpclassifyf@F465 0124                  sprintf@fmt 00E3                    ___xxtofl 0833  
                  __ptext10 01AC                    __ptext11 1A1C                    __ptext20 1D39  
                  __ptext12 1B9D                    __ptext21 1A5A                    __ptext13 1AFF  
                  __ptext30 19CB                    __ptext22 0BB9                    __ptext14 1C83  
                  __ptext31 1398                    __ptext23 198C                    __ptext15 0005  
                  __ptext40 1974                    __ptext32 12AA                    __ptext24 0DC5  
                  __ptext16 1B24                    __ptext41 159D                    __ptext33 08DD  
                  __ptext25 1ADC                    __ptext17 1ABA                    __ptext50 19E1  
                  __ptext42 11BD                    __ptext34 1988                    __ptext26 1045  
                  __ptext18 1E28                    __ptext51 1B4B                    __ptext43 10D0  
                  __ptext35 1984                    __ptext27 1BE5                    __ptext19 1DA9  
                  __ptext44 1F13                    __ptext36 1980                    __ptext28 0A0F  
                  __ptext45 19FD                    __ptext37 16CE                    __ptext29 0833  
                  __ptext46 1001                    __ptext38 197C                    __ptext47 19B6  
                  __ptext39 1978                    __ptext48 1B74                    __ptext49 0806  
                strcpy@dest 0077                    efgtoa@fp 00B3                    efgtoa@ne 00A4  
                  efgtoa@pp 00AC                    efgtoa@ou 00B8                    _vfprintf 1A7A  
                  memcpy@d1 0075                    memcpy@s1 0070              __pstringtext10 20BD  
            __pstringtext11 20D2              __pstringtext20 218F              __pstringtext12 20E7  
            __pstringtext21 21A4              __pstringtext13 20FC              __pstringtext22 21B9  
            __pstringtext14 2111              __pstringtext23 21C5              __pstringtext15 2126  
            __pstringtext24 21D0              __pstringtext16 213B              __pstringtext25 21D4  
            __pstringtext17 2150              __pstringtext26 0000              __pstringtext18 2165  
            __pstringtext19 217A                   sprintf@ap 014C                   strcpy@src 0070  
               efgtoa@nmode 00AE          LCD_Set_Cursor@fila 0078                 ??_vfpfcnvrt 00D1  
             __pstringtext1 2000               __pstringtext2 2015               __pstringtext3 202A  
             __pstringtext4 203F               __pstringtext5 2054               __pstringtext6 2069  
             __pstringtext7 207E               __pstringtext8 2093               __pstringtext9 20A8  
    __Umul8_16@multiplicand 0070                    sprintf@f 014D                    sprintf@s 014B  
         LCD_Set_Cursor@col 0075           LCD_Set_Cursor@pos 0079               ___fladd@signs 0078  
              ___fladd@aexp 0079                ___fladd@bexp 007A        __Umul8_16@multiplier 0078  
        LCD_Write_Text@fila 0020          LCD_Write_Text@text 007B           __Umul8_16@product 0074  
